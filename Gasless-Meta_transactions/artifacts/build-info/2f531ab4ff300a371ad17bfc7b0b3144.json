{"id":"2f531ab4ff300a371ad17bfc7b0b3144","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/metatx/ERC2771Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (metatx/ERC2771Context.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Context variant with ERC2771 support.\n *\n * WARNING: Avoid using this pattern in contracts that rely in a specific calldata length as they'll\n * be affected by any forwarder whose `msg.data` is suffixed with the `from` address according to the ERC2771\n * specification adding the address size in bytes (20) to the calldata size. An example of an unexpected\n * behavior could be an unintended fallback (or another function) invocation while trying to invoke the `receive`\n * function only accessible if `msg.data.length == 0`.\n *\n * WARNING: The usage of `delegatecall` in this contract is dangerous and may result in context corruption.\n * Any forwarded request to this contract triggering a `delegatecall` to itself will result in an invalid {_msgSender}\n * recovery.\n */\nabstract contract ERC2771Context is Context {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable _trustedForwarder;\n\n    /**\n     * @dev Initializes the contract with a trusted forwarder, which will be able to\n     * invoke functions on this contract on behalf of other accounts.\n     *\n     * NOTE: The trusted forwarder can be replaced by overriding {trustedForwarder}.\n     */\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor(address trustedForwarder_) {\n        _trustedForwarder = trustedForwarder_;\n    }\n\n    /**\n     * @dev Returns the address of the trusted forwarder.\n     */\n    function trustedForwarder() public view virtual returns (address) {\n        return _trustedForwarder;\n    }\n\n    /**\n     * @dev Indicates whether any particular address is the trusted forwarder.\n     */\n    function isTrustedForwarder(address forwarder) public view virtual returns (bool) {\n        return forwarder == trustedForwarder();\n    }\n\n    /**\n     * @dev Override for `msg.sender`. Defaults to the original `msg.sender` whenever\n     * a call is not performed by the trusted forwarder or the calldata length is less than\n     * 20 bytes (an address length).\n     */\n    function _msgSender() internal view virtual override returns (address) {\n        uint256 calldataLength = msg.data.length;\n        uint256 contextSuffixLength = _contextSuffixLength();\n        if (isTrustedForwarder(msg.sender) && calldataLength >= contextSuffixLength) {\n            return address(bytes20(msg.data[calldataLength - contextSuffixLength:]));\n        } else {\n            return super._msgSender();\n        }\n    }\n\n    /**\n     * @dev Override for `msg.data`. Defaults to the original `msg.data` whenever\n     * a call is not performed by the trusted forwarder or the calldata length is less than\n     * 20 bytes (an address length).\n     */\n    function _msgData() internal view virtual override returns (bytes calldata) {\n        uint256 calldataLength = msg.data.length;\n        uint256 contextSuffixLength = _contextSuffixLength();\n        if (isTrustedForwarder(msg.sender) && calldataLength >= contextSuffixLength) {\n            return msg.data[:calldataLength - contextSuffixLength];\n        } else {\n            return super._msgData();\n        }\n    }\n\n    /**\n     * @dev ERC-2771 specifies the context as being a single address (20 bytes).\n     */\n    function _contextSuffixLength() internal view virtual override returns (uint256) {\n        return 20;\n    }\n}\n"},"@openzeppelin/contracts/metatx/ERC2771Forwarder.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (metatx/ERC2771Forwarder.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC2771Context} from \"./ERC2771Context.sol\";\nimport {ECDSA} from \"../utils/cryptography/ECDSA.sol\";\nimport {EIP712} from \"../utils/cryptography/EIP712.sol\";\nimport {Nonces} from \"../utils/Nonces.sol\";\nimport {Address} from \"../utils/Address.sol\";\n\n/**\n * @dev A forwarder compatible with ERC2771 contracts. See {ERC2771Context}.\n *\n * This forwarder operates on forward requests that include:\n *\n * * `from`: An address to operate on behalf of. It is required to be equal to the request signer.\n * * `to`: The address that should be called.\n * * `value`: The amount of native token to attach with the requested call.\n * * `gas`: The amount of gas limit that will be forwarded with the requested call.\n * * `nonce`: A unique transaction ordering identifier to avoid replayability and request invalidation.\n * * `deadline`: A timestamp after which the request is not executable anymore.\n * * `data`: Encoded `msg.data` to send with the requested call.\n *\n * Relayers are able to submit batches if they are processing a high volume of requests. With high\n * throughput, relayers may run into limitations of the chain such as limits on the number of\n * transactions in the mempool. In these cases the recommendation is to distribute the load among\n * multiple accounts.\n *\n * NOTE: Batching requests includes an optional refund for unused `msg.value` that is achieved by\n * performing a call with empty calldata. While this is within the bounds of ERC-2771 compliance,\n * if the refund receiver happens to consider the forwarder a trusted forwarder, it MUST properly\n * handle `msg.data.length == 0`. `ERC2771Context` in OpenZeppelin Contracts versions prior to 4.9.3\n * do not handle this properly.\n *\n * ==== Security Considerations\n *\n * If a relayer submits a forward request, it should be willing to pay up to 100% of the gas amount\n * specified in the request. This contract does not implement any kind of retribution for this gas,\n * and it is assumed that there is an out of band incentive for relayers to pay for execution on\n * behalf of signers. Often, the relayer is operated by a project that will consider it a user\n * acquisition cost.\n *\n * By offering to pay for gas, relayers are at risk of having that gas used by an attacker toward\n * some other purpose that is not aligned with the expected out of band incentives. If you operate a\n * relayer, consider whitelisting target contracts and function selectors. When relaying ERC-721 or\n * ERC-1155 transfers specifically, consider rejecting the use of the `data` field, since it can be\n * used to execute arbitrary code.\n */\ncontract ERC2771Forwarder is EIP712, Nonces {\n    using ECDSA for bytes32;\n\n    struct ForwardRequestData {\n        address from;\n        address to;\n        uint256 value;\n        uint256 gas;\n        uint48 deadline;\n        bytes data;\n        bytes signature;\n    }\n\n    bytes32 internal constant _FORWARD_REQUEST_TYPEHASH =\n        keccak256(\n            \"ForwardRequest(address from,address to,uint256 value,uint256 gas,uint256 nonce,uint48 deadline,bytes data)\"\n        );\n\n    /**\n     * @dev Emitted when a `ForwardRequest` is executed.\n     *\n     * NOTE: An unsuccessful forward request could be due to an invalid signature, an expired deadline,\n     * or simply a revert in the requested call. The contract guarantees that the relayer is not able to force\n     * the requested call to run out of gas.\n     */\n    event ExecutedForwardRequest(address indexed signer, uint256 nonce, bool success);\n\n    /**\n     * @dev The request `from` doesn't match with the recovered `signer`.\n     */\n    error ERC2771ForwarderInvalidSigner(address signer, address from);\n\n    /**\n     * @dev The `requestedValue` doesn't match with the available `msgValue`.\n     */\n    error ERC2771ForwarderMismatchedValue(uint256 requestedValue, uint256 msgValue);\n\n    /**\n     * @dev The request `deadline` has expired.\n     */\n    error ERC2771ForwarderExpiredRequest(uint48 deadline);\n\n    /**\n     * @dev The request target doesn't trust the `forwarder`.\n     */\n    error ERC2771UntrustfulTarget(address target, address forwarder);\n\n    /**\n     * @dev See {EIP712-constructor}.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /**\n     * @dev Returns `true` if a request is valid for a provided `signature` at the current block timestamp.\n     *\n     * A transaction is considered valid when the target trusts this forwarder, the request hasn't expired\n     * (deadline is not met), and the signer matches the `from` parameter of the signed request.\n     *\n     * NOTE: A request may return false here but it won't cause {executeBatch} to revert if a refund\n     * receiver is provided.\n     */\n    function verify(ForwardRequestData calldata request) public view virtual returns (bool) {\n        (bool isTrustedForwarder, bool active, bool signerMatch, ) = _validate(request);\n        return isTrustedForwarder && active && signerMatch;\n    }\n\n    /**\n     * @dev Executes a `request` on behalf of `signature`'s signer using the ERC-2771 protocol. The gas\n     * provided to the requested call may not be exactly the amount requested, but the call will not run\n     * out of gas. Will revert if the request is invalid or the call reverts, in this case the nonce is not consumed.\n     *\n     * Requirements:\n     *\n     * - The request value should be equal to the provided `msg.value`.\n     * - The request should be valid according to {verify}.\n     */\n    function execute(ForwardRequestData calldata request) public payable virtual {\n        // We make sure that msg.value and request.value match exactly.\n        // If the request is invalid or the call reverts, this whole function\n        // will revert, ensuring value isn't stuck.\n        if (msg.value != request.value) {\n            revert ERC2771ForwarderMismatchedValue(request.value, msg.value);\n        }\n\n        if (!_execute(request, true)) {\n            revert Address.FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Batch version of {execute} with optional refunding and atomic execution.\n     *\n     * In case a batch contains at least one invalid request (see {verify}), the\n     * request will be skipped and the `refundReceiver` parameter will receive back the\n     * unused requested value at the end of the execution. This is done to prevent reverting\n     * the entire batch when a request is invalid or has already been submitted.\n     *\n     * If the `refundReceiver` is the `address(0)`, this function will revert when at least\n     * one of the requests was not valid instead of skipping it. This could be useful if\n     * a batch is required to get executed atomically (at least at the top-level). For example,\n     * refunding (and thus atomicity) can be opt-out if the relayer is using a service that avoids\n     * including reverted transactions.\n     *\n     * Requirements:\n     *\n     * - The sum of the requests' values should be equal to the provided `msg.value`.\n     * - All of the requests should be valid (see {verify}) when `refundReceiver` is the zero address.\n     *\n     * NOTE: Setting a zero `refundReceiver` guarantees an all-or-nothing requests execution only for\n     * the first-level forwarded calls. In case a forwarded request calls to a contract with another\n     * subcall, the second-level call may revert without the top-level call reverting.\n     */\n    function executeBatch(\n        ForwardRequestData[] calldata requests,\n        address payable refundReceiver\n    ) public payable virtual {\n        bool atomic = refundReceiver == address(0);\n\n        uint256 requestsValue;\n        uint256 refundValue;\n\n        for (uint256 i; i < requests.length; ++i) {\n            requestsValue += requests[i].value;\n            bool success = _execute(requests[i], atomic);\n            if (!success) {\n                refundValue += requests[i].value;\n            }\n        }\n\n        // The batch should revert if there's a mismatched msg.value provided\n        // to avoid request value tampering\n        if (requestsValue != msg.value) {\n            revert ERC2771ForwarderMismatchedValue(requestsValue, msg.value);\n        }\n\n        // Some requests with value were invalid (possibly due to frontrunning).\n        // To avoid leaving ETH in the contract this value is refunded.\n        if (refundValue != 0) {\n            // We know refundReceiver != address(0) && requestsValue == msg.value\n            // meaning we can ensure refundValue is not taken from the original contract's balance\n            // and refundReceiver is a known account.\n            Address.sendValue(refundReceiver, refundValue);\n        }\n    }\n\n    /**\n     * @dev Validates if the provided request can be executed at current block timestamp with\n     * the given `request.signature` on behalf of `request.signer`.\n     */\n    function _validate(\n        ForwardRequestData calldata request\n    ) internal view virtual returns (bool isTrustedForwarder, bool active, bool signerMatch, address signer) {\n        (bool isValid, address recovered) = _recoverForwardRequestSigner(request);\n\n        return (\n            _isTrustedByTarget(request.to),\n            request.deadline >= block.timestamp,\n            isValid && recovered == request.from,\n            recovered\n        );\n    }\n\n    /**\n     * @dev Returns a tuple with the recovered the signer of an EIP712 forward request message hash\n     * and a boolean indicating if the signature is valid.\n     *\n     * NOTE: The signature is considered valid if {ECDSA-tryRecover} indicates no recover error for it.\n     */\n    function _recoverForwardRequestSigner(\n        ForwardRequestData calldata request\n    ) internal view virtual returns (bool, address) {\n        (address recovered, ECDSA.RecoverError err, ) = _hashTypedDataV4(\n            keccak256(\n                abi.encode(\n                    _FORWARD_REQUEST_TYPEHASH,\n                    request.from,\n                    request.to,\n                    request.value,\n                    request.gas,\n                    nonces(request.from),\n                    request.deadline,\n                    keccak256(request.data)\n                )\n            )\n        ).tryRecover(request.signature);\n\n        return (err == ECDSA.RecoverError.NoError, recovered);\n    }\n\n    /**\n     * @dev Validates and executes a signed request returning the request call `success` value.\n     *\n     * Internal function without msg.value validation.\n     *\n     * Requirements:\n     *\n     * - The caller must have provided enough gas to forward with the call.\n     * - The request must be valid (see {verify}) if the `requireValidRequest` is true.\n     *\n     * Emits an {ExecutedForwardRequest} event.\n     *\n     * IMPORTANT: Using this function doesn't check that all the `msg.value` was sent, potentially\n     * leaving value stuck in the contract.\n     */\n    function _execute(\n        ForwardRequestData calldata request,\n        bool requireValidRequest\n    ) internal virtual returns (bool success) {\n        (bool isTrustedForwarder, bool active, bool signerMatch, address signer) = _validate(request);\n\n        // Need to explicitly specify if a revert is required since non-reverting is default for\n        // batches and reversion is opt-in since it could be useful in some scenarios\n        if (requireValidRequest) {\n            if (!isTrustedForwarder) {\n                revert ERC2771UntrustfulTarget(request.to, address(this));\n            }\n\n            if (!active) {\n                revert ERC2771ForwarderExpiredRequest(request.deadline);\n            }\n\n            if (!signerMatch) {\n                revert ERC2771ForwarderInvalidSigner(signer, request.from);\n            }\n        }\n\n        // Ignore an invalid request because requireValidRequest = false\n        if (isTrustedForwarder && signerMatch && active) {\n            // Nonce should be used before the call to prevent reusing by reentrancy\n            uint256 currentNonce = _useNonce(signer);\n\n            uint256 reqGas = request.gas;\n            address to = request.to;\n            uint256 value = request.value;\n            bytes memory data = abi.encodePacked(request.data, request.from);\n\n            uint256 gasLeft;\n\n            assembly {\n                success := call(reqGas, to, value, add(data, 0x20), mload(data), 0, 0)\n                gasLeft := gas()\n            }\n\n            _checkForwardedGas(gasLeft, request);\n\n            emit ExecutedForwardRequest(signer, currentNonce, success);\n        }\n    }\n\n    /**\n     * @dev Returns whether the target trusts this forwarder.\n     *\n     * This function performs a static call to the target contract calling the\n     * {ERC2771Context-isTrustedForwarder} function.\n     */\n    function _isTrustedByTarget(address target) private view returns (bool) {\n        bytes memory encodedParams = abi.encodeCall(ERC2771Context.isTrustedForwarder, (address(this)));\n\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Perform the staticcal and save the result in the scratch space.\n            // | Location  | Content  | Content (Hex)                                                      |\n            // |-----------|----------|--------------------------------------------------------------------|\n            // |           |          |                                                           result ↓ |\n            // | 0x00:0x1F | selector | 0x0000000000000000000000000000000000000000000000000000000000000001 |\n            success := staticcall(gas(), target, add(encodedParams, 0x20), mload(encodedParams), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        return success && returnSize >= 0x20 && returnValue > 0;\n    }\n\n    /**\n     * @dev Checks if the requested gas was correctly forwarded to the callee.\n     *\n     * As a consequence of https://eips.ethereum.org/EIPS/eip-150[EIP-150]:\n     * - At most `gasleft() - floor(gasleft() / 64)` is forwarded to the callee.\n     * - At least `floor(gasleft() / 64)` is kept in the caller.\n     *\n     * It reverts consuming all the available gas if the forwarded gas is not the requested gas.\n     *\n     * IMPORTANT: The `gasLeft` parameter should be measured exactly at the end of the forwarded call.\n     * Any gas consumed in between will make room for bypassing this check.\n     */\n    function _checkForwardedGas(uint256 gasLeft, ForwardRequestData calldata request) private pure {\n        // To avoid insufficient gas griefing attacks, as referenced in https://ronan.eth.limo/blog/ethereum-gas-dangers/\n        //\n        // A malicious relayer can attempt to shrink the gas forwarded so that the underlying call reverts out-of-gas\n        // but the forwarding itself still succeeds. In order to make sure that the subcall received sufficient gas,\n        // we will inspect gasleft() after the forwarding.\n        //\n        // Let X be the gas available before the subcall, such that the subcall gets at most X * 63 / 64.\n        // We can't know X after CALL dynamic costs, but we want it to be such that X * 63 / 64 >= req.gas.\n        // Let Y be the gas used in the subcall. gasleft() measured immediately after the subcall will be gasleft() = X - Y.\n        // If the subcall ran out of gas, then Y = X * 63 / 64 and gasleft() = X - Y = X / 64.\n        // Under this assumption req.gas / 63 > gasleft() is true is true if and only if\n        // req.gas / 63 > X / 64, or equivalently req.gas > X * 63 / 64.\n        // This means that if the subcall runs out of gas we are able to detect that insufficient gas was passed.\n        //\n        // We will now also see that req.gas / 63 > gasleft() implies that req.gas >= X * 63 / 64.\n        // The contract guarantees Y <= req.gas, thus gasleft() = X - Y >= X - req.gas.\n        // -    req.gas / 63 > gasleft()\n        // -    req.gas / 63 >= X - req.gas\n        // -    req.gas >= X * 63 / 64\n        // In other words if req.gas < X * 63 / 64 then req.gas / 63 <= gasleft(), thus if the relayer behaves honestly\n        // the forwarding does not revert.\n        if (gasLeft < request.gas / 63) {\n            // We explicitly trigger invalid opcode to consume all gas and bubble-up the effects, since\n            // neither revert or assert consume all gas since Solidity 0.8.20\n            // https://docs.soliditylang.org/en/v0.8.20/control-structures.html#panic-via-assert-and-error-via-require\n            /// @solidity memory-safe-assembly\n            assembly {\n                invalid()\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError, bytes32) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError, bytes32) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"./MessageHashUtils.sol\";\nimport {ShortStrings, ShortString} from \"../ShortStrings.sol\";\nimport {IERC5267} from \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    string private _nameFallback;\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {IERC-5267}.\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Nonces.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Nonces.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides tracking nonces for addresses. Nonces will only increment.\n */\nabstract contract Nonces {\n    /**\n     * @dev The nonce used for an `account` is not the expected current nonce.\n     */\n    error InvalidAccountNonce(address account, uint256 currentNonce);\n\n    mapping(address account => uint256) private _nonces;\n\n    /**\n     * @dev Returns the next unused nonce for an address.\n     */\n    function nonces(address owner) public view virtual returns (uint256) {\n        return _nonces[owner];\n    }\n\n    /**\n     * @dev Consumes a nonce.\n     *\n     * Returns the current value and increments nonce.\n     */\n    function _useNonce(address owner) internal virtual returns (uint256) {\n        // For each account, the nonce has an initial value of 0, can only be incremented by one, and cannot be\n        // decremented or reset. This guarantees that the nonce never overflows.\n        unchecked {\n            // It is important to do x++ and not ++x here.\n            return _nonces[owner]++;\n        }\n    }\n\n    /**\n     * @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`.\n     */\n    function _useCheckedNonce(address owner, uint256 nonce) internal virtual {\n        uint256 current = _useNonce(owner);\n        if (nonce != current) {\n            revert InvalidAccountNonce(owner, current);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ShortStrings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {setWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/MetaSum.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/metatx/ERC2771Context.sol\";\r\nimport \"@openzeppelin/contracts/metatx/ERC2771Forwarder.sol\";\r\n\r\ncontract MetaSum is ERC2771Context {\r\n    uint public sum;\r\n\r\n    constructor(\r\n        ERC2771Forwarder forwarder // Initialize trusted forwarder\r\n    ) ERC2771Context(address(forwarder)) {}\r\n\r\n    function add(uint _a) public {\r\n        sum = _a;\r\n    }\r\n}\r\n"},"contracts/Sum.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.19;\r\n\r\ncontract Sum {\r\n    uint public sum;\r\n\r\n    function add(uint _a) public {\r\n        sum = _a;\r\n    }\r\n}\r\n"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/interfaces/IERC5267.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[24]},"id":25,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:0"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":24,"linearizedBaseContracts":[24],"name":"IERC5267","nameLocation":"143:8:0","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"158:84:0","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":4,"name":"EIP712DomainChanged","nameLocation":"253:19:0","nodeType":"EventDefinition","parameters":{"id":3,"nodeType":"ParameterList","parameters":[],"src":"272:2:0"},"src":"247:28:0"},{"documentation":{"id":5,"nodeType":"StructuredDocumentation","src":"281:140:0","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":23,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"435:12:0","nodeType":"FunctionDefinition","parameters":{"id":6,"nodeType":"ParameterList","parameters":[],"src":"447:2:0"},"returnParameters":{"id":22,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8,"mutability":"mutable","name":"fields","nameLocation":"517:6:0","nodeType":"VariableDeclaration","scope":23,"src":"510:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":7,"name":"bytes1","nodeType":"ElementaryTypeName","src":"510:6:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":10,"mutability":"mutable","name":"name","nameLocation":"551:4:0","nodeType":"VariableDeclaration","scope":23,"src":"537:18:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9,"name":"string","nodeType":"ElementaryTypeName","src":"537:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12,"mutability":"mutable","name":"version","nameLocation":"583:7:0","nodeType":"VariableDeclaration","scope":23,"src":"569:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":11,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14,"mutability":"mutable","name":"chainId","nameLocation":"612:7:0","nodeType":"VariableDeclaration","scope":23,"src":"604:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16,"mutability":"mutable","name":"verifyingContract","nameLocation":"641:17:0","nodeType":"VariableDeclaration","scope":23,"src":"633:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"633:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18,"mutability":"mutable","name":"salt","nameLocation":"680:4:0","nodeType":"VariableDeclaration","scope":23,"src":"672:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17,"name":"bytes32","nodeType":"ElementaryTypeName","src":"672:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":21,"mutability":"mutable","name":"extensions","nameLocation":"715:10:0","nodeType":"VariableDeclaration","scope":23,"src":"698:27:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":19,"name":"uint256","nodeType":"ElementaryTypeName","src":"698:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":20,"nodeType":"ArrayTypeName","src":"698:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"496:239:0"},"scope":24,"src":"426:310:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":25,"src":"133:605:0","usedErrors":[],"usedEvents":[4]}],"src":"107:632:0"},"id":0},"@openzeppelin/contracts/metatx/ERC2771Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/metatx/ERC2771Context.sol","exportedSymbols":{"Context":[957],"ERC2771Context":[167]},"id":168,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":26,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:1"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":28,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":168,"sourceUnit":958,"src":"135:45:1","symbolAliases":[{"foreign":{"id":27,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"143:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":30,"name":"Context","nameLocations":["1003:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":957,"src":"1003:7:1"},"id":31,"nodeType":"InheritanceSpecifier","src":"1003:7:1"}],"canonicalName":"ERC2771Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":29,"nodeType":"StructuredDocumentation","src":"182:784:1","text":" @dev Context variant with ERC2771 support.\n WARNING: Avoid using this pattern in contracts that rely in a specific calldata length as they'll\n be affected by any forwarder whose `msg.data` is suffixed with the `from` address according to the ERC2771\n specification adding the address size in bytes (20) to the calldata size. An example of an unexpected\n behavior could be an unintended fallback (or another function) invocation while trying to invoke the `receive`\n function only accessible if `msg.data.length == 0`.\n WARNING: The usage of `delegatecall` in this contract is dangerous and may result in context corruption.\n Any forwarded request to this contract triggering a `delegatecall` to itself will result in an invalid {_msgSender}\n recovery."},"fullyImplemented":true,"id":167,"linearizedBaseContracts":[167,957],"name":"ERC2771Context","nameLocation":"985:14:1","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1017:61:1","text":"@custom:oz-upgrades-unsafe-allow state-variable-immutable"},"id":34,"mutability":"immutable","name":"_trustedForwarder","nameLocation":"1109:17:1","nodeType":"VariableDeclaration","scope":167,"src":"1083:43:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":33,"name":"address","nodeType":"ElementaryTypeName","src":"1083:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":44,"nodeType":"Block","src":"1488:54:1","statements":[{"expression":{"id":42,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":40,"name":"_trustedForwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":34,"src":"1498:17:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":41,"name":"trustedForwarder_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":37,"src":"1518:17:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1498:37:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":43,"nodeType":"ExpressionStatement","src":"1498:37:1"}]},"documentation":{"id":35,"nodeType":"StructuredDocumentation","src":"1396:48:1","text":"@custom:oz-upgrades-unsafe-allow constructor"},"id":45,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":38,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37,"mutability":"mutable","name":"trustedForwarder_","nameLocation":"1469:17:1","nodeType":"VariableDeclaration","scope":45,"src":"1461:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36,"name":"address","nodeType":"ElementaryTypeName","src":"1461:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1460:27:1"},"returnParameters":{"id":39,"nodeType":"ParameterList","parameters":[],"src":"1488:0:1"},"scope":167,"src":"1449:93:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":53,"nodeType":"Block","src":"1688:41:1","statements":[{"expression":{"id":51,"name":"_trustedForwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":34,"src":"1705:17:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":50,"id":52,"nodeType":"Return","src":"1698:24:1"}]},"documentation":{"id":46,"nodeType":"StructuredDocumentation","src":"1548:69:1","text":" @dev Returns the address of the trusted forwarder."},"functionSelector":"7da0a877","id":54,"implemented":true,"kind":"function","modifiers":[],"name":"trustedForwarder","nameLocation":"1631:16:1","nodeType":"FunctionDefinition","parameters":{"id":47,"nodeType":"ParameterList","parameters":[],"src":"1647:2:1"},"returnParameters":{"id":50,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":54,"src":"1679:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48,"name":"address","nodeType":"ElementaryTypeName","src":"1679:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1678:9:1"},"scope":167,"src":"1622:107:1","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":67,"nodeType":"Block","src":"1912:55:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":62,"name":"forwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":57,"src":"1929:9:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":63,"name":"trustedForwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1942:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":64,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1942:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1929:31:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":61,"id":66,"nodeType":"Return","src":"1922:38:1"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1735:90:1","text":" @dev Indicates whether any particular address is the trusted forwarder."},"functionSelector":"572b6c05","id":68,"implemented":true,"kind":"function","modifiers":[],"name":"isTrustedForwarder","nameLocation":"1839:18:1","nodeType":"FunctionDefinition","parameters":{"id":58,"nodeType":"ParameterList","parameters":[{"constant":false,"id":57,"mutability":"mutable","name":"forwarder","nameLocation":"1866:9:1","nodeType":"VariableDeclaration","scope":68,"src":"1858:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":56,"name":"address","nodeType":"ElementaryTypeName","src":"1858:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1857:19:1"},"returnParameters":{"id":61,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":68,"src":"1906:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":59,"name":"bool","nodeType":"ElementaryTypeName","src":"1906:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1905:6:1"},"scope":167,"src":"1830:137:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[939],"body":{"id":114,"nodeType":"Block","src":"2275:358:1","statements":[{"assignments":[76],"declarations":[{"constant":false,"id":76,"mutability":"mutable","name":"calldataLength","nameLocation":"2293:14:1","nodeType":"VariableDeclaration","scope":114,"src":"2285:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":75,"name":"uint256","nodeType":"ElementaryTypeName","src":"2285:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":80,"initialValue":{"expression":{"expression":{"id":77,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2310:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2314:4:1","memberName":"data","nodeType":"MemberAccess","src":"2310:8:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2319:6:1","memberName":"length","nodeType":"MemberAccess","src":"2310:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2285:40:1"},{"assignments":[82],"declarations":[{"constant":false,"id":82,"mutability":"mutable","name":"contextSuffixLength","nameLocation":"2343:19:1","nodeType":"VariableDeclaration","scope":114,"src":"2335:27:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":81,"name":"uint256","nodeType":"ElementaryTypeName","src":"2335:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":85,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":83,"name":"_contextSuffixLength","nodeType":"Identifier","overloadedDeclarations":[166],"referencedDeclaration":166,"src":"2365:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2365:22:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2335:52:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":93,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":87,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2420:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2424:6:1","memberName":"sender","nodeType":"MemberAccess","src":"2420:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"isTrustedForwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":68,"src":"2401:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":89,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2401:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":92,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":90,"name":"calldataLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":76,"src":"2435:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":91,"name":"contextSuffixLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82,"src":"2453:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2435:37:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2401:71:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":112,"nodeType":"Block","src":"2577:50:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":108,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2598:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC2771Context_$167_$","typeString":"type(contract super ERC2771Context)"}},"id":109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2604:10:1","memberName":"_msgSender","nodeType":"MemberAccess","referencedDeclaration":939,"src":"2598:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2598:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":74,"id":111,"nodeType":"Return","src":"2591:25:1"}]},"id":113,"nodeType":"IfStatement","src":"2397:230:1","trueBody":{"id":107,"nodeType":"Block","src":"2474:97:1","statements":[{"expression":{"arguments":[{"arguments":[{"baseExpression":{"expression":{"id":98,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2511:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":99,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2515:4:1","memberName":"data","nodeType":"MemberAccess","src":"2511:8:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"2511:47:1","startExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":100,"name":"calldataLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":76,"src":"2520:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":101,"name":"contextSuffixLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82,"src":"2537:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2520:36:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":97,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2503:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":96,"name":"bytes20","nodeType":"ElementaryTypeName","src":"2503:7:1","typeDescriptions":{}}},"id":104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2503:56:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"id":95,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2495:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":94,"name":"address","nodeType":"ElementaryTypeName","src":"2495:7:1","typeDescriptions":{}}},"id":105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2495:65:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":74,"id":106,"nodeType":"Return","src":"2488:72:1"}]}}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1973:226:1","text":" @dev Override for `msg.sender`. Defaults to the original `msg.sender` whenever\n a call is not performed by the trusted forwarder or the calldata length is less than\n 20 bytes (an address length)."},"id":115,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"2213:10:1","nodeType":"FunctionDefinition","overrides":{"id":71,"nodeType":"OverrideSpecifier","overrides":[],"src":"2248:8:1"},"parameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"2223:2:1"},"returnParameters":{"id":74,"nodeType":"ParameterList","parameters":[{"constant":false,"id":73,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":115,"src":"2266:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":72,"name":"address","nodeType":"ElementaryTypeName","src":"2266:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2265:9:1"},"scope":167,"src":"2204:429:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[948],"body":{"id":155,"nodeType":"Block","src":"2942:338:1","statements":[{"assignments":[123],"declarations":[{"constant":false,"id":123,"mutability":"mutable","name":"calldataLength","nameLocation":"2960:14:1","nodeType":"VariableDeclaration","scope":155,"src":"2952:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":122,"name":"uint256","nodeType":"ElementaryTypeName","src":"2952:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":127,"initialValue":{"expression":{"expression":{"id":124,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2977:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2981:4:1","memberName":"data","nodeType":"MemberAccess","src":"2977:8:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2986:6:1","memberName":"length","nodeType":"MemberAccess","src":"2977:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2952:40:1"},{"assignments":[129],"declarations":[{"constant":false,"id":129,"mutability":"mutable","name":"contextSuffixLength","nameLocation":"3010:19:1","nodeType":"VariableDeclaration","scope":155,"src":"3002:27:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":128,"name":"uint256","nodeType":"ElementaryTypeName","src":"3002:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":132,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":130,"name":"_contextSuffixLength","nodeType":"Identifier","overloadedDeclarations":[166],"referencedDeclaration":166,"src":"3032:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3032:22:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3002:52:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":134,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3087:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3091:6:1","memberName":"sender","nodeType":"MemberAccess","src":"3087:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":133,"name":"isTrustedForwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":68,"src":"3068:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3068:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":137,"name":"calldataLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"3102:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":138,"name":"contextSuffixLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3120:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3102:37:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3068:71:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":153,"nodeType":"Block","src":"3226:48:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":149,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3247:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC2771Context_$167_$","typeString":"type(contract super ERC2771Context)"}},"id":150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3253:8:1","memberName":"_msgData","nodeType":"MemberAccess","referencedDeclaration":948,"src":"3247:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes_calldata_ptr_$","typeString":"function () view returns (bytes calldata)"}},"id":151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3247:16:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":121,"id":152,"nodeType":"Return","src":"3240:23:1"}]},"id":154,"nodeType":"IfStatement","src":"3064:210:1","trueBody":{"id":148,"nodeType":"Block","src":"3141:79:1","statements":[{"expression":{"baseExpression":{"expression":{"id":141,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3162:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3166:4:1","memberName":"data","nodeType":"MemberAccess","src":"3162:8:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":143,"name":"calldataLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"3172:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":144,"name":"contextSuffixLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3189:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3172:36:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"3162:47:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}},"functionReturnParameters":121,"id":147,"nodeType":"Return","src":"3155:54:1"}]}}]},"documentation":{"id":116,"nodeType":"StructuredDocumentation","src":"2639:222:1","text":" @dev Override for `msg.data`. Defaults to the original `msg.data` whenever\n a call is not performed by the trusted forwarder or the calldata length is less than\n 20 bytes (an address length)."},"id":156,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"2875:8:1","nodeType":"FunctionDefinition","overrides":{"id":118,"nodeType":"OverrideSpecifier","overrides":[],"src":"2908:8:1"},"parameters":{"id":117,"nodeType":"ParameterList","parameters":[],"src":"2883:2:1"},"returnParameters":{"id":121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":120,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":156,"src":"2926:14:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":119,"name":"bytes","nodeType":"ElementaryTypeName","src":"2926:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2925:16:1"},"scope":167,"src":"2866:414:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[956],"body":{"id":165,"nodeType":"Block","src":"3464:26:1","statements":[{"expression":{"hexValue":"3230","id":163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3481:2:1","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"functionReturnParameters":162,"id":164,"nodeType":"Return","src":"3474:9:1"}]},"documentation":{"id":157,"nodeType":"StructuredDocumentation","src":"3286:92:1","text":" @dev ERC-2771 specifies the context as being a single address (20 bytes)."},"id":166,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"3392:20:1","nodeType":"FunctionDefinition","overrides":{"id":159,"nodeType":"OverrideSpecifier","overrides":[],"src":"3437:8:1"},"parameters":{"id":158,"nodeType":"ParameterList","parameters":[],"src":"3412:2:1"},"returnParameters":{"id":162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":161,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":166,"src":"3455:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":160,"name":"uint256","nodeType":"ElementaryTypeName","src":"3455:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3454:9:1"},"scope":167,"src":"3383:107:1","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":168,"src":"967:2525:1","usedErrors":[],"usedEvents":[]}],"src":"109:3384:1"},"id":1},"@openzeppelin/contracts/metatx/ERC2771Forwarder.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/metatx/ERC2771Forwarder.sol","exportedSymbols":{"Address":[927],"ECDSA":[1955],"EIP712":[2182],"ERC2771Context":[167],"ERC2771Forwarder":[674],"Nonces":[1025]},"id":675,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":169,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"111:24:2"},{"absolutePath":"@openzeppelin/contracts/metatx/ERC2771Context.sol","file":"./ERC2771Context.sol","id":171,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":675,"sourceUnit":168,"src":"137:52:2","symbolAliases":[{"foreign":{"id":170,"name":"ERC2771Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"145:14:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../utils/cryptography/ECDSA.sol","id":173,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":675,"sourceUnit":1956,"src":"190:54:2","symbolAliases":[{"foreign":{"id":172,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1955,"src":"198:5:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"../utils/cryptography/EIP712.sol","id":175,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":675,"sourceUnit":2183,"src":"245:56:2","symbolAliases":[{"foreign":{"id":174,"name":"EIP712","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"253:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","file":"../utils/Nonces.sol","id":177,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":675,"sourceUnit":1026,"src":"302:43:2","symbolAliases":[{"foreign":{"id":176,"name":"Nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"310:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../utils/Address.sol","id":179,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":675,"sourceUnit":928,"src":"346:45:2","symbolAliases":[{"foreign":{"id":178,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"354:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":181,"name":"EIP712","nameLocations":["2762:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":2182,"src":"2762:6:2"},"id":182,"nodeType":"InheritanceSpecifier","src":"2762:6:2"},{"baseName":{"id":183,"name":"Nonces","nameLocations":["2770:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":1025,"src":"2770:6:2"},"id":184,"nodeType":"InheritanceSpecifier","src":"2770:6:2"}],"canonicalName":"ERC2771Forwarder","contractDependencies":[],"contractKind":"contract","documentation":{"id":180,"nodeType":"StructuredDocumentation","src":"393:2339:2","text":" @dev A forwarder compatible with ERC2771 contracts. See {ERC2771Context}.\n This forwarder operates on forward requests that include:\n * `from`: An address to operate on behalf of. It is required to be equal to the request signer.\n * `to`: The address that should be called.\n * `value`: The amount of native token to attach with the requested call.\n * `gas`: The amount of gas limit that will be forwarded with the requested call.\n * `nonce`: A unique transaction ordering identifier to avoid replayability and request invalidation.\n * `deadline`: A timestamp after which the request is not executable anymore.\n * `data`: Encoded `msg.data` to send with the requested call.\n Relayers are able to submit batches if they are processing a high volume of requests. With high\n throughput, relayers may run into limitations of the chain such as limits on the number of\n transactions in the mempool. In these cases the recommendation is to distribute the load among\n multiple accounts.\n NOTE: Batching requests includes an optional refund for unused `msg.value` that is achieved by\n performing a call with empty calldata. While this is within the bounds of ERC-2771 compliance,\n if the refund receiver happens to consider the forwarder a trusted forwarder, it MUST properly\n handle `msg.data.length == 0`. `ERC2771Context` in OpenZeppelin Contracts versions prior to 4.9.3\n do not handle this properly.\n ==== Security Considerations\n If a relayer submits a forward request, it should be willing to pay up to 100% of the gas amount\n specified in the request. This contract does not implement any kind of retribution for this gas,\n and it is assumed that there is an out of band incentive for relayers to pay for execution on\n behalf of signers. Often, the relayer is operated by a project that will consider it a user\n acquisition cost.\n By offering to pay for gas, relayers are at risk of having that gas used by an attacker toward\n some other purpose that is not aligned with the expected out of band incentives. If you operate a\n relayer, consider whitelisting target contracts and function selectors. When relaying ERC-721 or\n ERC-1155 transfers specifically, consider rejecting the use of the `data` field, since it can be\n used to execute arbitrary code."},"fullyImplemented":true,"id":674,"linearizedBaseContracts":[674,1025,2182,24],"name":"ERC2771Forwarder","nameLocation":"2742:16:2","nodeType":"ContractDefinition","nodes":[{"global":false,"id":187,"libraryName":{"id":185,"name":"ECDSA","nameLocations":["2789:5:2"],"nodeType":"IdentifierPath","referencedDeclaration":1955,"src":"2789:5:2"},"nodeType":"UsingForDirective","src":"2783:24:2","typeName":{"id":186,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2799:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"canonicalName":"ERC2771Forwarder.ForwardRequestData","id":202,"members":[{"constant":false,"id":189,"mutability":"mutable","name":"from","nameLocation":"2857:4:2","nodeType":"VariableDeclaration","scope":202,"src":"2849:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":188,"name":"address","nodeType":"ElementaryTypeName","src":"2849:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":191,"mutability":"mutable","name":"to","nameLocation":"2879:2:2","nodeType":"VariableDeclaration","scope":202,"src":"2871:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":190,"name":"address","nodeType":"ElementaryTypeName","src":"2871:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":193,"mutability":"mutable","name":"value","nameLocation":"2899:5:2","nodeType":"VariableDeclaration","scope":202,"src":"2891:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":192,"name":"uint256","nodeType":"ElementaryTypeName","src":"2891:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":195,"mutability":"mutable","name":"gas","nameLocation":"2922:3:2","nodeType":"VariableDeclaration","scope":202,"src":"2914:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":194,"name":"uint256","nodeType":"ElementaryTypeName","src":"2914:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":197,"mutability":"mutable","name":"deadline","nameLocation":"2942:8:2","nodeType":"VariableDeclaration","scope":202,"src":"2935:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":196,"name":"uint48","nodeType":"ElementaryTypeName","src":"2935:6:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":199,"mutability":"mutable","name":"data","nameLocation":"2966:4:2","nodeType":"VariableDeclaration","scope":202,"src":"2960:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":198,"name":"bytes","nodeType":"ElementaryTypeName","src":"2960:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":201,"mutability":"mutable","name":"signature","nameLocation":"2986:9:2","nodeType":"VariableDeclaration","scope":202,"src":"2980:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":200,"name":"bytes","nodeType":"ElementaryTypeName","src":"2980:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"ForwardRequestData","nameLocation":"2820:18:2","nodeType":"StructDefinition","scope":674,"src":"2813:189:2","visibility":"public"},{"constant":true,"id":207,"mutability":"constant","name":"_FORWARD_REQUEST_TYPEHASH","nameLocation":"3034:25:2","nodeType":"VariableDeclaration","scope":674,"src":"3008:203:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":203,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3008:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"466f72776172645265717565737428616464726573732066726f6d2c6164647265737320746f2c75696e743235362076616c75652c75696e74323536206761732c75696e74323536206e6f6e63652c75696e74343820646561646c696e652c6279746573206461746129","id":205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3093:108:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_7f96328b83274ebc7c1cf4f7a3abda602b51a78b7fa1d86a2ce353d75e587cac","typeString":"literal_string \"ForwardRequest(address from,address to,uint256 value,uint256 gas,uint256 nonce,uint48 deadline,bytes data)\""},"value":"ForwardRequest(address from,address to,uint256 value,uint256 gas,uint256 nonce,uint48 deadline,bytes data)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_7f96328b83274ebc7c1cf4f7a3abda602b51a78b7fa1d86a2ce353d75e587cac","typeString":"literal_string \"ForwardRequest(address from,address to,uint256 value,uint256 gas,uint256 nonce,uint48 deadline,bytes data)\""}],"id":204,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3070:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3070:141:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"anonymous":false,"documentation":{"id":208,"nodeType":"StructuredDocumentation","src":"3218:335:2","text":" @dev Emitted when a `ForwardRequest` is executed.\n NOTE: An unsuccessful forward request could be due to an invalid signature, an expired deadline,\n or simply a revert in the requested call. The contract guarantees that the relayer is not able to force\n the requested call to run out of gas."},"eventSelector":"842fb24a83793558587a3dab2be7674da4a51d09c5542d6dd354e5d0ea70813c","id":216,"name":"ExecutedForwardRequest","nameLocation":"3564:22:2","nodeType":"EventDefinition","parameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":210,"indexed":true,"mutability":"mutable","name":"signer","nameLocation":"3603:6:2","nodeType":"VariableDeclaration","scope":216,"src":"3587:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":209,"name":"address","nodeType":"ElementaryTypeName","src":"3587:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":212,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"3619:5:2","nodeType":"VariableDeclaration","scope":216,"src":"3611:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":211,"name":"uint256","nodeType":"ElementaryTypeName","src":"3611:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":214,"indexed":false,"mutability":"mutable","name":"success","nameLocation":"3631:7:2","nodeType":"VariableDeclaration","scope":216,"src":"3626:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":213,"name":"bool","nodeType":"ElementaryTypeName","src":"3626:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3586:53:2"},"src":"3558:82:2"},{"documentation":{"id":217,"nodeType":"StructuredDocumentation","src":"3646:85:2","text":" @dev The request `from` doesn't match with the recovered `signer`."},"errorSelector":"c845a056","id":223,"name":"ERC2771ForwarderInvalidSigner","nameLocation":"3742:29:2","nodeType":"ErrorDefinition","parameters":{"id":222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":219,"mutability":"mutable","name":"signer","nameLocation":"3780:6:2","nodeType":"VariableDeclaration","scope":223,"src":"3772:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":218,"name":"address","nodeType":"ElementaryTypeName","src":"3772:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":221,"mutability":"mutable","name":"from","nameLocation":"3796:4:2","nodeType":"VariableDeclaration","scope":223,"src":"3788:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":220,"name":"address","nodeType":"ElementaryTypeName","src":"3788:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3771:30:2"},"src":"3736:66:2"},{"documentation":{"id":224,"nodeType":"StructuredDocumentation","src":"3808:89:2","text":" @dev The `requestedValue` doesn't match with the available `msgValue`."},"errorSelector":"70647f79","id":230,"name":"ERC2771ForwarderMismatchedValue","nameLocation":"3908:31:2","nodeType":"ErrorDefinition","parameters":{"id":229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"requestedValue","nameLocation":"3948:14:2","nodeType":"VariableDeclaration","scope":230,"src":"3940:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":225,"name":"uint256","nodeType":"ElementaryTypeName","src":"3940:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":228,"mutability":"mutable","name":"msgValue","nameLocation":"3972:8:2","nodeType":"VariableDeclaration","scope":230,"src":"3964:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":227,"name":"uint256","nodeType":"ElementaryTypeName","src":"3964:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3939:42:2"},"src":"3902:80:2"},{"documentation":{"id":231,"nodeType":"StructuredDocumentation","src":"3988:59:2","text":" @dev The request `deadline` has expired."},"errorSelector":"94eef58a","id":235,"name":"ERC2771ForwarderExpiredRequest","nameLocation":"4058:30:2","nodeType":"ErrorDefinition","parameters":{"id":234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":233,"mutability":"mutable","name":"deadline","nameLocation":"4096:8:2","nodeType":"VariableDeclaration","scope":235,"src":"4089:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":232,"name":"uint48","nodeType":"ElementaryTypeName","src":"4089:6:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"4088:17:2"},"src":"4052:54:2"},{"documentation":{"id":236,"nodeType":"StructuredDocumentation","src":"4112:73:2","text":" @dev The request target doesn't trust the `forwarder`."},"errorSelector":"d2650cd1","id":242,"name":"ERC2771UntrustfulTarget","nameLocation":"4196:23:2","nodeType":"ErrorDefinition","parameters":{"id":241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":238,"mutability":"mutable","name":"target","nameLocation":"4228:6:2","nodeType":"VariableDeclaration","scope":242,"src":"4220:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":237,"name":"address","nodeType":"ElementaryTypeName","src":"4220:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":240,"mutability":"mutable","name":"forwarder","nameLocation":"4244:9:2","nodeType":"VariableDeclaration","scope":242,"src":"4236:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":239,"name":"address","nodeType":"ElementaryTypeName","src":"4236:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4219:35:2"},"src":"4190:65:2"},{"body":{"id":252,"nodeType":"Block","src":"4365:2:2","statements":[]},"documentation":{"id":243,"nodeType":"StructuredDocumentation","src":"4261:49:2","text":" @dev See {EIP712-constructor}."},"id":253,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":248,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":245,"src":"4354:4:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4360:3:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":250,"kind":"baseConstructorSpecifier","modifierName":{"id":247,"name":"EIP712","nameLocations":["4347:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":2182,"src":"4347:6:2"},"nodeType":"ModifierInvocation","src":"4347:17:2"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":245,"mutability":"mutable","name":"name","nameLocation":"4341:4:2","nodeType":"VariableDeclaration","scope":253,"src":"4327:18:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":244,"name":"string","nodeType":"ElementaryTypeName","src":"4327:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4326:20:2"},"returnParameters":{"id":251,"nodeType":"ParameterList","parameters":[],"src":"4365:0:2"},"scope":674,"src":"4315:52:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":278,"nodeType":"Block","src":"4933:156:2","statements":[{"assignments":[263,265,267,null],"declarations":[{"constant":false,"id":263,"mutability":"mutable","name":"isTrustedForwarder","nameLocation":"4949:18:2","nodeType":"VariableDeclaration","scope":278,"src":"4944:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":262,"name":"bool","nodeType":"ElementaryTypeName","src":"4944:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":265,"mutability":"mutable","name":"active","nameLocation":"4974:6:2","nodeType":"VariableDeclaration","scope":278,"src":"4969:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":264,"name":"bool","nodeType":"ElementaryTypeName","src":"4969:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":267,"mutability":"mutable","name":"signerMatch","nameLocation":"4987:11:2","nodeType":"VariableDeclaration","scope":278,"src":"4982:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":266,"name":"bool","nodeType":"ElementaryTypeName","src":"4982:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":271,"initialValue":{"arguments":[{"id":269,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"5014:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$202_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ForwardRequestData_$202_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"}],"id":268,"name":"_validate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"5004:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_ForwardRequestData_$202_calldata_ptr_$returns$_t_bool_$_t_bool_$_t_bool_$_t_address_$","typeString":"function (struct ERC2771Forwarder.ForwardRequestData calldata) view returns (bool,bool,bool,address)"}},"id":270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5004:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bool_$_t_bool_$_t_address_$","typeString":"tuple(bool,bool,bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"4943:79:2"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":272,"name":"isTrustedForwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"5039:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":273,"name":"active","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":265,"src":"5061:6:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5039:28:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":275,"name":"signerMatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":267,"src":"5071:11:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5039:43:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":261,"id":277,"nodeType":"Return","src":"5032:50:2"}]},"documentation":{"id":254,"nodeType":"StructuredDocumentation","src":"4373:467:2","text":" @dev Returns `true` if a request is valid for a provided `signature` at the current block timestamp.\n A transaction is considered valid when the target trusts this forwarder, the request hasn't expired\n (deadline is not met), and the signer matches the `from` parameter of the signed request.\n NOTE: A request may return false here but it won't cause {executeBatch} to revert if a refund\n receiver is provided."},"functionSelector":"19d8d38c","id":279,"implemented":true,"kind":"function","modifiers":[],"name":"verify","nameLocation":"4854:6:2","nodeType":"FunctionDefinition","parameters":{"id":258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":257,"mutability":"mutable","name":"request","nameLocation":"4889:7:2","nodeType":"VariableDeclaration","scope":279,"src":"4861:35:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$202_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData"},"typeName":{"id":256,"nodeType":"UserDefinedTypeName","pathNode":{"id":255,"name":"ForwardRequestData","nameLocations":["4861:18:2"],"nodeType":"IdentifierPath","referencedDeclaration":202,"src":"4861:18:2"},"referencedDeclaration":202,"src":"4861:18:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$202_storage_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData"}},"visibility":"internal"}],"src":"4860:37:2"},"returnParameters":{"id":261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":260,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":279,"src":"4927:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":259,"name":"bool","nodeType":"ElementaryTypeName","src":"4927:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4926:6:2"},"scope":674,"src":"4845:244:2","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":312,"nodeType":"Block","src":"5682:436:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":286,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5898:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5902:5:2","memberName":"value","nodeType":"MemberAccess","src":"5898:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":288,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"5911:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$202_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"}},"id":289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5919:5:2","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":193,"src":"5911:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5898:26:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":299,"nodeType":"IfStatement","src":"5894:121:2","trueBody":{"id":298,"nodeType":"Block","src":"5926:89:2","statements":[{"errorCall":{"arguments":[{"expression":{"id":292,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"5979:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$202_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"}},"id":293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5987:5:2","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":193,"src":"5979:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":294,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5994:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5998:5:2","memberName":"value","nodeType":"MemberAccess","src":"5994:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":291,"name":"ERC2771ForwarderMismatchedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"5947:31:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5947:57:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":297,"nodeType":"RevertStatement","src":"5940:64:2"}]}},{"condition":{"id":304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6029:24:2","subExpression":{"arguments":[{"id":301,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"6039:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$202_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"}},{"hexValue":"74727565","id":302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6048:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ForwardRequestData_$202_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":300,"name":"_execute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"6030:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_ForwardRequestData_$202_calldata_ptr_$_t_bool_$returns$_t_bool_$","typeString":"function (struct ERC2771Forwarder.ForwardRequestData calldata,bool) returns (bool)"}},"id":303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6030:23:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":311,"nodeType":"IfStatement","src":"6025:87:2","trueBody":{"id":310,"nodeType":"Block","src":"6055:57:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":305,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"6076:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$927_$","typeString":"type(library Address)"}},"id":307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6084:15:2","memberName":"FailedInnerCall","nodeType":"MemberAccess","referencedDeclaration":690,"src":"6076:23:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6076:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":309,"nodeType":"RevertStatement","src":"6069:32:2"}]}}]},"documentation":{"id":280,"nodeType":"StructuredDocumentation","src":"5095:505:2","text":" @dev Executes a `request` on behalf of `signature`'s signer using the ERC-2771 protocol. The gas\n provided to the requested call may not be exactly the amount requested, but the call will not run\n out of gas. Will revert if the request is invalid or the call reverts, in this case the nonce is not consumed.\n Requirements:\n - The request value should be equal to the provided `msg.value`.\n - The request should be valid according to {verify}."},"functionSelector":"df905caf","id":313,"implemented":true,"kind":"function","modifiers":[],"name":"execute","nameLocation":"5614:7:2","nodeType":"FunctionDefinition","parameters":{"id":284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":283,"mutability":"mutable","name":"request","nameLocation":"5650:7:2","nodeType":"VariableDeclaration","scope":313,"src":"5622:35:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$202_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData"},"typeName":{"id":282,"nodeType":"UserDefinedTypeName","pathNode":{"id":281,"name":"ForwardRequestData","nameLocations":["5622:18:2"],"nodeType":"IdentifierPath","referencedDeclaration":202,"src":"5622:18:2"},"referencedDeclaration":202,"src":"5622:18:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$202_storage_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData"}},"visibility":"internal"}],"src":"5621:37:2"},"returnParameters":{"id":285,"nodeType":"ParameterList","parameters":[],"src":"5682:0:2"},"scope":674,"src":"5605:513:2","stateMutability":"payable","virtual":true,"visibility":"public"},{"body":{"id":401,"nodeType":"Block","src":"7658:1125:2","statements":[{"assignments":[324],"declarations":[{"constant":false,"id":324,"mutability":"mutable","name":"atomic","nameLocation":"7673:6:2","nodeType":"VariableDeclaration","scope":401,"src":"7668:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":323,"name":"bool","nodeType":"ElementaryTypeName","src":"7668:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":331,"initialValue":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":325,"name":"refundReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"7682:14:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7708:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7700:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":326,"name":"address","nodeType":"ElementaryTypeName","src":"7700:7:2","typeDescriptions":{}}},"id":329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7700:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7682:28:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"7668:42:2"},{"assignments":[333],"declarations":[{"constant":false,"id":333,"mutability":"mutable","name":"requestsValue","nameLocation":"7729:13:2","nodeType":"VariableDeclaration","scope":401,"src":"7721:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":332,"name":"uint256","nodeType":"ElementaryTypeName","src":"7721:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":334,"nodeType":"VariableDeclarationStatement","src":"7721:21:2"},{"assignments":[336],"declarations":[{"constant":false,"id":336,"mutability":"mutable","name":"refundValue","nameLocation":"7760:11:2","nodeType":"VariableDeclaration","scope":401,"src":"7752:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":335,"name":"uint256","nodeType":"ElementaryTypeName","src":"7752:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":337,"nodeType":"VariableDeclarationStatement","src":"7752:19:2"},{"body":{"id":375,"nodeType":"Block","src":"7824:209:2","statements":[{"expression":{"id":353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":348,"name":"requestsValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"7838:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"baseExpression":{"id":349,"name":"requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"7855:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ForwardRequestData_$202_calldata_ptr_$dyn_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata[] calldata"}},"id":351,"indexExpression":{"id":350,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"7864:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7855:11:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$202_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"}},"id":352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7867:5:2","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":193,"src":"7855:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7838:34:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":354,"nodeType":"ExpressionStatement","src":"7838:34:2"},{"assignments":[356],"declarations":[{"constant":false,"id":356,"mutability":"mutable","name":"success","nameLocation":"7891:7:2","nodeType":"VariableDeclaration","scope":375,"src":"7886:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":355,"name":"bool","nodeType":"ElementaryTypeName","src":"7886:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":363,"initialValue":{"arguments":[{"baseExpression":{"id":358,"name":"requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"7910:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ForwardRequestData_$202_calldata_ptr_$dyn_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata[] calldata"}},"id":360,"indexExpression":{"id":359,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"7919:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7910:11:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$202_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"}},{"id":361,"name":"atomic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"7923:6:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ForwardRequestData_$202_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":357,"name":"_execute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"7901:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_ForwardRequestData_$202_calldata_ptr_$_t_bool_$returns$_t_bool_$","typeString":"function (struct ERC2771Forwarder.ForwardRequestData calldata,bool) returns (bool)"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7901:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"7886:44:2"},{"condition":{"id":365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7948:8:2","subExpression":{"id":364,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":356,"src":"7949:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":374,"nodeType":"IfStatement","src":"7944:79:2","trueBody":{"id":373,"nodeType":"Block","src":"7958:65:2","statements":[{"expression":{"id":371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":366,"name":"refundValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"7976:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"baseExpression":{"id":367,"name":"requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"7991:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ForwardRequestData_$202_calldata_ptr_$dyn_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata[] calldata"}},"id":369,"indexExpression":{"id":368,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"8000:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7991:11:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$202_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"}},"id":370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8003:5:2","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":193,"src":"7991:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7976:32:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":372,"nodeType":"ExpressionStatement","src":"7976:32:2"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":341,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"7798:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":342,"name":"requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"7802:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ForwardRequestData_$202_calldata_ptr_$dyn_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata[] calldata"}},"id":343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7811:6:2","memberName":"length","nodeType":"MemberAccess","src":"7802:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7798:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":376,"initializationExpression":{"assignments":[339],"declarations":[{"constant":false,"id":339,"mutability":"mutable","name":"i","nameLocation":"7795:1:2","nodeType":"VariableDeclaration","scope":376,"src":"7787:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":338,"name":"uint256","nodeType":"ElementaryTypeName","src":"7787:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":340,"nodeType":"VariableDeclarationStatement","src":"7787:9:2"},"loopExpression":{"expression":{"id":346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"7819:3:2","subExpression":{"id":345,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"7821:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":347,"nodeType":"ExpressionStatement","src":"7819:3:2"},"nodeType":"ForStatement","src":"7782:251:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":377,"name":"requestsValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"8169:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":378,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8186:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8190:5:2","memberName":"value","nodeType":"MemberAccess","src":"8186:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8169:26:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":388,"nodeType":"IfStatement","src":"8165:121:2","trueBody":{"id":387,"nodeType":"Block","src":"8197:89:2","statements":[{"errorCall":{"arguments":[{"id":382,"name":"requestsValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"8250:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":383,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8265:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8269:5:2","memberName":"value","nodeType":"MemberAccess","src":"8265:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":381,"name":"ERC2771ForwarderMismatchedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"8218:31:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8218:57:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":386,"nodeType":"RevertStatement","src":"8211:64:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":389,"name":"refundValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"8453:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8468:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8453:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":400,"nodeType":"IfStatement","src":"8449:328:2","trueBody":{"id":399,"nodeType":"Block","src":"8471:306:2","statements":[{"expression":{"arguments":[{"id":395,"name":"refundReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"8738:14:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":396,"name":"refundValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"8754:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":392,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"8720:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$927_$","typeString":"type(library Address)"}},"id":394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8728:9:2","memberName":"sendValue","nodeType":"MemberAccess","referencedDeclaration":731,"src":"8720:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$","typeString":"function (address payable,uint256)"}},"id":397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8720:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":398,"nodeType":"ExpressionStatement","src":"8720:46:2"}]}}]},"documentation":{"id":314,"nodeType":"StructuredDocumentation","src":"6124:1390:2","text":" @dev Batch version of {execute} with optional refunding and atomic execution.\n In case a batch contains at least one invalid request (see {verify}), the\n request will be skipped and the `refundReceiver` parameter will receive back the\n unused requested value at the end of the execution. This is done to prevent reverting\n the entire batch when a request is invalid or has already been submitted.\n If the `refundReceiver` is the `address(0)`, this function will revert when at least\n one of the requests was not valid instead of skipping it. This could be useful if\n a batch is required to get executed atomically (at least at the top-level). For example,\n refunding (and thus atomicity) can be opt-out if the relayer is using a service that avoids\n including reverted transactions.\n Requirements:\n - The sum of the requests' values should be equal to the provided `msg.value`.\n - All of the requests should be valid (see {verify}) when `refundReceiver` is the zero address.\n NOTE: Setting a zero `refundReceiver` guarantees an all-or-nothing requests execution only for\n the first-level forwarded calls. In case a forwarded request calls to a contract with another\n subcall, the second-level call may revert without the top-level call reverting."},"functionSelector":"ccf96b4a","id":402,"implemented":true,"kind":"function","modifiers":[],"name":"executeBatch","nameLocation":"7528:12:2","nodeType":"FunctionDefinition","parameters":{"id":321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":318,"mutability":"mutable","name":"requests","nameLocation":"7580:8:2","nodeType":"VariableDeclaration","scope":402,"src":"7550:38:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ForwardRequestData_$202_calldata_ptr_$dyn_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData[]"},"typeName":{"baseType":{"id":316,"nodeType":"UserDefinedTypeName","pathNode":{"id":315,"name":"ForwardRequestData","nameLocations":["7550:18:2"],"nodeType":"IdentifierPath","referencedDeclaration":202,"src":"7550:18:2"},"referencedDeclaration":202,"src":"7550:18:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$202_storage_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData"}},"id":317,"nodeType":"ArrayTypeName","src":"7550:20:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ForwardRequestData_$202_storage_$dyn_storage_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData[]"}},"visibility":"internal"},{"constant":false,"id":320,"mutability":"mutable","name":"refundReceiver","nameLocation":"7614:14:2","nodeType":"VariableDeclaration","scope":402,"src":"7598:30:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":319,"name":"address","nodeType":"ElementaryTypeName","src":"7598:15:2","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"7540:94:2"},"returnParameters":{"id":322,"nodeType":"ParameterList","parameters":[],"src":"7658:0:2"},"scope":674,"src":"7519:1264:2","stateMutability":"payable","virtual":true,"visibility":"public"},{"body":{"id":443,"nodeType":"Block","src":"9140:284:2","statements":[{"assignments":[418,420],"declarations":[{"constant":false,"id":418,"mutability":"mutable","name":"isValid","nameLocation":"9156:7:2","nodeType":"VariableDeclaration","scope":443,"src":"9151:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":417,"name":"bool","nodeType":"ElementaryTypeName","src":"9151:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":420,"mutability":"mutable","name":"recovered","nameLocation":"9173:9:2","nodeType":"VariableDeclaration","scope":443,"src":"9165:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":419,"name":"address","nodeType":"ElementaryTypeName","src":"9165:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":424,"initialValue":{"arguments":[{"id":422,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"9215:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$202_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ForwardRequestData_$202_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"}],"id":421,"name":"_recoverForwardRequestSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"9186:28:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_ForwardRequestData_$202_calldata_ptr_$returns$_t_bool_$_t_address_$","typeString":"function (struct ERC2771Forwarder.ForwardRequestData calldata) view returns (bool,address)"}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9186:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"9150:73:2"},{"expression":{"components":[{"arguments":[{"expression":{"id":426,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"9274:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$202_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"}},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9282:2:2","memberName":"to","nodeType":"MemberAccess","referencedDeclaration":191,"src":"9274:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":425,"name":"_isTrustedByTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":654,"src":"9255:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9255:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":429,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"9299:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$202_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"}},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9307:8:2","memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":197,"src":"9299:16:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":431,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9319:5:2","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9325:9:2","memberName":"timestamp","nodeType":"MemberAccess","src":"9319:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9299:35:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":434,"name":"isValid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"9348:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":435,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"9359:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":436,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"9372:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$202_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"}},"id":437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9380:4:2","memberName":"from","nodeType":"MemberAccess","referencedDeclaration":189,"src":"9372:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9359:25:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9348:36:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":440,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"9398:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":441,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9241:176:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bool_$_t_bool_$_t_address_$","typeString":"tuple(bool,bool,bool,address)"}},"functionReturnParameters":416,"id":442,"nodeType":"Return","src":"9234:183:2"}]},"documentation":{"id":403,"nodeType":"StructuredDocumentation","src":"8789:173:2","text":" @dev Validates if the provided request can be executed at current block timestamp with\n the given `request.signature` on behalf of `request.signer`."},"id":444,"implemented":true,"kind":"function","modifiers":[],"name":"_validate","nameLocation":"8976:9:2","nodeType":"FunctionDefinition","parameters":{"id":407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":406,"mutability":"mutable","name":"request","nameLocation":"9023:7:2","nodeType":"VariableDeclaration","scope":444,"src":"8995:35:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$202_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData"},"typeName":{"id":405,"nodeType":"UserDefinedTypeName","pathNode":{"id":404,"name":"ForwardRequestData","nameLocations":["8995:18:2"],"nodeType":"IdentifierPath","referencedDeclaration":202,"src":"8995:18:2"},"referencedDeclaration":202,"src":"8995:18:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$202_storage_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData"}},"visibility":"internal"}],"src":"8985:51:2"},"returnParameters":{"id":416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":409,"mutability":"mutable","name":"isTrustedForwarder","nameLocation":"9073:18:2","nodeType":"VariableDeclaration","scope":444,"src":"9068:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":408,"name":"bool","nodeType":"ElementaryTypeName","src":"9068:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":411,"mutability":"mutable","name":"active","nameLocation":"9098:6:2","nodeType":"VariableDeclaration","scope":444,"src":"9093:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":410,"name":"bool","nodeType":"ElementaryTypeName","src":"9093:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":413,"mutability":"mutable","name":"signerMatch","nameLocation":"9111:11:2","nodeType":"VariableDeclaration","scope":444,"src":"9106:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":412,"name":"bool","nodeType":"ElementaryTypeName","src":"9106:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":415,"mutability":"mutable","name":"signer","nameLocation":"9132:6:2","nodeType":"VariableDeclaration","scope":444,"src":"9124:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":414,"name":"address","nodeType":"ElementaryTypeName","src":"9124:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9067:72:2"},"scope":674,"src":"8967:457:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":499,"nodeType":"Block","src":"9851:574:2","statements":[{"assignments":[456,459,null],"declarations":[{"constant":false,"id":456,"mutability":"mutable","name":"recovered","nameLocation":"9870:9:2","nodeType":"VariableDeclaration","scope":499,"src":"9862:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":455,"name":"address","nodeType":"ElementaryTypeName","src":"9862:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":459,"mutability":"mutable","name":"err","nameLocation":"9900:3:2","nodeType":"VariableDeclaration","scope":499,"src":"9881:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1615","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":458,"nodeType":"UserDefinedTypeName","pathNode":{"id":457,"name":"ECDSA.RecoverError","nameLocations":["9881:5:2","9887:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":1615,"src":"9881:18:2"},"referencedDeclaration":1615,"src":"9881:18:2","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1615","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},null],"id":490,"initialValue":{"arguments":[{"expression":{"id":487,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"10336:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$202_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"}},"id":488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10344:9:2","memberName":"signature","nodeType":"MemberAccess","referencedDeclaration":201,"src":"10336:17:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"arguments":[{"arguments":[{"arguments":[{"id":464,"name":"_FORWARD_REQUEST_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":207,"src":"9998:25:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":465,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"10045:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$202_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"}},"id":466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10053:4:2","memberName":"from","nodeType":"MemberAccess","referencedDeclaration":189,"src":"10045:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":467,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"10079:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$202_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"}},"id":468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10087:2:2","memberName":"to","nodeType":"MemberAccess","referencedDeclaration":191,"src":"10079:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":469,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"10111:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$202_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"}},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10119:5:2","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":193,"src":"10111:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":471,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"10146:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$202_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"}},"id":472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10154:3:2","memberName":"gas","nodeType":"MemberAccess","referencedDeclaration":195,"src":"10146:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"expression":{"id":474,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"10186:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$202_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"}},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10194:4:2","memberName":"from","nodeType":"MemberAccess","referencedDeclaration":189,"src":"10186:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":473,"name":"nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"10179:6:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10179:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":477,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"10221:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$202_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"}},"id":478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10229:8:2","memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":197,"src":"10221:16:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"arguments":[{"expression":{"id":480,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"10269:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$202_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"}},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10277:4:2","memberName":"data","nodeType":"MemberAccess","referencedDeclaration":199,"src":"10269:12:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":479,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"10259:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10259:23:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":462,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9966:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":463,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9970:6:2","memberName":"encode","nodeType":"MemberAccess","src":"9966:10:2","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9966:334:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":461,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9939:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9939:375:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":460,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2115,"src":"9909:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9909:415:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10325:10:2","memberName":"tryRecover","nodeType":"MemberAccess","referencedDeclaration":1681,"src":"9909:426:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$1615_$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9909:445:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1615_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"9861:493:2"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1615","typeString":"enum ECDSA.RecoverError"},"id":495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":491,"name":"err","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":459,"src":"10373:3:2","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1615","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":492,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1955,"src":"10380:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$1955_$","typeString":"type(library ECDSA)"}},"id":493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10386:12:2","memberName":"RecoverError","nodeType":"MemberAccess","referencedDeclaration":1615,"src":"10380:18:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1615_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10399:7:2","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":1611,"src":"10380:26:2","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1615","typeString":"enum ECDSA.RecoverError"}},"src":"10373:33:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":496,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":456,"src":"10408:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":497,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10372:46:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":454,"id":498,"nodeType":"Return","src":"10365:53:2"}]},"documentation":{"id":445,"nodeType":"StructuredDocumentation","src":"9430:281:2","text":" @dev Returns a tuple with the recovered the signer of an EIP712 forward request message hash\n and a boolean indicating if the signature is valid.\n NOTE: The signature is considered valid if {ECDSA-tryRecover} indicates no recover error for it."},"id":500,"implemented":true,"kind":"function","modifiers":[],"name":"_recoverForwardRequestSigner","nameLocation":"9725:28:2","nodeType":"FunctionDefinition","parameters":{"id":449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":448,"mutability":"mutable","name":"request","nameLocation":"9791:7:2","nodeType":"VariableDeclaration","scope":500,"src":"9763:35:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$202_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData"},"typeName":{"id":447,"nodeType":"UserDefinedTypeName","pathNode":{"id":446,"name":"ForwardRequestData","nameLocations":["9763:18:2"],"nodeType":"IdentifierPath","referencedDeclaration":202,"src":"9763:18:2"},"referencedDeclaration":202,"src":"9763:18:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$202_storage_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData"}},"visibility":"internal"}],"src":"9753:51:2"},"returnParameters":{"id":454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":451,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":500,"src":"9836:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":450,"name":"bool","nodeType":"ElementaryTypeName","src":"9836:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":453,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":500,"src":"9842:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":452,"name":"address","nodeType":"ElementaryTypeName","src":"9842:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9835:15:2"},"scope":674,"src":"9716:709:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":611,"nodeType":"Block","src":"11152:1500:2","statements":[{"assignments":[512,514,516,518],"declarations":[{"constant":false,"id":512,"mutability":"mutable","name":"isTrustedForwarder","nameLocation":"11168:18:2","nodeType":"VariableDeclaration","scope":611,"src":"11163:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":511,"name":"bool","nodeType":"ElementaryTypeName","src":"11163:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":514,"mutability":"mutable","name":"active","nameLocation":"11193:6:2","nodeType":"VariableDeclaration","scope":611,"src":"11188:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":513,"name":"bool","nodeType":"ElementaryTypeName","src":"11188:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":516,"mutability":"mutable","name":"signerMatch","nameLocation":"11206:11:2","nodeType":"VariableDeclaration","scope":611,"src":"11201:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":515,"name":"bool","nodeType":"ElementaryTypeName","src":"11201:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":518,"mutability":"mutable","name":"signer","nameLocation":"11227:6:2","nodeType":"VariableDeclaration","scope":611,"src":"11219:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":517,"name":"address","nodeType":"ElementaryTypeName","src":"11219:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":522,"initialValue":{"arguments":[{"id":520,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":504,"src":"11247:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$202_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ForwardRequestData_$202_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"}],"id":519,"name":"_validate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"11237:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_ForwardRequestData_$202_calldata_ptr_$returns$_t_bool_$_t_bool_$_t_bool_$_t_address_$","typeString":"function (struct ERC2771Forwarder.ForwardRequestData calldata) view returns (bool,bool,bool,address)"}},"id":521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11237:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bool_$_t_bool_$_t_address_$","typeString":"tuple(bool,bool,bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"11162:93:2"},{"condition":{"id":523,"name":"requireValidRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"11453:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":557,"nodeType":"IfStatement","src":"11449:402:2","trueBody":{"id":556,"nodeType":"Block","src":"11474:377:2","statements":[{"condition":{"id":525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11492:19:2","subExpression":{"id":524,"name":"isTrustedForwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"11493:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":536,"nodeType":"IfStatement","src":"11488:115:2","trueBody":{"id":535,"nodeType":"Block","src":"11513:90:2","statements":[{"errorCall":{"arguments":[{"expression":{"id":527,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":504,"src":"11562:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$202_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"}},"id":528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11570:2:2","memberName":"to","nodeType":"MemberAccess","referencedDeclaration":191,"src":"11562:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":531,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11582:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_ERC2771Forwarder_$674","typeString":"contract ERC2771Forwarder"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC2771Forwarder_$674","typeString":"contract ERC2771Forwarder"}],"id":530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11574:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":529,"name":"address","nodeType":"ElementaryTypeName","src":"11574:7:2","typeDescriptions":{}}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11574:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":526,"name":"ERC2771UntrustfulTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"11538:23:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11538:50:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":534,"nodeType":"RevertStatement","src":"11531:57:2"}]}},{"condition":{"id":538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11621:7:2","subExpression":{"id":537,"name":"active","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"11622:6:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":545,"nodeType":"IfStatement","src":"11617:101:2","trueBody":{"id":544,"nodeType":"Block","src":"11630:88:2","statements":[{"errorCall":{"arguments":[{"expression":{"id":540,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":504,"src":"11686:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$202_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"}},"id":541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11694:8:2","memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":197,"src":"11686:16:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":539,"name":"ERC2771ForwarderExpiredRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"11655:30:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint48_$returns$__$","typeString":"function (uint48) pure"}},"id":542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11655:48:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":543,"nodeType":"RevertStatement","src":"11648:55:2"}]}},{"condition":{"id":547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11736:12:2","subExpression":{"id":546,"name":"signerMatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"11737:11:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":555,"nodeType":"IfStatement","src":"11732:109:2","trueBody":{"id":554,"nodeType":"Block","src":"11750:91:2","statements":[{"errorCall":{"arguments":[{"id":549,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"11805:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":550,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":504,"src":"11813:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$202_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"}},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11821:4:2","memberName":"from","nodeType":"MemberAccess","referencedDeclaration":189,"src":"11813:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":548,"name":"ERC2771ForwarderInvalidSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"11775:29:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11775:51:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":553,"nodeType":"RevertStatement","src":"11768:58:2"}]}}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":558,"name":"isTrustedForwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"11938:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":559,"name":"signerMatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"11960:11:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11938:33:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":561,"name":"active","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"11975:6:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11938:43:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":610,"nodeType":"IfStatement","src":"11934:712:2","trueBody":{"id":609,"nodeType":"Block","src":"11983:663:2","statements":[{"assignments":[564],"declarations":[{"constant":false,"id":564,"mutability":"mutable","name":"currentNonce","nameLocation":"12090:12:2","nodeType":"VariableDeclaration","scope":609,"src":"12082:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":563,"name":"uint256","nodeType":"ElementaryTypeName","src":"12082:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":568,"initialValue":{"arguments":[{"id":566,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"12115:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":565,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"12105:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12105:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12082:40:2"},{"assignments":[570],"declarations":[{"constant":false,"id":570,"mutability":"mutable","name":"reqGas","nameLocation":"12145:6:2","nodeType":"VariableDeclaration","scope":609,"src":"12137:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":569,"name":"uint256","nodeType":"ElementaryTypeName","src":"12137:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":573,"initialValue":{"expression":{"id":571,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":504,"src":"12154:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$202_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"}},"id":572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12162:3:2","memberName":"gas","nodeType":"MemberAccess","referencedDeclaration":195,"src":"12154:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12137:28:2"},{"assignments":[575],"declarations":[{"constant":false,"id":575,"mutability":"mutable","name":"to","nameLocation":"12187:2:2","nodeType":"VariableDeclaration","scope":609,"src":"12179:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":574,"name":"address","nodeType":"ElementaryTypeName","src":"12179:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":578,"initialValue":{"expression":{"id":576,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":504,"src":"12192:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$202_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"}},"id":577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12200:2:2","memberName":"to","nodeType":"MemberAccess","referencedDeclaration":191,"src":"12192:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"12179:23:2"},{"assignments":[580],"declarations":[{"constant":false,"id":580,"mutability":"mutable","name":"value","nameLocation":"12224:5:2","nodeType":"VariableDeclaration","scope":609,"src":"12216:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":579,"name":"uint256","nodeType":"ElementaryTypeName","src":"12216:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":583,"initialValue":{"expression":{"id":581,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":504,"src":"12232:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$202_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"}},"id":582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12240:5:2","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":193,"src":"12232:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12216:29:2"},{"assignments":[585],"declarations":[{"constant":false,"id":585,"mutability":"mutable","name":"data","nameLocation":"12272:4:2","nodeType":"VariableDeclaration","scope":609,"src":"12259:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":584,"name":"bytes","nodeType":"ElementaryTypeName","src":"12259:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":593,"initialValue":{"arguments":[{"expression":{"id":588,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":504,"src":"12296:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$202_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"}},"id":589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12304:4:2","memberName":"data","nodeType":"MemberAccess","referencedDeclaration":199,"src":"12296:12:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"expression":{"id":590,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":504,"src":"12310:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$202_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"}},"id":591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12318:4:2","memberName":"from","nodeType":"MemberAccess","referencedDeclaration":189,"src":"12310:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":586,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"12279:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12283:12:2","memberName":"encodePacked","nodeType":"MemberAccess","src":"12279:16:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12279:44:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12259:64:2"},{"assignments":[595],"declarations":[{"constant":false,"id":595,"mutability":"mutable","name":"gasLeft","nameLocation":"12346:7:2","nodeType":"VariableDeclaration","scope":609,"src":"12338:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":594,"name":"uint256","nodeType":"ElementaryTypeName","src":"12338:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":596,"nodeType":"VariableDeclarationStatement","src":"12338:15:2"},{"AST":{"nodeType":"YulBlock","src":"12377:135:2","statements":[{"nodeType":"YulAssignment","src":"12395:70:2","value":{"arguments":[{"name":"reqGas","nodeType":"YulIdentifier","src":"12411:6:2"},{"name":"to","nodeType":"YulIdentifier","src":"12419:2:2"},{"name":"value","nodeType":"YulIdentifier","src":"12423:5:2"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"12434:4:2"},{"kind":"number","nodeType":"YulLiteral","src":"12440:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12430:3:2"},"nodeType":"YulFunctionCall","src":"12430:15:2"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"12453:4:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12447:5:2"},"nodeType":"YulFunctionCall","src":"12447:11:2"},{"kind":"number","nodeType":"YulLiteral","src":"12460:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12463:1:2","type":"","value":"0"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"12406:4:2"},"nodeType":"YulFunctionCall","src":"12406:59:2"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"12395:7:2"}]},{"nodeType":"YulAssignment","src":"12482:16:2","value":{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"12493:3:2"},"nodeType":"YulFunctionCall","src":"12493:5:2"},"variableNames":[{"name":"gasLeft","nodeType":"YulIdentifier","src":"12482:7:2"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":585,"isOffset":false,"isSlot":false,"src":"12434:4:2","valueSize":1},{"declaration":585,"isOffset":false,"isSlot":false,"src":"12453:4:2","valueSize":1},{"declaration":595,"isOffset":false,"isSlot":false,"src":"12482:7:2","valueSize":1},{"declaration":570,"isOffset":false,"isSlot":false,"src":"12411:6:2","valueSize":1},{"declaration":509,"isOffset":false,"isSlot":false,"src":"12395:7:2","valueSize":1},{"declaration":575,"isOffset":false,"isSlot":false,"src":"12419:2:2","valueSize":1},{"declaration":580,"isOffset":false,"isSlot":false,"src":"12423:5:2","valueSize":1}],"id":597,"nodeType":"InlineAssembly","src":"12368:144:2"},{"expression":{"arguments":[{"id":599,"name":"gasLeft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"12545:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":600,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":504,"src":"12554:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$202_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_ForwardRequestData_$202_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"}],"id":598,"name":"_checkForwardedGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"12526:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_struct$_ForwardRequestData_$202_calldata_ptr_$returns$__$","typeString":"function (uint256,struct ERC2771Forwarder.ForwardRequestData calldata) pure"}},"id":601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12526:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":602,"nodeType":"ExpressionStatement","src":"12526:36:2"},{"eventCall":{"arguments":[{"id":604,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"12605:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":605,"name":"currentNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"12613:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":606,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"12627:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":603,"name":"ExecutedForwardRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"12582:22:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,uint256,bool)"}},"id":607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12582:53:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":608,"nodeType":"EmitStatement","src":"12577:58:2"}]}}]},"documentation":{"id":501,"nodeType":"StructuredDocumentation","src":"10431:573:2","text":" @dev Validates and executes a signed request returning the request call `success` value.\n Internal function without msg.value validation.\n Requirements:\n - The caller must have provided enough gas to forward with the call.\n - The request must be valid (see {verify}) if the `requireValidRequest` is true.\n Emits an {ExecutedForwardRequest} event.\n IMPORTANT: Using this function doesn't check that all the `msg.value` was sent, potentially\n leaving value stuck in the contract."},"id":612,"implemented":true,"kind":"function","modifiers":[],"name":"_execute","nameLocation":"11018:8:2","nodeType":"FunctionDefinition","parameters":{"id":507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":504,"mutability":"mutable","name":"request","nameLocation":"11064:7:2","nodeType":"VariableDeclaration","scope":612,"src":"11036:35:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$202_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData"},"typeName":{"id":503,"nodeType":"UserDefinedTypeName","pathNode":{"id":502,"name":"ForwardRequestData","nameLocations":["11036:18:2"],"nodeType":"IdentifierPath","referencedDeclaration":202,"src":"11036:18:2"},"referencedDeclaration":202,"src":"11036:18:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$202_storage_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData"}},"visibility":"internal"},{"constant":false,"id":506,"mutability":"mutable","name":"requireValidRequest","nameLocation":"11086:19:2","nodeType":"VariableDeclaration","scope":612,"src":"11081:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":505,"name":"bool","nodeType":"ElementaryTypeName","src":"11081:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11026:85:2"},"returnParameters":{"id":510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":509,"mutability":"mutable","name":"success","nameLocation":"11143:7:2","nodeType":"VariableDeclaration","scope":612,"src":"11138:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":508,"name":"bool","nodeType":"ElementaryTypeName","src":"11138:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11137:14:2"},"scope":674,"src":"11009:1643:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":653,"nodeType":"Block","src":"12947:1032:2","statements":[{"assignments":[621],"declarations":[{"constant":false,"id":621,"mutability":"mutable","name":"encodedParams","nameLocation":"12970:13:2","nodeType":"VariableDeclaration","scope":653,"src":"12957:26:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":620,"name":"bytes","nodeType":"ElementaryTypeName","src":"12957:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":632,"initialValue":{"arguments":[{"expression":{"id":624,"name":"ERC2771Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"13001:14:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC2771Context_$167_$","typeString":"type(contract ERC2771Context)"}},"id":625,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13016:18:2","memberName":"isTrustedForwarder","nodeType":"MemberAccess","referencedDeclaration":68,"src":"13001:33:2","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$_t_address_$returns$_t_bool_$","typeString":"function ERC2771Context.isTrustedForwarder(address) view returns (bool)"}},{"components":[{"arguments":[{"id":628,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"13045:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_ERC2771Forwarder_$674","typeString":"contract ERC2771Forwarder"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC2771Forwarder_$674","typeString":"contract ERC2771Forwarder"}],"id":627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13037:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":626,"name":"address","nodeType":"ElementaryTypeName","src":"13037:7:2","typeDescriptions":{}}},"id":629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13037:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":630,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13036:15:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_declaration_view$_t_address_$returns$_t_bool_$","typeString":"function ERC2771Context.isTrustedForwarder(address) view returns (bool)"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":622,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"12986:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12990:10:2","memberName":"encodeCall","nodeType":"MemberAccess","src":"12986:14:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12986:66:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12957:95:2"},{"assignments":[634],"declarations":[{"constant":false,"id":634,"mutability":"mutable","name":"success","nameLocation":"13068:7:2","nodeType":"VariableDeclaration","scope":653,"src":"13063:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":633,"name":"bool","nodeType":"ElementaryTypeName","src":"13063:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":635,"nodeType":"VariableDeclarationStatement","src":"13063:12:2"},{"assignments":[637],"declarations":[{"constant":false,"id":637,"mutability":"mutable","name":"returnSize","nameLocation":"13093:10:2","nodeType":"VariableDeclaration","scope":653,"src":"13085:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":636,"name":"uint256","nodeType":"ElementaryTypeName","src":"13085:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":638,"nodeType":"VariableDeclarationStatement","src":"13085:18:2"},{"assignments":[640],"declarations":[{"constant":false,"id":640,"mutability":"mutable","name":"returnValue","nameLocation":"13121:11:2","nodeType":"VariableDeclaration","scope":653,"src":"13113:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":639,"name":"uint256","nodeType":"ElementaryTypeName","src":"13113:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":641,"nodeType":"VariableDeclarationStatement","src":"13113:19:2"},{"AST":{"nodeType":"YulBlock","src":"13194:713:2","statements":[{"nodeType":"YulAssignment","src":"13725:93:2","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"13747:3:2"},"nodeType":"YulFunctionCall","src":"13747:5:2"},{"name":"target","nodeType":"YulIdentifier","src":"13754:6:2"},{"arguments":[{"name":"encodedParams","nodeType":"YulIdentifier","src":"13766:13:2"},{"kind":"number","nodeType":"YulLiteral","src":"13781:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13762:3:2"},"nodeType":"YulFunctionCall","src":"13762:24:2"},{"arguments":[{"name":"encodedParams","nodeType":"YulIdentifier","src":"13794:13:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13788:5:2"},"nodeType":"YulFunctionCall","src":"13788:20:2"},{"kind":"number","nodeType":"YulLiteral","src":"13810:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13813:4:2","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"13736:10:2"},"nodeType":"YulFunctionCall","src":"13736:82:2"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"13725:7:2"}]},{"nodeType":"YulAssignment","src":"13831:30:2","value":{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"13845:14:2"},"nodeType":"YulFunctionCall","src":"13845:16:2"},"variableNames":[{"name":"returnSize","nodeType":"YulIdentifier","src":"13831:10:2"}]},{"nodeType":"YulAssignment","src":"13874:23:2","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13895:1:2","type":"","value":"0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13889:5:2"},"nodeType":"YulFunctionCall","src":"13889:8:2"},"variableNames":[{"name":"returnValue","nodeType":"YulIdentifier","src":"13874:11:2"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":621,"isOffset":false,"isSlot":false,"src":"13766:13:2","valueSize":1},{"declaration":621,"isOffset":false,"isSlot":false,"src":"13794:13:2","valueSize":1},{"declaration":637,"isOffset":false,"isSlot":false,"src":"13831:10:2","valueSize":1},{"declaration":640,"isOffset":false,"isSlot":false,"src":"13874:11:2","valueSize":1},{"declaration":634,"isOffset":false,"isSlot":false,"src":"13725:7:2","valueSize":1},{"declaration":615,"isOffset":false,"isSlot":false,"src":"13754:6:2","valueSize":1}],"id":642,"nodeType":"InlineAssembly","src":"13185:722:2"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":643,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"13924:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":644,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"13935:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30783230","id":645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13949:4:2","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"13935:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13924:29:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":648,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"13957:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13971:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13957:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13924:48:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":619,"id":652,"nodeType":"Return","src":"13917:55:2"}]},"documentation":{"id":613,"nodeType":"StructuredDocumentation","src":"12658:212:2","text":" @dev Returns whether the target trusts this forwarder.\n This function performs a static call to the target contract calling the\n {ERC2771Context-isTrustedForwarder} function."},"id":654,"implemented":true,"kind":"function","modifiers":[],"name":"_isTrustedByTarget","nameLocation":"12884:18:2","nodeType":"FunctionDefinition","parameters":{"id":616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":615,"mutability":"mutable","name":"target","nameLocation":"12911:6:2","nodeType":"VariableDeclaration","scope":654,"src":"12903:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":614,"name":"address","nodeType":"ElementaryTypeName","src":"12903:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12902:16:2"},"returnParameters":{"id":619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":618,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":654,"src":"12941:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":617,"name":"bool","nodeType":"ElementaryTypeName","src":"12941:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12940:6:2"},"scope":674,"src":"12875:1104:2","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":672,"nodeType":"Block","src":"14694:2103:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":663,"name":"gasLeft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"16341:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":664,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":660,"src":"16351:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$202_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"}},"id":665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16359:3:2","memberName":"gas","nodeType":"MemberAccess","referencedDeclaration":195,"src":"16351:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3633","id":666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16365:2:2","typeDescriptions":{"typeIdentifier":"t_rational_63_by_1","typeString":"int_const 63"},"value":"63"},"src":"16351:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16341:26:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":671,"nodeType":"IfStatement","src":"16337:454:2","trueBody":{"id":670,"nodeType":"Block","src":"16369:422:2","statements":[{"AST":{"nodeType":"YulBlock","src":"16740:41:2","statements":[{"expression":{"arguments":[],"functionName":{"name":"invalid","nodeType":"YulIdentifier","src":"16758:7:2"},"nodeType":"YulFunctionCall","src":"16758:9:2"},"nodeType":"YulExpressionStatement","src":"16758:9:2"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[],"id":669,"nodeType":"InlineAssembly","src":"16731:50:2"}]}}]},"documentation":{"id":655,"nodeType":"StructuredDocumentation","src":"13985:609:2","text":" @dev Checks if the requested gas was correctly forwarded to the callee.\n As a consequence of https://eips.ethereum.org/EIPS/eip-150[EIP-150]:\n - At most `gasleft() - floor(gasleft() / 64)` is forwarded to the callee.\n - At least `floor(gasleft() / 64)` is kept in the caller.\n It reverts consuming all the available gas if the forwarded gas is not the requested gas.\n IMPORTANT: The `gasLeft` parameter should be measured exactly at the end of the forwarded call.\n Any gas consumed in between will make room for bypassing this check."},"id":673,"implemented":true,"kind":"function","modifiers":[],"name":"_checkForwardedGas","nameLocation":"14608:18:2","nodeType":"FunctionDefinition","parameters":{"id":661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":657,"mutability":"mutable","name":"gasLeft","nameLocation":"14635:7:2","nodeType":"VariableDeclaration","scope":673,"src":"14627:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":656,"name":"uint256","nodeType":"ElementaryTypeName","src":"14627:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":660,"mutability":"mutable","name":"request","nameLocation":"14672:7:2","nodeType":"VariableDeclaration","scope":673,"src":"14644:35:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$202_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData"},"typeName":{"id":659,"nodeType":"UserDefinedTypeName","pathNode":{"id":658,"name":"ForwardRequestData","nameLocations":["14644:18:2"],"nodeType":"IdentifierPath","referencedDeclaration":202,"src":"14644:18:2"},"referencedDeclaration":202,"src":"14644:18:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$202_storage_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData"}},"visibility":"internal"}],"src":"14626:54:2"},"returnParameters":{"id":662,"nodeType":"ParameterList","parameters":[],"src":"14694:0:2"},"scope":674,"src":"14599:2198:2","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":675,"src":"2733:14066:2","usedErrors":[223,230,235,242,682,690,967,1039,1041],"usedEvents":[4,216]}],"src":"111:16689:2"},"id":2},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[927]},"id":928,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":676,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:3"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":677,"nodeType":"StructuredDocumentation","src":"127:67:3","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":927,"linearizedBaseContracts":[927],"name":"Address","nameLocation":"203:7:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":678,"nodeType":"StructuredDocumentation","src":"217:94:3","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cd786059","id":682,"name":"AddressInsufficientBalance","nameLocation":"322:26:3","nodeType":"ErrorDefinition","parameters":{"id":681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":680,"mutability":"mutable","name":"account","nameLocation":"357:7:3","nodeType":"VariableDeclaration","scope":682,"src":"349:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":679,"name":"address","nodeType":"ElementaryTypeName","src":"349:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"348:17:3"},"src":"316:50:3"},{"documentation":{"id":683,"nodeType":"StructuredDocumentation","src":"372:75:3","text":" @dev There's no code at `target` (it is not a contract)."},"errorSelector":"9996b315","id":687,"name":"AddressEmptyCode","nameLocation":"458:16:3","nodeType":"ErrorDefinition","parameters":{"id":686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":685,"mutability":"mutable","name":"target","nameLocation":"483:6:3","nodeType":"VariableDeclaration","scope":687,"src":"475:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":684,"name":"address","nodeType":"ElementaryTypeName","src":"475:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"474:16:3"},"src":"452:39:3"},{"documentation":{"id":688,"nodeType":"StructuredDocumentation","src":"497:89:3","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"1425ea42","id":690,"name":"FailedInnerCall","nameLocation":"597:15:3","nodeType":"ErrorDefinition","parameters":{"id":689,"nodeType":"ParameterList","parameters":[],"src":"612:2:3"},"src":"591:24:3"},{"body":{"id":730,"nodeType":"Block","src":"1602:260:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":700,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1624:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$927","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$927","typeString":"library Address"}],"id":699,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1616:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":698,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:3","typeDescriptions":{}}},"id":701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1616:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1630:7:3","memberName":"balance","nodeType":"MemberAccess","src":"1616:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":703,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"1640:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1616:30:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":713,"nodeType":"IfStatement","src":"1612:109:3","trueBody":{"id":712,"nodeType":"Block","src":"1648:73:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":708,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1704:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$927","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$927","typeString":"library Address"}],"id":707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1696:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":706,"name":"address","nodeType":"ElementaryTypeName","src":"1696:7:3","typeDescriptions":{}}},"id":709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1696:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":705,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"1669:26:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1669:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":711,"nodeType":"RevertStatement","src":"1662:48:3"}]}},{"assignments":[715,null],"declarations":[{"constant":false,"id":715,"mutability":"mutable","name":"success","nameLocation":"1737:7:3","nodeType":"VariableDeclaration","scope":730,"src":"1732:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":714,"name":"bool","nodeType":"ElementaryTypeName","src":"1732:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":722,"initialValue":{"arguments":[{"hexValue":"","id":720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1780:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":716,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"1750:9:3","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1760:4:3","memberName":"call","nodeType":"MemberAccess","src":"1750:14:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":718,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"1772:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1750:29:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1750:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1731:52:3"},{"condition":{"id":724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1797:8:3","subExpression":{"id":723,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":715,"src":"1798:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":729,"nodeType":"IfStatement","src":"1793:63:3","trueBody":{"id":728,"nodeType":"Block","src":"1807:49:3","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":725,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"1828:15:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1828:17:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":727,"nodeType":"RevertStatement","src":"1821:24:3"}]}}]},"documentation":{"id":691,"nodeType":"StructuredDocumentation","src":"621:905:3","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":731,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"1540:9:3","nodeType":"FunctionDefinition","parameters":{"id":696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":693,"mutability":"mutable","name":"recipient","nameLocation":"1566:9:3","nodeType":"VariableDeclaration","scope":731,"src":"1550:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":692,"name":"address","nodeType":"ElementaryTypeName","src":"1550:15:3","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":695,"mutability":"mutable","name":"amount","nameLocation":"1585:6:3","nodeType":"VariableDeclaration","scope":731,"src":"1577:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":694,"name":"uint256","nodeType":"ElementaryTypeName","src":"1577:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1549:43:3"},"returnParameters":{"id":697,"nodeType":"ParameterList","parameters":[],"src":"1602:0:3"},"scope":927,"src":"1531:331:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":747,"nodeType":"Block","src":"2794:62:3","statements":[{"expression":{"arguments":[{"id":742,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":734,"src":"2833:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":743,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":736,"src":"2841:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2847:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":741,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"2811:21:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256) returns (bytes memory)"}},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2811:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":740,"id":746,"nodeType":"Return","src":"2804:45:3"}]},"documentation":{"id":732,"nodeType":"StructuredDocumentation","src":"1868:832:3","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."},"id":748,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"2714:12:3","nodeType":"FunctionDefinition","parameters":{"id":737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":734,"mutability":"mutable","name":"target","nameLocation":"2735:6:3","nodeType":"VariableDeclaration","scope":748,"src":"2727:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":733,"name":"address","nodeType":"ElementaryTypeName","src":"2727:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":736,"mutability":"mutable","name":"data","nameLocation":"2756:4:3","nodeType":"VariableDeclaration","scope":748,"src":"2743:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":735,"name":"bytes","nodeType":"ElementaryTypeName","src":"2743:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2726:35:3"},"returnParameters":{"id":740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":739,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":748,"src":"2780:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":738,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2779:14:3"},"scope":927,"src":"2705:151:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":793,"nodeType":"Block","src":"3293:279:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":762,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3315:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$927","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$927","typeString":"library Address"}],"id":761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3307:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":760,"name":"address","nodeType":"ElementaryTypeName","src":"3307:7:3","typeDescriptions":{}}},"id":763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3307:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3321:7:3","memberName":"balance","nodeType":"MemberAccess","src":"3307:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":765,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"3331:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3307:29:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":775,"nodeType":"IfStatement","src":"3303:108:3","trueBody":{"id":774,"nodeType":"Block","src":"3338:73:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":770,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3394:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$927","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$927","typeString":"library Address"}],"id":769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3386:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":768,"name":"address","nodeType":"ElementaryTypeName","src":"3386:7:3","typeDescriptions":{}}},"id":771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":767,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"3359:26:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3359:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":773,"nodeType":"RevertStatement","src":"3352:48:3"}]}},{"assignments":[777,779],"declarations":[{"constant":false,"id":777,"mutability":"mutable","name":"success","nameLocation":"3426:7:3","nodeType":"VariableDeclaration","scope":793,"src":"3421:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":776,"name":"bool","nodeType":"ElementaryTypeName","src":"3421:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":779,"mutability":"mutable","name":"returndata","nameLocation":"3448:10:3","nodeType":"VariableDeclaration","scope":793,"src":"3435:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":778,"name":"bytes","nodeType":"ElementaryTypeName","src":"3435:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":786,"initialValue":{"arguments":[{"id":784,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"3488:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":780,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":751,"src":"3462:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3469:4:3","memberName":"call","nodeType":"MemberAccess","src":"3462:11:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":782,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"3481:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3462:25:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3462:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3420:73:3"},{"expression":{"arguments":[{"id":788,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":751,"src":"3537:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":789,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"3545:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":790,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"3554:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":787,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"3510:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3510:55:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":759,"id":792,"nodeType":"Return","src":"3503:62:3"}]},"documentation":{"id":749,"nodeType":"StructuredDocumentation","src":"2862:313:3","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."},"id":794,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"3189:21:3","nodeType":"FunctionDefinition","parameters":{"id":756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":751,"mutability":"mutable","name":"target","nameLocation":"3219:6:3","nodeType":"VariableDeclaration","scope":794,"src":"3211:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":750,"name":"address","nodeType":"ElementaryTypeName","src":"3211:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":753,"mutability":"mutable","name":"data","nameLocation":"3240:4:3","nodeType":"VariableDeclaration","scope":794,"src":"3227:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":752,"name":"bytes","nodeType":"ElementaryTypeName","src":"3227:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":755,"mutability":"mutable","name":"value","nameLocation":"3254:5:3","nodeType":"VariableDeclaration","scope":794,"src":"3246:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":754,"name":"uint256","nodeType":"ElementaryTypeName","src":"3246:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3210:50:3"},"returnParameters":{"id":759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":758,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":794,"src":"3279:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":757,"name":"bytes","nodeType":"ElementaryTypeName","src":"3279:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3278:14:3"},"scope":927,"src":"3180:392:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":819,"nodeType":"Block","src":"3811:154:3","statements":[{"assignments":[805,807],"declarations":[{"constant":false,"id":805,"mutability":"mutable","name":"success","nameLocation":"3827:7:3","nodeType":"VariableDeclaration","scope":819,"src":"3822:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":804,"name":"bool","nodeType":"ElementaryTypeName","src":"3822:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":807,"mutability":"mutable","name":"returndata","nameLocation":"3849:10:3","nodeType":"VariableDeclaration","scope":819,"src":"3836:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":806,"name":"bytes","nodeType":"ElementaryTypeName","src":"3836:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":812,"initialValue":{"arguments":[{"id":810,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":799,"src":"3881:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":808,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"3863:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3870:10:3","memberName":"staticcall","nodeType":"MemberAccess","src":"3863:17:3","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3863:23:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3821:65:3"},{"expression":{"arguments":[{"id":814,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"3930:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":815,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"3938:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":816,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":807,"src":"3947:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":813,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"3903:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3903:55:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":803,"id":818,"nodeType":"Return","src":"3896:62:3"}]},"documentation":{"id":795,"nodeType":"StructuredDocumentation","src":"3578:128:3","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."},"id":820,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"3720:18:3","nodeType":"FunctionDefinition","parameters":{"id":800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":797,"mutability":"mutable","name":"target","nameLocation":"3747:6:3","nodeType":"VariableDeclaration","scope":820,"src":"3739:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":796,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":799,"mutability":"mutable","name":"data","nameLocation":"3768:4:3","nodeType":"VariableDeclaration","scope":820,"src":"3755:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":798,"name":"bytes","nodeType":"ElementaryTypeName","src":"3755:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3738:35:3"},"returnParameters":{"id":803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":802,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":820,"src":"3797:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":801,"name":"bytes","nodeType":"ElementaryTypeName","src":"3797:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3796:14:3"},"scope":927,"src":"3711:254:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":845,"nodeType":"Block","src":"4203:156:3","statements":[{"assignments":[831,833],"declarations":[{"constant":false,"id":831,"mutability":"mutable","name":"success","nameLocation":"4219:7:3","nodeType":"VariableDeclaration","scope":845,"src":"4214:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":830,"name":"bool","nodeType":"ElementaryTypeName","src":"4214:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":833,"mutability":"mutable","name":"returndata","nameLocation":"4241:10:3","nodeType":"VariableDeclaration","scope":845,"src":"4228:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":832,"name":"bytes","nodeType":"ElementaryTypeName","src":"4228:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":838,"initialValue":{"arguments":[{"id":836,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"4275:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":834,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"4255:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4262:12:3","memberName":"delegatecall","nodeType":"MemberAccess","src":"4255:19:3","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4255:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4213:67:3"},{"expression":{"arguments":[{"id":840,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"4324:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":841,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"4332:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":842,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"4341:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":839,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"4297:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:55:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":829,"id":844,"nodeType":"Return","src":"4290:62:3"}]},"documentation":{"id":821,"nodeType":"StructuredDocumentation","src":"3971:130:3","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."},"id":846,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"4115:20:3","nodeType":"FunctionDefinition","parameters":{"id":826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":823,"mutability":"mutable","name":"target","nameLocation":"4144:6:3","nodeType":"VariableDeclaration","scope":846,"src":"4136:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":822,"name":"address","nodeType":"ElementaryTypeName","src":"4136:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":825,"mutability":"mutable","name":"data","nameLocation":"4165:4:3","nodeType":"VariableDeclaration","scope":846,"src":"4152:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":824,"name":"bytes","nodeType":"ElementaryTypeName","src":"4152:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4135:35:3"},"returnParameters":{"id":829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":828,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":846,"src":"4189:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":827,"name":"bytes","nodeType":"ElementaryTypeName","src":"4189:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4188:14:3"},"scope":927,"src":"4106:253:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":885,"nodeType":"Block","src":"4783:424:3","statements":[{"condition":{"id":859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4797:8:3","subExpression":{"id":858,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"4798:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":883,"nodeType":"Block","src":"4857:344:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":865,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"5045:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5056:6:3","memberName":"length","nodeType":"MemberAccess","src":"5045:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5066:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5045:22:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":869,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"5071:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5078:4:3","memberName":"code","nodeType":"MemberAccess","src":"5071:11:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5083:6:3","memberName":"length","nodeType":"MemberAccess","src":"5071:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5093:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5071:23:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5045:49:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":880,"nodeType":"IfStatement","src":"5041:119:3","trueBody":{"id":879,"nodeType":"Block","src":"5096:64:3","statements":[{"errorCall":{"arguments":[{"id":876,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"5138:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":875,"name":"AddressEmptyCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"5121:16:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5121:24:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":878,"nodeType":"RevertStatement","src":"5114:31:3"}]}},{"expression":{"id":881,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"5180:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":857,"id":882,"nodeType":"Return","src":"5173:17:3"}]},"id":884,"nodeType":"IfStatement","src":"4793:408:3","trueBody":{"id":864,"nodeType":"Block","src":"4807:44:3","statements":[{"expression":{"arguments":[{"id":861,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"4829:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":860,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"4821:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4821:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":863,"nodeType":"ExpressionStatement","src":"4821:19:3"}]}}]},"documentation":{"id":847,"nodeType":"StructuredDocumentation","src":"4365:255:3","text":" @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."},"id":886,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"4634:26:3","nodeType":"FunctionDefinition","parameters":{"id":854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":849,"mutability":"mutable","name":"target","nameLocation":"4678:6:3","nodeType":"VariableDeclaration","scope":886,"src":"4670:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":848,"name":"address","nodeType":"ElementaryTypeName","src":"4670:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":851,"mutability":"mutable","name":"success","nameLocation":"4699:7:3","nodeType":"VariableDeclaration","scope":886,"src":"4694:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":850,"name":"bool","nodeType":"ElementaryTypeName","src":"4694:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":853,"mutability":"mutable","name":"returndata","nameLocation":"4729:10:3","nodeType":"VariableDeclaration","scope":886,"src":"4716:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":852,"name":"bytes","nodeType":"ElementaryTypeName","src":"4716:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4660:85:3"},"returnParameters":{"id":857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":856,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":886,"src":"4769:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":855,"name":"bytes","nodeType":"ElementaryTypeName","src":"4769:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4768:14:3"},"scope":927,"src":"4625:582:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":907,"nodeType":"Block","src":"5509:122:3","statements":[{"condition":{"id":897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5523:8:3","subExpression":{"id":896,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":889,"src":"5524:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":905,"nodeType":"Block","src":"5583:42:3","statements":[{"expression":{"id":903,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"5604:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":895,"id":904,"nodeType":"Return","src":"5597:17:3"}]},"id":906,"nodeType":"IfStatement","src":"5519:106:3","trueBody":{"id":902,"nodeType":"Block","src":"5533:44:3","statements":[{"expression":{"arguments":[{"id":899,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"5555:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":898,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"5547:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5547:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":901,"nodeType":"ExpressionStatement","src":"5547:19:3"}]}}]},"documentation":{"id":887,"nodeType":"StructuredDocumentation","src":"5213:189:3","text":" @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."},"id":908,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"5416:16:3","nodeType":"FunctionDefinition","parameters":{"id":892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":889,"mutability":"mutable","name":"success","nameLocation":"5438:7:3","nodeType":"VariableDeclaration","scope":908,"src":"5433:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":888,"name":"bool","nodeType":"ElementaryTypeName","src":"5433:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":891,"mutability":"mutable","name":"returndata","nameLocation":"5460:10:3","nodeType":"VariableDeclaration","scope":908,"src":"5447:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":890,"name":"bytes","nodeType":"ElementaryTypeName","src":"5447:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5432:39:3"},"returnParameters":{"id":895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":894,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":908,"src":"5495:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":893,"name":"bytes","nodeType":"ElementaryTypeName","src":"5495:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5494:14:3"},"scope":927,"src":"5407:224:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":925,"nodeType":"Block","src":"5798:461:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":914,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"5874:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5885:6:3","memberName":"length","nodeType":"MemberAccess","src":"5874:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5894:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5874:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":923,"nodeType":"Block","src":"6204:49:3","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":920,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"6225:15:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6225:17:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":922,"nodeType":"RevertStatement","src":"6218:24:3"}]},"id":924,"nodeType":"IfStatement","src":"5870:383:3","trueBody":{"id":919,"nodeType":"Block","src":"5897:301:3","statements":[{"AST":{"nodeType":"YulBlock","src":"6055:133:3","statements":[{"nodeType":"YulVariableDeclaration","src":"6073:40:3","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"6102:10:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6096:5:3"},"nodeType":"YulFunctionCall","src":"6096:17:3"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"6077:15:3","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6141:2:3","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"6145:10:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6137:3:3"},"nodeType":"YulFunctionCall","src":"6137:19:3"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"6158:15:3"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6130:6:3"},"nodeType":"YulFunctionCall","src":"6130:44:3"},"nodeType":"YulExpressionStatement","src":"6130:44:3"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":911,"isOffset":false,"isSlot":false,"src":"6102:10:3","valueSize":1},{"declaration":911,"isOffset":false,"isSlot":false,"src":"6145:10:3","valueSize":1}],"id":918,"nodeType":"InlineAssembly","src":"6046:142:3"}]}}]},"documentation":{"id":909,"nodeType":"StructuredDocumentation","src":"5637:101:3","text":" @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."},"id":926,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"5752:7:3","nodeType":"FunctionDefinition","parameters":{"id":912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":911,"mutability":"mutable","name":"returndata","nameLocation":"5773:10:3","nodeType":"VariableDeclaration","scope":926,"src":"5760:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":910,"name":"bytes","nodeType":"ElementaryTypeName","src":"5760:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5759:25:3"},"returnParameters":{"id":913,"nodeType":"ParameterList","parameters":[],"src":"5798:0:3"},"scope":927,"src":"5743:516:3","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":928,"src":"195:6066:3","usedErrors":[682,687,690],"usedEvents":[]}],"src":"101:6161:3"},"id":3},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[957]},"id":958,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":929,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:4"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":930,"nodeType":"StructuredDocumentation","src":"127:496:4","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":957,"linearizedBaseContracts":[957],"name":"Context","nameLocation":"642:7:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":938,"nodeType":"Block","src":"718:34:4","statements":[{"expression":{"expression":{"id":935,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:4","memberName":"sender","nodeType":"MemberAccess","src":"735:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":934,"id":937,"nodeType":"Return","src":"728:17:4"}]},"id":939,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:4","nodeType":"FunctionDefinition","parameters":{"id":931,"nodeType":"ParameterList","parameters":[],"src":"675:2:4"},"returnParameters":{"id":934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":933,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":939,"src":"709:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":932,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:4"},"scope":957,"src":"656:96:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":947,"nodeType":"Block","src":"825:32:4","statements":[{"expression":{"expression":{"id":944,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:4","memberName":"data","nodeType":"MemberAccess","src":"842:8:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":943,"id":946,"nodeType":"Return","src":"835:15:4"}]},"id":948,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:4","nodeType":"FunctionDefinition","parameters":{"id":940,"nodeType":"ParameterList","parameters":[],"src":"775:2:4"},"returnParameters":{"id":943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":942,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":948,"src":"809:14:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":941,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:4"},"scope":957,"src":"758:99:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":955,"nodeType":"Block","src":"935:25:4","statements":[{"expression":{"hexValue":"30","id":953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":952,"id":954,"nodeType":"Return","src":"945:8:4"}]},"id":956,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:4","nodeType":"FunctionDefinition","parameters":{"id":949,"nodeType":"ParameterList","parameters":[],"src":"892:2:4"},"returnParameters":{"id":952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":951,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":956,"src":"926:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":950,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:4"},"scope":957,"src":"863:97:4","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":958,"src":"624:338:4","usedErrors":[],"usedEvents":[]}],"src":"101:862:4"},"id":4},"@openzeppelin/contracts/utils/Nonces.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","exportedSymbols":{"Nonces":[1025]},"id":1026,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":959,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:5"},{"abstract":true,"baseContracts":[],"canonicalName":"Nonces","contractDependencies":[],"contractKind":"contract","documentation":{"id":960,"nodeType":"StructuredDocumentation","src":"125:83:5","text":" @dev Provides tracking nonces for addresses. Nonces will only increment."},"fullyImplemented":true,"id":1025,"linearizedBaseContracts":[1025],"name":"Nonces","nameLocation":"227:6:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":961,"nodeType":"StructuredDocumentation","src":"240:90:5","text":" @dev The nonce used for an `account` is not the expected current nonce."},"errorSelector":"752d88c0","id":967,"name":"InvalidAccountNonce","nameLocation":"341:19:5","nodeType":"ErrorDefinition","parameters":{"id":966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":963,"mutability":"mutable","name":"account","nameLocation":"369:7:5","nodeType":"VariableDeclaration","scope":967,"src":"361:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":962,"name":"address","nodeType":"ElementaryTypeName","src":"361:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":965,"mutability":"mutable","name":"currentNonce","nameLocation":"386:12:5","nodeType":"VariableDeclaration","scope":967,"src":"378:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":964,"name":"uint256","nodeType":"ElementaryTypeName","src":"378:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"360:39:5"},"src":"335:65:5"},{"constant":false,"id":971,"mutability":"mutable","name":"_nonces","nameLocation":"450:7:5","nodeType":"VariableDeclaration","scope":1025,"src":"406:51:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":970,"keyName":"account","keyNameLocation":"422:7:5","keyType":{"id":968,"name":"address","nodeType":"ElementaryTypeName","src":"414:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"406:35:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":969,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"body":{"id":983,"nodeType":"Block","src":"607:38:5","statements":[{"expression":{"baseExpression":{"id":979,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"624:7:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":981,"indexExpression":{"id":980,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"632:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"624:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":978,"id":982,"nodeType":"Return","src":"617:21:5"}]},"documentation":{"id":972,"nodeType":"StructuredDocumentation","src":"464:69:5","text":" @dev Returns the next unused nonce for an address."},"functionSelector":"7ecebe00","id":984,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"547:6:5","nodeType":"FunctionDefinition","parameters":{"id":975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":974,"mutability":"mutable","name":"owner","nameLocation":"562:5:5","nodeType":"VariableDeclaration","scope":984,"src":"554:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":973,"name":"address","nodeType":"ElementaryTypeName","src":"554:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"553:15:5"},"returnParameters":{"id":978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":977,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":984,"src":"598:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":976,"name":"uint256","nodeType":"ElementaryTypeName","src":"598:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"597:9:5"},"scope":1025,"src":"538:107:5","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":998,"nodeType":"Block","src":"828:326:5","statements":[{"id":997,"nodeType":"UncheckedBlock","src":"1031:117:5","statements":[{"expression":{"id":995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1121:16:5","subExpression":{"baseExpression":{"id":992,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"1121:7:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":994,"indexExpression":{"id":993,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"1129:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1121:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":991,"id":996,"nodeType":"Return","src":"1114:23:5"}]}]},"documentation":{"id":985,"nodeType":"StructuredDocumentation","src":"651:103:5","text":" @dev Consumes a nonce.\n Returns the current value and increments nonce."},"id":999,"implemented":true,"kind":"function","modifiers":[],"name":"_useNonce","nameLocation":"768:9:5","nodeType":"FunctionDefinition","parameters":{"id":988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":987,"mutability":"mutable","name":"owner","nameLocation":"786:5:5","nodeType":"VariableDeclaration","scope":999,"src":"778:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":986,"name":"address","nodeType":"ElementaryTypeName","src":"778:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"777:15:5"},"returnParameters":{"id":991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":990,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":999,"src":"819:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":989,"name":"uint256","nodeType":"ElementaryTypeName","src":"819:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"818:9:5"},"scope":1025,"src":"759:395:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1023,"nodeType":"Block","src":"1338:149:5","statements":[{"assignments":[1008],"declarations":[{"constant":false,"id":1008,"mutability":"mutable","name":"current","nameLocation":"1356:7:5","nodeType":"VariableDeclaration","scope":1023,"src":"1348:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1007,"name":"uint256","nodeType":"ElementaryTypeName","src":"1348:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1012,"initialValue":{"arguments":[{"id":1010,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"1376:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1009,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"1366:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1366:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1348:34:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1013,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1004,"src":"1396:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1014,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"1405:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1396:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1022,"nodeType":"IfStatement","src":"1392:89:5","trueBody":{"id":1021,"nodeType":"Block","src":"1414:67:5","statements":[{"errorCall":{"arguments":[{"id":1017,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"1455:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1018,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"1462:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1016,"name":"InvalidAccountNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"1435:19:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":1019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1435:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1020,"nodeType":"RevertStatement","src":"1428:42:5"}]}}]},"documentation":{"id":1000,"nodeType":"StructuredDocumentation","src":"1160:100:5","text":" @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`."},"id":1024,"implemented":true,"kind":"function","modifiers":[],"name":"_useCheckedNonce","nameLocation":"1274:16:5","nodeType":"FunctionDefinition","parameters":{"id":1005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1002,"mutability":"mutable","name":"owner","nameLocation":"1299:5:5","nodeType":"VariableDeclaration","scope":1024,"src":"1291:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1001,"name":"address","nodeType":"ElementaryTypeName","src":"1291:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1004,"mutability":"mutable","name":"nonce","nameLocation":"1314:5:5","nodeType":"VariableDeclaration","scope":1024,"src":"1306:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1003,"name":"uint256","nodeType":"ElementaryTypeName","src":"1306:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1290:30:5"},"returnParameters":{"id":1006,"nodeType":"ParameterList","parameters":[],"src":"1338:0:5"},"scope":1025,"src":"1265:222:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1026,"src":"209:1280:5","usedErrors":[967],"usedEvents":[]}],"src":"99:1391:5"},"id":5},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","exportedSymbols":{"ShortString":[1031],"ShortStrings":[1242],"StorageSlot":[1352]},"id":1243,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1027,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:6"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":1029,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1243,"sourceUnit":1353,"src":"132:46:6","symbolAliases":[{"foreign":{"id":1028,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"140:11:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"ShortString","id":1031,"name":"ShortString","nameLocation":"353:11:6","nodeType":"UserDefinedValueTypeDefinition","src":"348:28:6","underlyingType":{"id":1030,"name":"bytes32","nodeType":"ElementaryTypeName","src":"368:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"ShortStrings","contractDependencies":[],"contractKind":"library","documentation":{"id":1032,"nodeType":"StructuredDocumentation","src":"378:876:6","text":" @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"},"fullyImplemented":true,"id":1242,"linearizedBaseContracts":[1242],"name":"ShortStrings","nameLocation":"1263:12:6","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1035,"mutability":"constant","name":"FALLBACK_SENTINEL","nameLocation":"1370:17:6","nodeType":"VariableDeclaration","scope":1242,"src":"1345:111:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1033,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1345:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646","id":1034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1390:66:6","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000000000000000000000000000000000000000000000000000FF"},"visibility":"private"},{"errorSelector":"305a27a9","id":1039,"name":"StringTooLong","nameLocation":"1469:13:6","nodeType":"ErrorDefinition","parameters":{"id":1038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1037,"mutability":"mutable","name":"str","nameLocation":"1490:3:6","nodeType":"VariableDeclaration","scope":1039,"src":"1483:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1036,"name":"string","nodeType":"ElementaryTypeName","src":"1483:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1482:12:6"},"src":"1463:32:6"},{"errorSelector":"b3512b0c","id":1041,"name":"InvalidShortString","nameLocation":"1506:18:6","nodeType":"ErrorDefinition","parameters":{"id":1040,"nodeType":"ParameterList","parameters":[],"src":"1524:2:6"},"src":"1500:27:6"},{"body":{"id":1084,"nodeType":"Block","src":"1786:208:6","statements":[{"assignments":[1051],"declarations":[{"constant":false,"id":1051,"mutability":"mutable","name":"bstr","nameLocation":"1809:4:6","nodeType":"VariableDeclaration","scope":1084,"src":"1796:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1050,"name":"bytes","nodeType":"ElementaryTypeName","src":"1796:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1056,"initialValue":{"arguments":[{"id":1054,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"1822:3:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1053,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1816:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1052,"name":"bytes","nodeType":"ElementaryTypeName","src":"1816:5:6","typeDescriptions":{}}},"id":1055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1816:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1796:30:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1057,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"1840:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1845:6:6","memberName":"length","nodeType":"MemberAccess","src":"1840:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":1059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1854:2:6","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1840:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1066,"nodeType":"IfStatement","src":"1836:72:6","trueBody":{"id":1065,"nodeType":"Block","src":"1858:50:6","statements":[{"errorCall":{"arguments":[{"id":1062,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"1893:3:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1061,"name":"StringTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"1879:13:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1879:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1064,"nodeType":"RevertStatement","src":"1872:25:6"}]}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1075,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"1965:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1074,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1957:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1073,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1957:7:6","typeDescriptions":{}}},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1957:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1949:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1071,"name":"uint256","nodeType":"ElementaryTypeName","src":"1949:7:6","typeDescriptions":{}}},"id":1077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1949:22:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":1078,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"1974:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1979:6:6","memberName":"length","nodeType":"MemberAccess","src":"1974:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1949:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1941:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1069,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1941:7:6","typeDescriptions":{}}},"id":1081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1941:45:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1067,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"1924:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1031_$","typeString":"type(ShortString)"}},"id":1068,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1936:4:6","memberName":"wrap","nodeType":"MemberAccess","src":"1924:16:6","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1031_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":1082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1924:63:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1031","typeString":"ShortString"}},"functionReturnParameters":1049,"id":1083,"nodeType":"Return","src":"1917:70:6"}]},"documentation":{"id":1042,"nodeType":"StructuredDocumentation","src":"1533:170:6","text":" @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."},"id":1085,"implemented":true,"kind":"function","modifiers":[],"name":"toShortString","nameLocation":"1717:13:6","nodeType":"FunctionDefinition","parameters":{"id":1045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1044,"mutability":"mutable","name":"str","nameLocation":"1745:3:6","nodeType":"VariableDeclaration","scope":1085,"src":"1731:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1043,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1730:19:6"},"returnParameters":{"id":1049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1048,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1085,"src":"1773:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1031","typeString":"ShortString"},"typeName":{"id":1047,"nodeType":"UserDefinedTypeName","pathNode":{"id":1046,"name":"ShortString","nameLocations":["1773:11:6"],"nodeType":"IdentifierPath","referencedDeclaration":1031,"src":"1773:11:6"},"referencedDeclaration":1031,"src":"1773:11:6","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1031","typeString":"ShortString"}},"visibility":"internal"}],"src":"1772:13:6"},"scope":1242,"src":"1708:286:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1110,"nodeType":"Block","src":"2152:331:6","statements":[{"assignments":[1095],"declarations":[{"constant":false,"id":1095,"mutability":"mutable","name":"len","nameLocation":"2170:3:6","nodeType":"VariableDeclaration","scope":1110,"src":"2162:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1094,"name":"uint256","nodeType":"ElementaryTypeName","src":"2162:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1099,"initialValue":{"arguments":[{"id":1097,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"2187:4:6","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1031","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1031","typeString":"ShortString"}],"id":1096,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"2176:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1031_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":1098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:16:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2162:30:6"},{"assignments":[1101],"declarations":[{"constant":false,"id":1101,"mutability":"mutable","name":"str","nameLocation":"2294:3:6","nodeType":"VariableDeclaration","scope":1110,"src":"2280:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1100,"name":"string","nodeType":"ElementaryTypeName","src":"2280:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1106,"initialValue":{"arguments":[{"hexValue":"3332","id":1104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2311:2:6","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":1103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2300:10:6","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1102,"name":"string","nodeType":"ElementaryTypeName","src":"2304:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2300:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2280:34:6"},{"AST":{"nodeType":"YulBlock","src":"2376:81:6","statements":[{"expression":{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"2397:3:6"},{"name":"len","nodeType":"YulIdentifier","src":"2402:3:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2390:6:6"},"nodeType":"YulFunctionCall","src":"2390:16:6"},"nodeType":"YulExpressionStatement","src":"2390:16:6"},{"expression":{"arguments":[{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"2430:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"2435:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2426:3:6"},"nodeType":"YulFunctionCall","src":"2426:14:6"},{"name":"sstr","nodeType":"YulIdentifier","src":"2442:4:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2419:6:6"},"nodeType":"YulFunctionCall","src":"2419:28:6"},"nodeType":"YulExpressionStatement","src":"2419:28:6"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1095,"isOffset":false,"isSlot":false,"src":"2402:3:6","valueSize":1},{"declaration":1089,"isOffset":false,"isSlot":false,"src":"2442:4:6","valueSize":1},{"declaration":1101,"isOffset":false,"isSlot":false,"src":"2397:3:6","valueSize":1},{"declaration":1101,"isOffset":false,"isSlot":false,"src":"2430:3:6","valueSize":1}],"id":1107,"nodeType":"InlineAssembly","src":"2367:90:6"},{"expression":{"id":1108,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"2473:3:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1093,"id":1109,"nodeType":"Return","src":"2466:10:6"}]},"documentation":{"id":1086,"nodeType":"StructuredDocumentation","src":"2000:73:6","text":" @dev Decode a `ShortString` back to a \"normal\" string."},"id":1111,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"2087:8:6","nodeType":"FunctionDefinition","parameters":{"id":1090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1089,"mutability":"mutable","name":"sstr","nameLocation":"2108:4:6","nodeType":"VariableDeclaration","scope":1111,"src":"2096:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1031","typeString":"ShortString"},"typeName":{"id":1088,"nodeType":"UserDefinedTypeName","pathNode":{"id":1087,"name":"ShortString","nameLocations":["2096:11:6"],"nodeType":"IdentifierPath","referencedDeclaration":1031,"src":"2096:11:6"},"referencedDeclaration":1031,"src":"2096:11:6","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1031","typeString":"ShortString"}},"visibility":"internal"}],"src":"2095:18:6"},"returnParameters":{"id":1093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1092,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1111,"src":"2137:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1091,"name":"string","nodeType":"ElementaryTypeName","src":"2137:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2136:15:6"},"scope":1242,"src":"2078:405:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1142,"nodeType":"Block","src":"2625:175:6","statements":[{"assignments":[1121],"declarations":[{"constant":false,"id":1121,"mutability":"mutable","name":"result","nameLocation":"2643:6:6","nodeType":"VariableDeclaration","scope":1142,"src":"2635:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1120,"name":"uint256","nodeType":"ElementaryTypeName","src":"2635:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1131,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1126,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"2679:4:6","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1031","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1031","typeString":"ShortString"}],"expression":{"id":1124,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"2660:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1031_$","typeString":"type(ShortString)"}},"id":1125,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2672:6:6","memberName":"unwrap","nodeType":"MemberAccess","src":"2660:18:6","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1031_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2660:24:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1123,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2652:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1122,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:6","typeDescriptions":{}}},"id":1128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2652:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646","id":1129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2688:4:6","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"2652:40:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2635:57:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1132,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"2706:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":1133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2715:2:6","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"2706:11:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1139,"nodeType":"IfStatement","src":"2702:69:6","trueBody":{"id":1138,"nodeType":"Block","src":"2719:52:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1135,"name":"InvalidShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"2740:18:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2740:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1137,"nodeType":"RevertStatement","src":"2733:27:6"}]}},{"expression":{"id":1140,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"2787:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1119,"id":1141,"nodeType":"Return","src":"2780:13:6"}]},"documentation":{"id":1112,"nodeType":"StructuredDocumentation","src":"2489:61:6","text":" @dev Return the length of a `ShortString`."},"id":1143,"implemented":true,"kind":"function","modifiers":[],"name":"byteLength","nameLocation":"2564:10:6","nodeType":"FunctionDefinition","parameters":{"id":1116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1115,"mutability":"mutable","name":"sstr","nameLocation":"2587:4:6","nodeType":"VariableDeclaration","scope":1143,"src":"2575:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1031","typeString":"ShortString"},"typeName":{"id":1114,"nodeType":"UserDefinedTypeName","pathNode":{"id":1113,"name":"ShortString","nameLocations":["2575:11:6"],"nodeType":"IdentifierPath","referencedDeclaration":1031,"src":"2575:11:6"},"referencedDeclaration":1031,"src":"2575:11:6","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1031","typeString":"ShortString"}},"visibility":"internal"}],"src":"2574:18:6"},"returnParameters":{"id":1119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1118,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1143,"src":"2616:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1117,"name":"uint256","nodeType":"ElementaryTypeName","src":"2616:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2615:9:6"},"scope":1242,"src":"2555:245:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1182,"nodeType":"Block","src":"3023:231:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1156,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"3043:5:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1155,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3037:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1154,"name":"bytes","nodeType":"ElementaryTypeName","src":"3037:5:6","typeDescriptions":{}}},"id":1157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3037:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3050:6:6","memberName":"length","nodeType":"MemberAccess","src":"3037:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":1159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3059:2:6","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3037:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1180,"nodeType":"Block","src":"3121:127:6","statements":[{"expression":{"id":1173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1169,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1148,"src":"3161:5:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"expression":{"id":1166,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"3135:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1352_$","typeString":"type(library StorageSlot)"}},"id":1168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3147:13:6","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":1329,"src":"3135:25:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$1260_storage_ptr_$","typeString":"function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":1170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3135:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1260_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"id":1171,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3168:5:6","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1259,"src":"3135:38:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1172,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"3176:5:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3135:46:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1174,"nodeType":"ExpressionStatement","src":"3135:46:6"},{"expression":{"arguments":[{"id":1177,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"3219:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1175,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"3202:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1031_$","typeString":"type(ShortString)"}},"id":1176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3214:4:6","memberName":"wrap","nodeType":"MemberAccess","src":"3202:16:6","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1031_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":1178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3202:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1031","typeString":"ShortString"}},"functionReturnParameters":1153,"id":1179,"nodeType":"Return","src":"3195:42:6"}]},"id":1181,"nodeType":"IfStatement","src":"3033:215:6","trueBody":{"id":1165,"nodeType":"Block","src":"3063:52:6","statements":[{"expression":{"arguments":[{"id":1162,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"3098:5:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1161,"name":"toShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"3084:13:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$1031_$","typeString":"function (string memory) pure returns (ShortString)"}},"id":1163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3084:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1031","typeString":"ShortString"}},"functionReturnParameters":1153,"id":1164,"nodeType":"Return","src":"3077:27:6"}]}}]},"documentation":{"id":1144,"nodeType":"StructuredDocumentation","src":"2806:103:6","text":" @dev Encode a string into a `ShortString`, or write it to storage if it is too long."},"id":1183,"implemented":true,"kind":"function","modifiers":[],"name":"toShortStringWithFallback","nameLocation":"2923:25:6","nodeType":"FunctionDefinition","parameters":{"id":1149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1146,"mutability":"mutable","name":"value","nameLocation":"2963:5:6","nodeType":"VariableDeclaration","scope":1183,"src":"2949:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1145,"name":"string","nodeType":"ElementaryTypeName","src":"2949:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1148,"mutability":"mutable","name":"store","nameLocation":"2985:5:6","nodeType":"VariableDeclaration","scope":1183,"src":"2970:20:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1147,"name":"string","nodeType":"ElementaryTypeName","src":"2970:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2948:43:6"},"returnParameters":{"id":1153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1152,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1183,"src":"3010:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1031","typeString":"ShortString"},"typeName":{"id":1151,"nodeType":"UserDefinedTypeName","pathNode":{"id":1150,"name":"ShortString","nameLocations":["3010:11:6"],"nodeType":"IdentifierPath","referencedDeclaration":1031,"src":"3010:11:6"},"referencedDeclaration":1031,"src":"3010:11:6","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1031","typeString":"ShortString"}},"visibility":"internal"}],"src":"3009:13:6"},"scope":1242,"src":"2914:340:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1209,"nodeType":"Block","src":"3494:158:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1196,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"3527:5:6","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1031","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1031","typeString":"ShortString"}],"expression":{"id":1194,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"3508:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1031_$","typeString":"type(ShortString)"}},"id":1195,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3520:6:6","memberName":"unwrap","nodeType":"MemberAccess","src":"3508:18:6","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1031_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3508:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1198,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"3537:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3508:46:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1207,"nodeType":"Block","src":"3609:37:6","statements":[{"expression":{"id":1205,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"3630:5:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"functionReturnParameters":1193,"id":1206,"nodeType":"Return","src":"3623:12:6"}]},"id":1208,"nodeType":"IfStatement","src":"3504:142:6","trueBody":{"id":1204,"nodeType":"Block","src":"3556:47:6","statements":[{"expression":{"arguments":[{"id":1201,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"3586:5:6","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1031","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1031","typeString":"ShortString"}],"id":1200,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"3577:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1031_$returns$_t_string_memory_ptr_$","typeString":"function (ShortString) pure returns (string memory)"}},"id":1202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3577:15:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1193,"id":1203,"nodeType":"Return","src":"3570:22:6"}]}}]},"documentation":{"id":1184,"nodeType":"StructuredDocumentation","src":"3260:120:6","text":" @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."},"id":1210,"implemented":true,"kind":"function","modifiers":[],"name":"toStringWithFallback","nameLocation":"3394:20:6","nodeType":"FunctionDefinition","parameters":{"id":1190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1187,"mutability":"mutable","name":"value","nameLocation":"3427:5:6","nodeType":"VariableDeclaration","scope":1210,"src":"3415:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1031","typeString":"ShortString"},"typeName":{"id":1186,"nodeType":"UserDefinedTypeName","pathNode":{"id":1185,"name":"ShortString","nameLocations":["3415:11:6"],"nodeType":"IdentifierPath","referencedDeclaration":1031,"src":"3415:11:6"},"referencedDeclaration":1031,"src":"3415:11:6","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1031","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":1189,"mutability":"mutable","name":"store","nameLocation":"3449:5:6","nodeType":"VariableDeclaration","scope":1210,"src":"3434:20:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1188,"name":"string","nodeType":"ElementaryTypeName","src":"3434:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3414:41:6"},"returnParameters":{"id":1193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1210,"src":"3479:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1191,"name":"string","nodeType":"ElementaryTypeName","src":"3479:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3478:15:6"},"scope":1242,"src":"3385:267:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1240,"nodeType":"Block","src":"4132:174:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1223,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1214,"src":"4165:5:6","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1031","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1031","typeString":"ShortString"}],"expression":{"id":1221,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"4146:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1031_$","typeString":"type(ShortString)"}},"id":1222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4158:6:6","memberName":"unwrap","nodeType":"MemberAccess","src":"4146:18:6","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1031_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4146:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1225,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"4175:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4146:46:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1238,"nodeType":"Block","src":"4249:51:6","statements":[{"expression":{"expression":{"arguments":[{"id":1234,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1216,"src":"4276:5:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"id":1233,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4270:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1232,"name":"bytes","nodeType":"ElementaryTypeName","src":"4270:5:6","typeDescriptions":{}}},"id":1235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4270:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":1236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4283:6:6","memberName":"length","nodeType":"MemberAccess","src":"4270:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1220,"id":1237,"nodeType":"Return","src":"4263:26:6"}]},"id":1239,"nodeType":"IfStatement","src":"4142:158:6","trueBody":{"id":1231,"nodeType":"Block","src":"4194:49:6","statements":[{"expression":{"arguments":[{"id":1228,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1214,"src":"4226:5:6","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1031","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1031","typeString":"ShortString"}],"id":1227,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"4215:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1031_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":1229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4215:17:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1220,"id":1230,"nodeType":"Return","src":"4208:24:6"}]}}]},"documentation":{"id":1211,"nodeType":"StructuredDocumentation","src":"3658:364:6","text":" @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."},"id":1241,"implemented":true,"kind":"function","modifiers":[],"name":"byteLengthWithFallback","nameLocation":"4036:22:6","nodeType":"FunctionDefinition","parameters":{"id":1217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1214,"mutability":"mutable","name":"value","nameLocation":"4071:5:6","nodeType":"VariableDeclaration","scope":1241,"src":"4059:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1031","typeString":"ShortString"},"typeName":{"id":1213,"nodeType":"UserDefinedTypeName","pathNode":{"id":1212,"name":"ShortString","nameLocations":["4059:11:6"],"nodeType":"IdentifierPath","referencedDeclaration":1031,"src":"4059:11:6"},"referencedDeclaration":1031,"src":"4059:11:6","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1031","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":1216,"mutability":"mutable","name":"store","nameLocation":"4093:5:6","nodeType":"VariableDeclaration","scope":1241,"src":"4078:20:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1215,"name":"string","nodeType":"ElementaryTypeName","src":"4078:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4058:41:6"},"returnParameters":{"id":1220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1219,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1241,"src":"4123:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1218,"name":"uint256","nodeType":"ElementaryTypeName","src":"4123:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4122:9:6"},"scope":1242,"src":"4027:279:6","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1243,"src":"1255:3053:6","usedErrors":[1039,1041],"usedEvents":[]}],"src":"106:4203:6"},"id":6},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[1352]},"id":1353,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1244,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":1245,"nodeType":"StructuredDocumentation","src":"219:1025:7","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"},"fullyImplemented":true,"id":1352,"linearizedBaseContracts":[1352],"name":"StorageSlot","nameLocation":"1253:11:7","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":1248,"members":[{"constant":false,"id":1247,"mutability":"mutable","name":"value","nameLocation":"1308:5:7","nodeType":"VariableDeclaration","scope":1248,"src":"1300:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1246,"name":"address","nodeType":"ElementaryTypeName","src":"1300:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1278:11:7","nodeType":"StructDefinition","scope":1352,"src":"1271:49:7","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":1251,"members":[{"constant":false,"id":1250,"mutability":"mutable","name":"value","nameLocation":"1360:5:7","nodeType":"VariableDeclaration","scope":1251,"src":"1355:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1249,"name":"bool","nodeType":"ElementaryTypeName","src":"1355:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1333:11:7","nodeType":"StructDefinition","scope":1352,"src":"1326:46:7","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":1254,"members":[{"constant":false,"id":1253,"mutability":"mutable","name":"value","nameLocation":"1415:5:7","nodeType":"VariableDeclaration","scope":1254,"src":"1407:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1252,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1407:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1385:11:7","nodeType":"StructDefinition","scope":1352,"src":"1378:49:7","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":1257,"members":[{"constant":false,"id":1256,"mutability":"mutable","name":"value","nameLocation":"1470:5:7","nodeType":"VariableDeclaration","scope":1257,"src":"1462:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1255,"name":"uint256","nodeType":"ElementaryTypeName","src":"1462:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1440:11:7","nodeType":"StructDefinition","scope":1352,"src":"1433:49:7","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":1260,"members":[{"constant":false,"id":1259,"mutability":"mutable","name":"value","nameLocation":"1523:5:7","nodeType":"VariableDeclaration","scope":1260,"src":"1516:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1258,"name":"string","nodeType":"ElementaryTypeName","src":"1516:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1495:10:7","nodeType":"StructDefinition","scope":1352,"src":"1488:47:7","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":1263,"members":[{"constant":false,"id":1262,"mutability":"mutable","name":"value","nameLocation":"1574:5:7","nodeType":"VariableDeclaration","scope":1263,"src":"1568:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1261,"name":"bytes","nodeType":"ElementaryTypeName","src":"1568:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1548:9:7","nodeType":"StructDefinition","scope":1352,"src":"1541:45:7","visibility":"public"},{"body":{"id":1273,"nodeType":"Block","src":"1768:106:7","statements":[{"AST":{"nodeType":"YulBlock","src":"1830:38:7","statements":[{"nodeType":"YulAssignment","src":"1844:14:7","value":{"name":"slot","nodeType":"YulIdentifier","src":"1854:4:7"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"1844:6:7"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1270,"isOffset":false,"isSlot":true,"src":"1844:6:7","suffix":"slot","valueSize":1},{"declaration":1266,"isOffset":false,"isSlot":false,"src":"1854:4:7","valueSize":1}],"id":1272,"nodeType":"InlineAssembly","src":"1821:47:7"}]},"documentation":{"id":1264,"nodeType":"StructuredDocumentation","src":"1592:87:7","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":1274,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1693:14:7","nodeType":"FunctionDefinition","parameters":{"id":1267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1266,"mutability":"mutable","name":"slot","nameLocation":"1716:4:7","nodeType":"VariableDeclaration","scope":1274,"src":"1708:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1265,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1708:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1707:14:7"},"returnParameters":{"id":1271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1270,"mutability":"mutable","name":"r","nameLocation":"1765:1:7","nodeType":"VariableDeclaration","scope":1274,"src":"1745:21:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1248_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":1269,"nodeType":"UserDefinedTypeName","pathNode":{"id":1268,"name":"AddressSlot","nameLocations":["1745:11:7"],"nodeType":"IdentifierPath","referencedDeclaration":1248,"src":"1745:11:7"},"referencedDeclaration":1248,"src":"1745:11:7","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1248_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1744:23:7"},"scope":1352,"src":"1684:190:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1284,"nodeType":"Block","src":"2056:106:7","statements":[{"AST":{"nodeType":"YulBlock","src":"2118:38:7","statements":[{"nodeType":"YulAssignment","src":"2132:14:7","value":{"name":"slot","nodeType":"YulIdentifier","src":"2142:4:7"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2132:6:7"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1281,"isOffset":false,"isSlot":true,"src":"2132:6:7","suffix":"slot","valueSize":1},{"declaration":1277,"isOffset":false,"isSlot":false,"src":"2142:4:7","valueSize":1}],"id":1283,"nodeType":"InlineAssembly","src":"2109:47:7"}]},"documentation":{"id":1275,"nodeType":"StructuredDocumentation","src":"1880:87:7","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":1285,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"1981:14:7","nodeType":"FunctionDefinition","parameters":{"id":1278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1277,"mutability":"mutable","name":"slot","nameLocation":"2004:4:7","nodeType":"VariableDeclaration","scope":1285,"src":"1996:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1276,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1996:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1995:14:7"},"returnParameters":{"id":1282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1281,"mutability":"mutable","name":"r","nameLocation":"2053:1:7","nodeType":"VariableDeclaration","scope":1285,"src":"2033:21:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1251_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":1280,"nodeType":"UserDefinedTypeName","pathNode":{"id":1279,"name":"BooleanSlot","nameLocations":["2033:11:7"],"nodeType":"IdentifierPath","referencedDeclaration":1251,"src":"2033:11:7"},"referencedDeclaration":1251,"src":"2033:11:7","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1251_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2032:23:7"},"scope":1352,"src":"1972:190:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1295,"nodeType":"Block","src":"2344:106:7","statements":[{"AST":{"nodeType":"YulBlock","src":"2406:38:7","statements":[{"nodeType":"YulAssignment","src":"2420:14:7","value":{"name":"slot","nodeType":"YulIdentifier","src":"2430:4:7"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2420:6:7"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1292,"isOffset":false,"isSlot":true,"src":"2420:6:7","suffix":"slot","valueSize":1},{"declaration":1288,"isOffset":false,"isSlot":false,"src":"2430:4:7","valueSize":1}],"id":1294,"nodeType":"InlineAssembly","src":"2397:47:7"}]},"documentation":{"id":1286,"nodeType":"StructuredDocumentation","src":"2168:87:7","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":1296,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2269:14:7","nodeType":"FunctionDefinition","parameters":{"id":1289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1288,"mutability":"mutable","name":"slot","nameLocation":"2292:4:7","nodeType":"VariableDeclaration","scope":1296,"src":"2284:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1287,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2284:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2283:14:7"},"returnParameters":{"id":1293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1292,"mutability":"mutable","name":"r","nameLocation":"2341:1:7","nodeType":"VariableDeclaration","scope":1296,"src":"2321:21:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1254_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":1291,"nodeType":"UserDefinedTypeName","pathNode":{"id":1290,"name":"Bytes32Slot","nameLocations":["2321:11:7"],"nodeType":"IdentifierPath","referencedDeclaration":1254,"src":"2321:11:7"},"referencedDeclaration":1254,"src":"2321:11:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1254_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2320:23:7"},"scope":1352,"src":"2260:190:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1306,"nodeType":"Block","src":"2632:106:7","statements":[{"AST":{"nodeType":"YulBlock","src":"2694:38:7","statements":[{"nodeType":"YulAssignment","src":"2708:14:7","value":{"name":"slot","nodeType":"YulIdentifier","src":"2718:4:7"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2708:6:7"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1303,"isOffset":false,"isSlot":true,"src":"2708:6:7","suffix":"slot","valueSize":1},{"declaration":1299,"isOffset":false,"isSlot":false,"src":"2718:4:7","valueSize":1}],"id":1305,"nodeType":"InlineAssembly","src":"2685:47:7"}]},"documentation":{"id":1297,"nodeType":"StructuredDocumentation","src":"2456:87:7","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":1307,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2557:14:7","nodeType":"FunctionDefinition","parameters":{"id":1300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1299,"mutability":"mutable","name":"slot","nameLocation":"2580:4:7","nodeType":"VariableDeclaration","scope":1307,"src":"2572:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1298,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2572:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2571:14:7"},"returnParameters":{"id":1304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1303,"mutability":"mutable","name":"r","nameLocation":"2629:1:7","nodeType":"VariableDeclaration","scope":1307,"src":"2609:21:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1257_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":1302,"nodeType":"UserDefinedTypeName","pathNode":{"id":1301,"name":"Uint256Slot","nameLocations":["2609:11:7"],"nodeType":"IdentifierPath","referencedDeclaration":1257,"src":"2609:11:7"},"referencedDeclaration":1257,"src":"2609:11:7","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1257_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2608:23:7"},"scope":1352,"src":"2548:190:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1317,"nodeType":"Block","src":"2917:106:7","statements":[{"AST":{"nodeType":"YulBlock","src":"2979:38:7","statements":[{"nodeType":"YulAssignment","src":"2993:14:7","value":{"name":"slot","nodeType":"YulIdentifier","src":"3003:4:7"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2993:6:7"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1314,"isOffset":false,"isSlot":true,"src":"2993:6:7","suffix":"slot","valueSize":1},{"declaration":1310,"isOffset":false,"isSlot":false,"src":"3003:4:7","valueSize":1}],"id":1316,"nodeType":"InlineAssembly","src":"2970:47:7"}]},"documentation":{"id":1308,"nodeType":"StructuredDocumentation","src":"2744:86:7","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":1318,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"2844:13:7","nodeType":"FunctionDefinition","parameters":{"id":1311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1310,"mutability":"mutable","name":"slot","nameLocation":"2866:4:7","nodeType":"VariableDeclaration","scope":1318,"src":"2858:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1309,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2858:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2857:14:7"},"returnParameters":{"id":1315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1314,"mutability":"mutable","name":"r","nameLocation":"2914:1:7","nodeType":"VariableDeclaration","scope":1318,"src":"2895:20:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1260_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1313,"nodeType":"UserDefinedTypeName","pathNode":{"id":1312,"name":"StringSlot","nameLocations":["2895:10:7"],"nodeType":"IdentifierPath","referencedDeclaration":1260,"src":"2895:10:7"},"referencedDeclaration":1260,"src":"2895:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1260_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"2894:22:7"},"scope":1352,"src":"2835:188:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1328,"nodeType":"Block","src":"3225:112:7","statements":[{"AST":{"nodeType":"YulBlock","src":"3287:44:7","statements":[{"nodeType":"YulAssignment","src":"3301:20:7","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"3311:10:7"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3301:6:7"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1325,"isOffset":false,"isSlot":true,"src":"3301:6:7","suffix":"slot","valueSize":1},{"declaration":1321,"isOffset":false,"isSlot":true,"src":"3311:10:7","suffix":"slot","valueSize":1}],"id":1327,"nodeType":"InlineAssembly","src":"3278:53:7"}]},"documentation":{"id":1319,"nodeType":"StructuredDocumentation","src":"3029:101:7","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":1329,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3144:13:7","nodeType":"FunctionDefinition","parameters":{"id":1322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1321,"mutability":"mutable","name":"store","nameLocation":"3173:5:7","nodeType":"VariableDeclaration","scope":1329,"src":"3158:20:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1320,"name":"string","nodeType":"ElementaryTypeName","src":"3158:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3157:22:7"},"returnParameters":{"id":1326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1325,"mutability":"mutable","name":"r","nameLocation":"3222:1:7","nodeType":"VariableDeclaration","scope":1329,"src":"3203:20:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1260_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1324,"nodeType":"UserDefinedTypeName","pathNode":{"id":1323,"name":"StringSlot","nameLocations":["3203:10:7"],"nodeType":"IdentifierPath","referencedDeclaration":1260,"src":"3203:10:7"},"referencedDeclaration":1260,"src":"3203:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1260_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3202:22:7"},"scope":1352,"src":"3135:202:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1339,"nodeType":"Block","src":"3513:106:7","statements":[{"AST":{"nodeType":"YulBlock","src":"3575:38:7","statements":[{"nodeType":"YulAssignment","src":"3589:14:7","value":{"name":"slot","nodeType":"YulIdentifier","src":"3599:4:7"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3589:6:7"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1336,"isOffset":false,"isSlot":true,"src":"3589:6:7","suffix":"slot","valueSize":1},{"declaration":1332,"isOffset":false,"isSlot":false,"src":"3599:4:7","valueSize":1}],"id":1338,"nodeType":"InlineAssembly","src":"3566:47:7"}]},"documentation":{"id":1330,"nodeType":"StructuredDocumentation","src":"3343:85:7","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":1340,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3442:12:7","nodeType":"FunctionDefinition","parameters":{"id":1333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1332,"mutability":"mutable","name":"slot","nameLocation":"3463:4:7","nodeType":"VariableDeclaration","scope":1340,"src":"3455:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1331,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3455:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3454:14:7"},"returnParameters":{"id":1337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1336,"mutability":"mutable","name":"r","nameLocation":"3510:1:7","nodeType":"VariableDeclaration","scope":1340,"src":"3492:19:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1263_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1335,"nodeType":"UserDefinedTypeName","pathNode":{"id":1334,"name":"BytesSlot","nameLocations":["3492:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":1263,"src":"3492:9:7"},"referencedDeclaration":1263,"src":"3492:9:7","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1263_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3491:21:7"},"scope":1352,"src":"3433:186:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1350,"nodeType":"Block","src":"3816:112:7","statements":[{"AST":{"nodeType":"YulBlock","src":"3878:44:7","statements":[{"nodeType":"YulAssignment","src":"3892:20:7","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"3902:10:7"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3892:6:7"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1347,"isOffset":false,"isSlot":true,"src":"3892:6:7","suffix":"slot","valueSize":1},{"declaration":1343,"isOffset":false,"isSlot":true,"src":"3902:10:7","suffix":"slot","valueSize":1}],"id":1349,"nodeType":"InlineAssembly","src":"3869:53:7"}]},"documentation":{"id":1341,"nodeType":"StructuredDocumentation","src":"3625:99:7","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":1351,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3738:12:7","nodeType":"FunctionDefinition","parameters":{"id":1344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1343,"mutability":"mutable","name":"store","nameLocation":"3765:5:7","nodeType":"VariableDeclaration","scope":1351,"src":"3751:19:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1342,"name":"bytes","nodeType":"ElementaryTypeName","src":"3751:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3750:21:7"},"returnParameters":{"id":1348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1347,"mutability":"mutable","name":"r","nameLocation":"3813:1:7","nodeType":"VariableDeclaration","scope":1351,"src":"3795:19:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1263_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1346,"nodeType":"UserDefinedTypeName","pathNode":{"id":1345,"name":"BytesSlot","nameLocations":["3795:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":1263,"src":"3795:9:7"},"referencedDeclaration":1263,"src":"3795:9:7","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1263_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3794:21:7"},"scope":1352,"src":"3729:199:7","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1353,"src":"1245:2685:7","usedErrors":[],"usedEvents":[]}],"src":"193:3738:7"},"id":7},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[3310],"SignedMath":[3415],"Strings":[1607]},"id":1608,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1354,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:8"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1356,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1608,"sourceUnit":3311,"src":"127:37:8","symbolAliases":[{"foreign":{"id":1355,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3310,"src":"135:4:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":1358,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1608,"sourceUnit":3416,"src":"165:49:8","symbolAliases":[{"foreign":{"id":1357,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3415,"src":"173:10:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1359,"nodeType":"StructuredDocumentation","src":"216:34:8","text":" @dev String operations."},"fullyImplemented":true,"id":1607,"linearizedBaseContracts":[1607],"name":"Strings","nameLocation":"259:7:8","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1362,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"298:10:8","nodeType":"VariableDeclaration","scope":1607,"src":"273:56:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1360,"name":"bytes16","nodeType":"ElementaryTypeName","src":"273:7:8","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"311:18:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1365,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"358:14:8","nodeType":"VariableDeclaration","scope":1607,"src":"335:42:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1363,"name":"uint8","nodeType":"ElementaryTypeName","src":"335:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"375:2:8","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":1366,"nodeType":"StructuredDocumentation","src":"384:81:8","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":1372,"name":"StringsInsufficientHexLength","nameLocation":"476:28:8","nodeType":"ErrorDefinition","parameters":{"id":1371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1368,"mutability":"mutable","name":"value","nameLocation":"513:5:8","nodeType":"VariableDeclaration","scope":1372,"src":"505:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1367,"name":"uint256","nodeType":"ElementaryTypeName","src":"505:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1370,"mutability":"mutable","name":"length","nameLocation":"528:6:8","nodeType":"VariableDeclaration","scope":1372,"src":"520:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1369,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"504:31:8"},"src":"470:66:8"},{"body":{"id":1419,"nodeType":"Block","src":"708:627:8","statements":[{"id":1418,"nodeType":"UncheckedBlock","src":"718:611:8","statements":[{"assignments":[1381],"declarations":[{"constant":false,"id":1381,"mutability":"mutable","name":"length","nameLocation":"750:6:8","nodeType":"VariableDeclaration","scope":1418,"src":"742:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1380,"name":"uint256","nodeType":"ElementaryTypeName","src":"742:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1388,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1384,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1375,"src":"770:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1382,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3310,"src":"759:4:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3310_$","typeString":"type(library Math)"}},"id":1383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"764:5:8","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":3130,"src":"759:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"759:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"779:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"759:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"742:38:8"},{"assignments":[1390],"declarations":[{"constant":false,"id":1390,"mutability":"mutable","name":"buffer","nameLocation":"808:6:8","nodeType":"VariableDeclaration","scope":1418,"src":"794:20:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1389,"name":"string","nodeType":"ElementaryTypeName","src":"794:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1395,"initialValue":{"arguments":[{"id":1393,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"828:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1392,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"817:10:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1391,"name":"string","nodeType":"ElementaryTypeName","src":"821:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"817:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"794:41:8"},{"assignments":[1397],"declarations":[{"constant":false,"id":1397,"mutability":"mutable","name":"ptr","nameLocation":"857:3:8","nodeType":"VariableDeclaration","scope":1418,"src":"849:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1396,"name":"uint256","nodeType":"ElementaryTypeName","src":"849:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1398,"nodeType":"VariableDeclarationStatement","src":"849:11:8"},{"AST":{"nodeType":"YulBlock","src":"930:67:8","statements":[{"nodeType":"YulAssignment","src":"948:35:8","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"959:6:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"971:2:8","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"975:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"967:3:8"},"nodeType":"YulFunctionCall","src":"967:15:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"955:3:8"},"nodeType":"YulFunctionCall","src":"955:28:8"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"948:3:8"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1390,"isOffset":false,"isSlot":false,"src":"959:6:8","valueSize":1},{"declaration":1381,"isOffset":false,"isSlot":false,"src":"975:6:8","valueSize":1},{"declaration":1397,"isOffset":false,"isSlot":false,"src":"948:3:8","valueSize":1}],"id":1399,"nodeType":"InlineAssembly","src":"921:76:8"},{"body":{"id":1414,"nodeType":"Block","src":"1023:269:8","statements":[{"expression":{"id":1402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1041:5:8","subExpression":{"id":1401,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"1041:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1403,"nodeType":"ExpressionStatement","src":"1041:5:8"},{"AST":{"nodeType":"YulBlock","src":"1124:86:8","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1154:3:8"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"1175:2:8","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1164:3:8"},"nodeType":"YulFunctionCall","src":"1164:14:8"},{"name":"HEX_DIGITS","nodeType":"YulIdentifier","src":"1180:10:8"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1159:4:8"},"nodeType":"YulFunctionCall","src":"1159:32:8"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1146:7:8"},"nodeType":"YulFunctionCall","src":"1146:46:8"},"nodeType":"YulExpressionStatement","src":"1146:46:8"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1362,"isOffset":false,"isSlot":false,"src":"1180:10:8","valueSize":1},{"declaration":1397,"isOffset":false,"isSlot":false,"src":"1154:3:8","valueSize":1},{"declaration":1375,"isOffset":false,"isSlot":false,"src":"1168:5:8","valueSize":1}],"id":1404,"nodeType":"InlineAssembly","src":"1115:95:8"},{"expression":{"id":1407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1405,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1375,"src":"1227:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1236:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1227:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1408,"nodeType":"ExpressionStatement","src":"1227:11:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1375,"src":"1260:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1269:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1260:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1413,"nodeType":"IfStatement","src":"1256:21:8","trueBody":{"id":1412,"nodeType":"Break","src":"1272:5:8"}}]},"condition":{"hexValue":"74727565","id":1400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1017:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1415,"nodeType":"WhileStatement","src":"1010:282:8"},{"expression":{"id":1416,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"1312:6:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1379,"id":1417,"nodeType":"Return","src":"1305:13:8"}]}]},"documentation":{"id":1373,"nodeType":"StructuredDocumentation","src":"542:90:8","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1420,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"646:8:8","nodeType":"FunctionDefinition","parameters":{"id":1376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1375,"mutability":"mutable","name":"value","nameLocation":"663:5:8","nodeType":"VariableDeclaration","scope":1420,"src":"655:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1374,"name":"uint256","nodeType":"ElementaryTypeName","src":"655:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"654:15:8"},"returnParameters":{"id":1379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1378,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1420,"src":"693:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1377,"name":"string","nodeType":"ElementaryTypeName","src":"693:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"692:15:8"},"scope":1607,"src":"637:698:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1445,"nodeType":"Block","src":"1511:92:8","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1431,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1423,"src":"1542:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1550:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1542:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1560:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1542:20:8","trueExpression":{"hexValue":"2d","id":1434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1554:3:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":1440,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1423,"src":"1588:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":1438,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3415,"src":"1573:10:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$3415_$","typeString":"type(library SignedMath)"}},"id":1439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1584:3:8","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":3414,"src":"1573:14:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":1441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1573:21:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1437,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"1564:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1564:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1429,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1528:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1428,"name":"string","nodeType":"ElementaryTypeName","src":"1528:6:8","typeDescriptions":{}}},"id":1430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1535:6:8","memberName":"concat","nodeType":"MemberAccess","src":"1528:13:8","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1528:68:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1427,"id":1444,"nodeType":"Return","src":"1521:75:8"}]},"documentation":{"id":1421,"nodeType":"StructuredDocumentation","src":"1341:89:8","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":1446,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1444:14:8","nodeType":"FunctionDefinition","parameters":{"id":1424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1423,"mutability":"mutable","name":"value","nameLocation":"1466:5:8","nodeType":"VariableDeclaration","scope":1446,"src":"1459:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1422,"name":"int256","nodeType":"ElementaryTypeName","src":"1459:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1458:14:8"},"returnParameters":{"id":1427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1426,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1446,"src":"1496:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1425,"name":"string","nodeType":"ElementaryTypeName","src":"1496:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1495:15:8"},"scope":1607,"src":"1435:168:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1465,"nodeType":"Block","src":"1782:100:8","statements":[{"id":1464,"nodeType":"UncheckedBlock","src":"1792:84:8","statements":[{"expression":{"arguments":[{"id":1455,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"1835:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1458,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"1854:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1456,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3310,"src":"1842:4:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3310_$","typeString":"type(library Math)"}},"id":1457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1847:6:8","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":3252,"src":"1842:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1842:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1863:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1842:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1454,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1466,1549,1569],"referencedDeclaration":1549,"src":"1823:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1823:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1453,"id":1463,"nodeType":"Return","src":"1816:49:8"}]}]},"documentation":{"id":1447,"nodeType":"StructuredDocumentation","src":"1609:94:8","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1466,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1717:11:8","nodeType":"FunctionDefinition","parameters":{"id":1450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1449,"mutability":"mutable","name":"value","nameLocation":"1737:5:8","nodeType":"VariableDeclaration","scope":1466,"src":"1729:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1448,"name":"uint256","nodeType":"ElementaryTypeName","src":"1729:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1728:15:8"},"returnParameters":{"id":1453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1452,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1466,"src":"1767:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1451,"name":"string","nodeType":"ElementaryTypeName","src":"1767:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1766:15:8"},"scope":1607,"src":"1708:174:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1548,"nodeType":"Block","src":"2095:435:8","statements":[{"assignments":[1477],"declarations":[{"constant":false,"id":1477,"mutability":"mutable","name":"localValue","nameLocation":"2113:10:8","nodeType":"VariableDeclaration","scope":1548,"src":"2105:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1476,"name":"uint256","nodeType":"ElementaryTypeName","src":"2105:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1479,"initialValue":{"id":1478,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"2126:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2105:26:8"},{"assignments":[1481],"declarations":[{"constant":false,"id":1481,"mutability":"mutable","name":"buffer","nameLocation":"2154:6:8","nodeType":"VariableDeclaration","scope":1548,"src":"2141:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1480,"name":"bytes","nodeType":"ElementaryTypeName","src":"2141:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1490,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2173:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1485,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"2177:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2173:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2186:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2173:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2163:9:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1482,"name":"bytes","nodeType":"ElementaryTypeName","src":"2167:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2163:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2141:47:8"},{"expression":{"id":1495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1491,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"2198:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1493,"indexExpression":{"hexValue":"30","id":1492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2205:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2198:9:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2210:3:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2198:15:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1496,"nodeType":"ExpressionStatement","src":"2198:15:8"},{"expression":{"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1497,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"2223:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1499,"indexExpression":{"hexValue":"31","id":1498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2230:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2223:9:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2235:3:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2223:15:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1502,"nodeType":"ExpressionStatement","src":"2223:15:8"},{"body":{"id":1531,"nodeType":"Block","src":"2293:95:8","statements":[{"expression":{"id":1525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1517,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"2307:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1519,"indexExpression":{"id":1518,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"2314:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2307:9:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1520,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"2319:10:8","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1524,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1521,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"2330:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2343:3:8","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2330:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2319:28:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2307:40:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1526,"nodeType":"ExpressionStatement","src":"2307:40:8"},{"expression":{"id":1529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1527,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"2361:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2376:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2361:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1530,"nodeType":"ExpressionStatement","src":"2361:16:8"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1511,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"2281:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2285:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2281:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1532,"initializationExpression":{"assignments":[1504],"declarations":[{"constant":false,"id":1504,"mutability":"mutable","name":"i","nameLocation":"2261:1:8","nodeType":"VariableDeclaration","scope":1532,"src":"2253:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1503,"name":"uint256","nodeType":"ElementaryTypeName","src":"2253:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1510,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2265:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1506,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"2269:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2265:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2278:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2265:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2253:26:8"},"loopExpression":{"expression":{"id":1515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2288:3:8","subExpression":{"id":1514,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"2290:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1516,"nodeType":"ExpressionStatement","src":"2288:3:8"},"nodeType":"ForStatement","src":"2248:140:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1533,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"2401:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2415:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2401:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1542,"nodeType":"IfStatement","src":"2397:96:8","trueBody":{"id":1541,"nodeType":"Block","src":"2418:75:8","statements":[{"errorCall":{"arguments":[{"id":1537,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"2468:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1538,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"2475:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1536,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"2439:28:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":1539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2439:43:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1540,"nodeType":"RevertStatement","src":"2432:50:8"}]}},{"expression":{"arguments":[{"id":1545,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"2516:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1544,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1543,"name":"string","nodeType":"ElementaryTypeName","src":"2509:6:8","typeDescriptions":{}}},"id":1546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1475,"id":1547,"nodeType":"Return","src":"2502:21:8"}]},"documentation":{"id":1467,"nodeType":"StructuredDocumentation","src":"1888:112:8","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":1549,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2014:11:8","nodeType":"FunctionDefinition","parameters":{"id":1472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1469,"mutability":"mutable","name":"value","nameLocation":"2034:5:8","nodeType":"VariableDeclaration","scope":1549,"src":"2026:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1468,"name":"uint256","nodeType":"ElementaryTypeName","src":"2026:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1471,"mutability":"mutable","name":"length","nameLocation":"2049:6:8","nodeType":"VariableDeclaration","scope":1549,"src":"2041:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1470,"name":"uint256","nodeType":"ElementaryTypeName","src":"2041:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2025:31:8"},"returnParameters":{"id":1475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1474,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1549,"src":"2080:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1473,"name":"string","nodeType":"ElementaryTypeName","src":"2080:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2079:15:8"},"scope":1607,"src":"2005:525:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1568,"nodeType":"Block","src":"2762:75:8","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1562,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"2807:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2799:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1560,"name":"uint160","nodeType":"ElementaryTypeName","src":"2799:7:8","typeDescriptions":{}}},"id":1563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2799:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2791:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1558,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:8","typeDescriptions":{}}},"id":1564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2791:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1565,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1365,"src":"2815:14:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1557,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1466,1549,1569],"referencedDeclaration":1549,"src":"2779:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2779:51:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1556,"id":1567,"nodeType":"Return","src":"2772:58:8"}]},"documentation":{"id":1550,"nodeType":"StructuredDocumentation","src":"2536:148:8","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":1569,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2698:11:8","nodeType":"FunctionDefinition","parameters":{"id":1553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1552,"mutability":"mutable","name":"addr","nameLocation":"2718:4:8","nodeType":"VariableDeclaration","scope":1569,"src":"2710:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1551,"name":"address","nodeType":"ElementaryTypeName","src":"2710:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2709:14:8"},"returnParameters":{"id":1556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1555,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1569,"src":"2747:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1554,"name":"string","nodeType":"ElementaryTypeName","src":"2747:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2746:15:8"},"scope":1607,"src":"2689:148:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1605,"nodeType":"Block","src":"2992:104:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1581,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"3015:1:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3009:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1579,"name":"bytes","nodeType":"ElementaryTypeName","src":"3009:5:8","typeDescriptions":{}}},"id":1582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3009:8:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3018:6:8","memberName":"length","nodeType":"MemberAccess","src":"3009:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1586,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"3034:1:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1585,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3028:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1584,"name":"bytes","nodeType":"ElementaryTypeName","src":"3028:5:8","typeDescriptions":{}}},"id":1587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3028:8:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3037:6:8","memberName":"length","nodeType":"MemberAccess","src":"3028:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3009:34:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1593,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"3063:1:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3057:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1591,"name":"bytes","nodeType":"ElementaryTypeName","src":"3057:5:8","typeDescriptions":{}}},"id":1594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:8:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1590,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3047:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3047:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1599,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"3086:1:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3080:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1597,"name":"bytes","nodeType":"ElementaryTypeName","src":"3080:5:8","typeDescriptions":{}}},"id":1600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3080:8:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1596,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3070:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3070:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3047:42:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3009:80:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1578,"id":1604,"nodeType":"Return","src":"3002:87:8"}]},"documentation":{"id":1570,"nodeType":"StructuredDocumentation","src":"2843:66:8","text":" @dev Returns true if the two strings are equal."},"id":1606,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2923:5:8","nodeType":"FunctionDefinition","parameters":{"id":1575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1572,"mutability":"mutable","name":"a","nameLocation":"2943:1:8","nodeType":"VariableDeclaration","scope":1606,"src":"2929:15:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1571,"name":"string","nodeType":"ElementaryTypeName","src":"2929:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1574,"mutability":"mutable","name":"b","nameLocation":"2960:1:8","nodeType":"VariableDeclaration","scope":1606,"src":"2946:15:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1573,"name":"string","nodeType":"ElementaryTypeName","src":"2946:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2928:34:8"},"returnParameters":{"id":1578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1577,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1606,"src":"2986:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1576,"name":"bool","nodeType":"ElementaryTypeName","src":"2986:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2985:6:8"},"scope":1607,"src":"2914:182:8","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1608,"src":"251:2847:8","usedErrors":[1372],"usedEvents":[]}],"src":"101:2998:8"},"id":8},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[1955]},"id":1956,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1609,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":1610,"nodeType":"StructuredDocumentation","src":"138:205:9","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":1955,"linearizedBaseContracts":[1955],"name":"ECDSA","nameLocation":"352:5:9","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":1615,"members":[{"id":1611,"name":"NoError","nameLocation":"392:7:9","nodeType":"EnumValue","src":"392:7:9"},{"id":1612,"name":"InvalidSignature","nameLocation":"409:16:9","nodeType":"EnumValue","src":"409:16:9"},{"id":1613,"name":"InvalidSignatureLength","nameLocation":"435:22:9","nodeType":"EnumValue","src":"435:22:9"},{"id":1614,"name":"InvalidSignatureS","nameLocation":"467:17:9","nodeType":"EnumValue","src":"467:17:9"}],"name":"RecoverError","nameLocation":"369:12:9","nodeType":"EnumDefinition","src":"364:126:9"},{"documentation":{"id":1616,"nodeType":"StructuredDocumentation","src":"496:63:9","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":1618,"name":"ECDSAInvalidSignature","nameLocation":"570:21:9","nodeType":"ErrorDefinition","parameters":{"id":1617,"nodeType":"ParameterList","parameters":[],"src":"591:2:9"},"src":"564:30:9"},{"documentation":{"id":1619,"nodeType":"StructuredDocumentation","src":"600:60:9","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":1623,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:9","nodeType":"ErrorDefinition","parameters":{"id":1622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1621,"mutability":"mutable","name":"length","nameLocation":"707:6:9","nodeType":"VariableDeclaration","scope":1623,"src":"699:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1620,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:9"},"src":"665:50:9"},{"documentation":{"id":1624,"nodeType":"StructuredDocumentation","src":"721:85:9","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":1628,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:9","nodeType":"ErrorDefinition","parameters":{"id":1627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1626,"mutability":"mutable","name":"s","nameLocation":"848:1:9","nodeType":"VariableDeclaration","scope":1628,"src":"840:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1625,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:9"},"src":"811:40:9"},{"body":{"id":1680,"nodeType":"Block","src":"2242:653:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1643,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"2256:9:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2266:6:9","memberName":"length","nodeType":"MemberAccess","src":"2256:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":1645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2276:2:9","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2256:22:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1678,"nodeType":"Block","src":"2781:108:9","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2811:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2803:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1665,"name":"address","nodeType":"ElementaryTypeName","src":"2803:7:9","typeDescriptions":{}}},"id":1668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2803:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1669,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"2815:12:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1615_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2828:22:9","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":1613,"src":"2815:35:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1615","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":1673,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"2860:9:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2870:6:9","memberName":"length","nodeType":"MemberAccess","src":"2860:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2852:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1671,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2852:7:9","typeDescriptions":{}}},"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2852:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1676,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2802:76:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1615_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1642,"id":1677,"nodeType":"Return","src":"2795:83:9"}]},"id":1679,"nodeType":"IfStatement","src":"2252:637:9","trueBody":{"id":1664,"nodeType":"Block","src":"2280:495:9","statements":[{"assignments":[1648],"declarations":[{"constant":false,"id":1648,"mutability":"mutable","name":"r","nameLocation":"2302:1:9","nodeType":"VariableDeclaration","scope":1664,"src":"2294:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1647,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2294:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1649,"nodeType":"VariableDeclarationStatement","src":"2294:9:9"},{"assignments":[1651],"declarations":[{"constant":false,"id":1651,"mutability":"mutable","name":"s","nameLocation":"2325:1:9","nodeType":"VariableDeclaration","scope":1664,"src":"2317:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1650,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2317:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1652,"nodeType":"VariableDeclarationStatement","src":"2317:9:9"},{"assignments":[1654],"declarations":[{"constant":false,"id":1654,"mutability":"mutable","name":"v","nameLocation":"2346:1:9","nodeType":"VariableDeclaration","scope":1664,"src":"2340:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1653,"name":"uint8","nodeType":"ElementaryTypeName","src":"2340:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1655,"nodeType":"VariableDeclarationStatement","src":"2340:7:9"},{"AST":{"nodeType":"YulBlock","src":"2548:171:9","statements":[{"nodeType":"YulAssignment","src":"2566:32:9","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2581:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"2592:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2577:3:9"},"nodeType":"YulFunctionCall","src":"2577:20:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2571:5:9"},"nodeType":"YulFunctionCall","src":"2571:27:9"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2566:1:9"}]},{"nodeType":"YulAssignment","src":"2615:32:9","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2630:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"2641:4:9","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2626:3:9"},"nodeType":"YulFunctionCall","src":"2626:20:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2620:5:9"},"nodeType":"YulFunctionCall","src":"2620:27:9"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2615:1:9"}]},{"nodeType":"YulAssignment","src":"2664:41:9","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2674:1:9","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2687:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"2698:4:9","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2683:3:9"},"nodeType":"YulFunctionCall","src":"2683:20:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2677:5:9"},"nodeType":"YulFunctionCall","src":"2677:27:9"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2669:4:9"},"nodeType":"YulFunctionCall","src":"2669:36:9"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2664:1:9"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1648,"isOffset":false,"isSlot":false,"src":"2566:1:9","valueSize":1},{"declaration":1651,"isOffset":false,"isSlot":false,"src":"2615:1:9","valueSize":1},{"declaration":1633,"isOffset":false,"isSlot":false,"src":"2581:9:9","valueSize":1},{"declaration":1633,"isOffset":false,"isSlot":false,"src":"2630:9:9","valueSize":1},{"declaration":1633,"isOffset":false,"isSlot":false,"src":"2687:9:9","valueSize":1},{"declaration":1654,"isOffset":false,"isSlot":false,"src":"2664:1:9","valueSize":1}],"id":1656,"nodeType":"InlineAssembly","src":"2539:180:9"},{"expression":{"arguments":[{"id":1658,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"2750:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1659,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"2756:1:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1660,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"2759:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1661,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1651,"src":"2762:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1657,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1681,1761,1869],"referencedDeclaration":1869,"src":"2739:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1615_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2739:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1615_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1642,"id":1663,"nodeType":"Return","src":"2732:32:9"}]}}]},"documentation":{"id":1629,"nodeType":"StructuredDocumentation","src":"857:1267:9","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":1681,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:9","nodeType":"FunctionDefinition","parameters":{"id":1634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1631,"mutability":"mutable","name":"hash","nameLocation":"2157:4:9","nodeType":"VariableDeclaration","scope":1681,"src":"2149:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1630,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2149:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1633,"mutability":"mutable","name":"signature","nameLocation":"2176:9:9","nodeType":"VariableDeclaration","scope":1681,"src":"2163:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1632,"name":"bytes","nodeType":"ElementaryTypeName","src":"2163:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:38:9"},"returnParameters":{"id":1642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1636,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1681,"src":"2210:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1635,"name":"address","nodeType":"ElementaryTypeName","src":"2210:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1639,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1681,"src":"2219:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1615","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1638,"nodeType":"UserDefinedTypeName","pathNode":{"id":1637,"name":"RecoverError","nameLocations":["2219:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":1615,"src":"2219:12:9"},"referencedDeclaration":1615,"src":"2219:12:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1615","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1641,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1681,"src":"2233:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1640,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2233:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2209:32:9"},"scope":1955,"src":"2129:766:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1710,"nodeType":"Block","src":"3789:168:9","statements":[{"assignments":[1692,1695,1697],"declarations":[{"constant":false,"id":1692,"mutability":"mutable","name":"recovered","nameLocation":"3808:9:9","nodeType":"VariableDeclaration","scope":1710,"src":"3800:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1691,"name":"address","nodeType":"ElementaryTypeName","src":"3800:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1695,"mutability":"mutable","name":"error","nameLocation":"3832:5:9","nodeType":"VariableDeclaration","scope":1710,"src":"3819:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1615","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1694,"nodeType":"UserDefinedTypeName","pathNode":{"id":1693,"name":"RecoverError","nameLocations":["3819:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":1615,"src":"3819:12:9"},"referencedDeclaration":1615,"src":"3819:12:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1615","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1697,"mutability":"mutable","name":"errorArg","nameLocation":"3847:8:9","nodeType":"VariableDeclaration","scope":1710,"src":"3839:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1696,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3839:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1702,"initialValue":{"arguments":[{"id":1699,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"3870:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1700,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"3876:9:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1698,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1681,1761,1869],"referencedDeclaration":1681,"src":"3859:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$1615_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3859:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1615_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3799:87:9"},{"expression":{"arguments":[{"id":1704,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1695,"src":"3908:5:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1615","typeString":"enum ECDSA.RecoverError"}},{"id":1705,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"3915:8:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1615","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1703,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1954,"src":"3896:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1615_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3896:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1707,"nodeType":"ExpressionStatement","src":"3896:28:9"},{"expression":{"id":1708,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1692,"src":"3941:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1690,"id":1709,"nodeType":"Return","src":"3934:16:9"}]},"documentation":{"id":1682,"nodeType":"StructuredDocumentation","src":"2901:796:9","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":1711,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3711:7:9","nodeType":"FunctionDefinition","parameters":{"id":1687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1684,"mutability":"mutable","name":"hash","nameLocation":"3727:4:9","nodeType":"VariableDeclaration","scope":1711,"src":"3719:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1683,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3719:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1686,"mutability":"mutable","name":"signature","nameLocation":"3746:9:9","nodeType":"VariableDeclaration","scope":1711,"src":"3733:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1685,"name":"bytes","nodeType":"ElementaryTypeName","src":"3733:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3718:38:9"},"returnParameters":{"id":1690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1689,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1711,"src":"3780:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1688,"name":"address","nodeType":"ElementaryTypeName","src":"3780:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3779:9:9"},"scope":1955,"src":"3702:255:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1760,"nodeType":"Block","src":"4285:342:9","statements":[{"id":1759,"nodeType":"UncheckedBlock","src":"4295:326:9","statements":[{"assignments":[1729],"declarations":[{"constant":false,"id":1729,"mutability":"mutable","name":"s","nameLocation":"4327:1:9","nodeType":"VariableDeclaration","scope":1759,"src":"4319:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1728,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4319:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1736,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1730,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"4331:2:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":1733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4344:66:9","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":1732,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4336:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1731,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4336:7:9","typeDescriptions":{}}},"id":1734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4336:75:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4331:80:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4319:92:9"},{"assignments":[1738],"declarations":[{"constant":false,"id":1738,"mutability":"mutable","name":"v","nameLocation":"4528:1:9","nodeType":"VariableDeclaration","scope":1759,"src":"4522:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1737,"name":"uint8","nodeType":"ElementaryTypeName","src":"4522:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1751,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1743,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"4547:2:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1742,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4539:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1741,"name":"uint256","nodeType":"ElementaryTypeName","src":"4539:7:9","typeDescriptions":{}}},"id":1744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4539:11:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":1745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4554:3:9","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4539:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1747,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4538:20:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":1748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4561:2:9","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4538:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1740,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4532:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1739,"name":"uint8","nodeType":"ElementaryTypeName","src":"4532:5:9","typeDescriptions":{}}},"id":1750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4532:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4522:42:9"},{"expression":{"arguments":[{"id":1753,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"4596:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1754,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"4602:1:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1755,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"4605:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1756,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"4608:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1752,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1681,1761,1869],"referencedDeclaration":1869,"src":"4585:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1615_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4585:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1615_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1727,"id":1758,"nodeType":"Return","src":"4578:32:9"}]}]},"documentation":{"id":1712,"nodeType":"StructuredDocumentation","src":"3963:205:9","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]"},"id":1761,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4182:10:9","nodeType":"FunctionDefinition","parameters":{"id":1719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1714,"mutability":"mutable","name":"hash","nameLocation":"4201:4:9","nodeType":"VariableDeclaration","scope":1761,"src":"4193:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1713,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4193:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1716,"mutability":"mutable","name":"r","nameLocation":"4215:1:9","nodeType":"VariableDeclaration","scope":1761,"src":"4207:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1715,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4207:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1718,"mutability":"mutable","name":"vs","nameLocation":"4226:2:9","nodeType":"VariableDeclaration","scope":1761,"src":"4218:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1717,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4218:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4192:37:9"},"returnParameters":{"id":1727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1721,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1761,"src":"4253:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1720,"name":"address","nodeType":"ElementaryTypeName","src":"4253:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1724,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1761,"src":"4262:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1615","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1723,"nodeType":"UserDefinedTypeName","pathNode":{"id":1722,"name":"RecoverError","nameLocations":["4262:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":1615,"src":"4262:12:9"},"referencedDeclaration":1615,"src":"4262:12:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1615","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1726,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1761,"src":"4276:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1725,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4276:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4252:32:9"},"scope":1955,"src":"4173:454:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1793,"nodeType":"Block","src":"4840:164:9","statements":[{"assignments":[1774,1777,1779],"declarations":[{"constant":false,"id":1774,"mutability":"mutable","name":"recovered","nameLocation":"4859:9:9","nodeType":"VariableDeclaration","scope":1793,"src":"4851:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1773,"name":"address","nodeType":"ElementaryTypeName","src":"4851:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1777,"mutability":"mutable","name":"error","nameLocation":"4883:5:9","nodeType":"VariableDeclaration","scope":1793,"src":"4870:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1615","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1776,"nodeType":"UserDefinedTypeName","pathNode":{"id":1775,"name":"RecoverError","nameLocations":["4870:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":1615,"src":"4870:12:9"},"referencedDeclaration":1615,"src":"4870:12:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1615","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1779,"mutability":"mutable","name":"errorArg","nameLocation":"4898:8:9","nodeType":"VariableDeclaration","scope":1793,"src":"4890:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1778,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4890:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1785,"initialValue":{"arguments":[{"id":1781,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"4921:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1782,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"4927:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1783,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"4930:2:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1780,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1681,1761,1869],"referencedDeclaration":1761,"src":"4910:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1615_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4910:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1615_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4850:83:9"},{"expression":{"arguments":[{"id":1787,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1777,"src":"4955:5:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1615","typeString":"enum ECDSA.RecoverError"}},{"id":1788,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"4962:8:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1615","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1786,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1954,"src":"4943:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1615_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":1789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4943:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1790,"nodeType":"ExpressionStatement","src":"4943:28:9"},{"expression":{"id":1791,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"4988:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1772,"id":1792,"nodeType":"Return","src":"4981:16:9"}]},"documentation":{"id":1762,"nodeType":"StructuredDocumentation","src":"4633:116:9","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":1794,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4763:7:9","nodeType":"FunctionDefinition","parameters":{"id":1769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1764,"mutability":"mutable","name":"hash","nameLocation":"4779:4:9","nodeType":"VariableDeclaration","scope":1794,"src":"4771:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1763,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4771:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1766,"mutability":"mutable","name":"r","nameLocation":"4793:1:9","nodeType":"VariableDeclaration","scope":1794,"src":"4785:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1765,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4785:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1768,"mutability":"mutable","name":"vs","nameLocation":"4804:2:9","nodeType":"VariableDeclaration","scope":1794,"src":"4796:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1767,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4796:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4770:37:9"},"returnParameters":{"id":1772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1771,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1794,"src":"4831:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1770,"name":"address","nodeType":"ElementaryTypeName","src":"4831:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4830:9:9"},"scope":1955,"src":"4754:250:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1868,"nodeType":"Block","src":"5298:1372:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1815,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"6194:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1814,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6186:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1813,"name":"uint256","nodeType":"ElementaryTypeName","src":"6186:7:9","typeDescriptions":{}}},"id":1816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6186:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":1817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6199:66:9","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6186:79:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1829,"nodeType":"IfStatement","src":"6182:164:9","trueBody":{"id":1828,"nodeType":"Block","src":"6267:79:9","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6297:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1820,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6289:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1819,"name":"address","nodeType":"ElementaryTypeName","src":"6289:7:9","typeDescriptions":{}}},"id":1822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6289:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1823,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"6301:12:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1615_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1824,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6314:17:9","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":1614,"src":"6301:30:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1615","typeString":"enum ECDSA.RecoverError"}},{"id":1825,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"6333:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1826,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6288:47:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1615_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1812,"id":1827,"nodeType":"Return","src":"6281:54:9"}]}},{"assignments":[1831],"declarations":[{"constant":false,"id":1831,"mutability":"mutable","name":"signer","nameLocation":"6448:6:9","nodeType":"VariableDeclaration","scope":1868,"src":"6440:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1830,"name":"address","nodeType":"ElementaryTypeName","src":"6440:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1838,"initialValue":{"arguments":[{"id":1833,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1797,"src":"6467:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1834,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"6473:1:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1835,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"6476:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1836,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"6479:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1832,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6457:9:9","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6457:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6440:41:9"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1839,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1831,"src":"6495:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6513:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6505:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1840,"name":"address","nodeType":"ElementaryTypeName","src":"6505:7:9","typeDescriptions":{}}},"id":1843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6505:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6495:20:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1858,"nodeType":"IfStatement","src":"6491:113:9","trueBody":{"id":1857,"nodeType":"Block","src":"6517:87:9","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6547:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6539:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1845,"name":"address","nodeType":"ElementaryTypeName","src":"6539:7:9","typeDescriptions":{}}},"id":1848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6539:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1849,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"6551:12:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1615_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1850,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6564:16:9","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":1612,"src":"6551:29:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1615","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":1853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6590:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6582:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1851,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6582:7:9","typeDescriptions":{}}},"id":1854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6582:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1855,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6538:55:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1615_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1812,"id":1856,"nodeType":"Return","src":"6531:62:9"}]}},{"expression":{"components":[{"id":1859,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1831,"src":"6622:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1860,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"6630:12:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1615_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6643:7:9","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":1611,"src":"6630:20:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1615","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":1864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6660:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1863,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6652:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1862,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6652:7:9","typeDescriptions":{}}},"id":1865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6652:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1866,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6621:42:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1615_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1812,"id":1867,"nodeType":"Return","src":"6614:49:9"}]},"documentation":{"id":1795,"nodeType":"StructuredDocumentation","src":"5010:125:9","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":1869,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5149:10:9","nodeType":"FunctionDefinition","parameters":{"id":1804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1797,"mutability":"mutable","name":"hash","nameLocation":"5177:4:9","nodeType":"VariableDeclaration","scope":1869,"src":"5169:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1796,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5169:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1799,"mutability":"mutable","name":"v","nameLocation":"5197:1:9","nodeType":"VariableDeclaration","scope":1869,"src":"5191:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1798,"name":"uint8","nodeType":"ElementaryTypeName","src":"5191:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1801,"mutability":"mutable","name":"r","nameLocation":"5216:1:9","nodeType":"VariableDeclaration","scope":1869,"src":"5208:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1800,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5208:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1803,"mutability":"mutable","name":"s","nameLocation":"5235:1:9","nodeType":"VariableDeclaration","scope":1869,"src":"5227:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1802,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5227:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5159:83:9"},"returnParameters":{"id":1812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1806,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1869,"src":"5266:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1805,"name":"address","nodeType":"ElementaryTypeName","src":"5266:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1809,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1869,"src":"5275:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1615","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1808,"nodeType":"UserDefinedTypeName","pathNode":{"id":1807,"name":"RecoverError","nameLocations":["5275:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":1615,"src":"5275:12:9"},"referencedDeclaration":1615,"src":"5275:12:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1615","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1811,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1869,"src":"5289:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1810,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5289:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5265:32:9"},"scope":1955,"src":"5140:1530:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1904,"nodeType":"Block","src":"6897:166:9","statements":[{"assignments":[1884,1887,1889],"declarations":[{"constant":false,"id":1884,"mutability":"mutable","name":"recovered","nameLocation":"6916:9:9","nodeType":"VariableDeclaration","scope":1904,"src":"6908:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1883,"name":"address","nodeType":"ElementaryTypeName","src":"6908:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1887,"mutability":"mutable","name":"error","nameLocation":"6940:5:9","nodeType":"VariableDeclaration","scope":1904,"src":"6927:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1615","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1886,"nodeType":"UserDefinedTypeName","pathNode":{"id":1885,"name":"RecoverError","nameLocations":["6927:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":1615,"src":"6927:12:9"},"referencedDeclaration":1615,"src":"6927:12:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1615","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1889,"mutability":"mutable","name":"errorArg","nameLocation":"6955:8:9","nodeType":"VariableDeclaration","scope":1904,"src":"6947:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1888,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6947:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1896,"initialValue":{"arguments":[{"id":1891,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"6978:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1892,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"6984:1:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1893,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"6987:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1894,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"6990:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1890,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1681,1761,1869],"referencedDeclaration":1869,"src":"6967:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1615_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6967:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1615_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6907:85:9"},{"expression":{"arguments":[{"id":1898,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1887,"src":"7014:5:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1615","typeString":"enum ECDSA.RecoverError"}},{"id":1899,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"7021:8:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1615","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1897,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1954,"src":"7002:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1615_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":1900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7002:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1901,"nodeType":"ExpressionStatement","src":"7002:28:9"},{"expression":{"id":1902,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"7047:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1882,"id":1903,"nodeType":"Return","src":"7040:16:9"}]},"documentation":{"id":1870,"nodeType":"StructuredDocumentation","src":"6676:122:9","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":1905,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6812:7:9","nodeType":"FunctionDefinition","parameters":{"id":1879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1872,"mutability":"mutable","name":"hash","nameLocation":"6828:4:9","nodeType":"VariableDeclaration","scope":1905,"src":"6820:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1871,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6820:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1874,"mutability":"mutable","name":"v","nameLocation":"6840:1:9","nodeType":"VariableDeclaration","scope":1905,"src":"6834:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1873,"name":"uint8","nodeType":"ElementaryTypeName","src":"6834:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1876,"mutability":"mutable","name":"r","nameLocation":"6851:1:9","nodeType":"VariableDeclaration","scope":1905,"src":"6843:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1875,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6843:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1878,"mutability":"mutable","name":"s","nameLocation":"6862:1:9","nodeType":"VariableDeclaration","scope":1905,"src":"6854:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1877,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6854:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6819:45:9"},"returnParameters":{"id":1882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1881,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1905,"src":"6888:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1880,"name":"address","nodeType":"ElementaryTypeName","src":"6888:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6887:9:9"},"scope":1955,"src":"6803:260:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1953,"nodeType":"Block","src":"7268:460:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1615","typeString":"enum ECDSA.RecoverError"},"id":1917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1914,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1909,"src":"7282:5:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1615","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1915,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"7291:12:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1615_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7304:7:9","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":1611,"src":"7291:20:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1615","typeString":"enum ECDSA.RecoverError"}},"src":"7282:29:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1615","typeString":"enum ECDSA.RecoverError"},"id":1923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1920,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1909,"src":"7378:5:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1615","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1921,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"7387:12:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1615_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1922,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7400:16:9","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":1612,"src":"7387:29:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1615","typeString":"enum ECDSA.RecoverError"}},"src":"7378:38:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1615","typeString":"enum ECDSA.RecoverError"},"id":1931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1928,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1909,"src":"7483:5:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1615","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1929,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"7492:12:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1615_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7505:22:9","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":1613,"src":"7492:35:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1615","typeString":"enum ECDSA.RecoverError"}},"src":"7483:44:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1615","typeString":"enum ECDSA.RecoverError"},"id":1943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1940,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1909,"src":"7617:5:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1615","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1941,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"7626:12:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1615_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7639:17:9","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":1614,"src":"7626:30:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1615","typeString":"enum ECDSA.RecoverError"}},"src":"7617:39:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1949,"nodeType":"IfStatement","src":"7613:109:9","trueBody":{"id":1948,"nodeType":"Block","src":"7658:64:9","statements":[{"errorCall":{"arguments":[{"id":1945,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1911,"src":"7702:8:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1944,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"7679:22:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":1946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7679:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1947,"nodeType":"RevertStatement","src":"7672:39:9"}]}},"id":1950,"nodeType":"IfStatement","src":"7479:243:9","trueBody":{"id":1939,"nodeType":"Block","src":"7529:78:9","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1935,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1911,"src":"7586:8:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1934,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7578:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1933,"name":"uint256","nodeType":"ElementaryTypeName","src":"7578:7:9","typeDescriptions":{}}},"id":1936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7578:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1932,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"7550:27:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7550:46:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1938,"nodeType":"RevertStatement","src":"7543:53:9"}]}},"id":1951,"nodeType":"IfStatement","src":"7374:348:9","trueBody":{"id":1927,"nodeType":"Block","src":"7418:55:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1924,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1618,"src":"7439:21:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7439:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1926,"nodeType":"RevertStatement","src":"7432:30:9"}]}},"id":1952,"nodeType":"IfStatement","src":"7278:444:9","trueBody":{"id":1919,"nodeType":"Block","src":"7313:55:9","statements":[{"functionReturnParameters":1913,"id":1918,"nodeType":"Return","src":"7327:7:9"}]}}]},"documentation":{"id":1906,"nodeType":"StructuredDocumentation","src":"7069:122:9","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":1954,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7205:11:9","nodeType":"FunctionDefinition","parameters":{"id":1912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1909,"mutability":"mutable","name":"error","nameLocation":"7230:5:9","nodeType":"VariableDeclaration","scope":1954,"src":"7217:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1615","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1908,"nodeType":"UserDefinedTypeName","pathNode":{"id":1907,"name":"RecoverError","nameLocations":["7217:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":1615,"src":"7217:12:9"},"referencedDeclaration":1615,"src":"7217:12:9","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1615","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1911,"mutability":"mutable","name":"errorArg","nameLocation":"7245:8:9","nodeType":"VariableDeclaration","scope":1954,"src":"7237:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1910,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7237:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7216:38:9"},"returnParameters":{"id":1913,"nodeType":"ParameterList","parameters":[],"src":"7268:0:9"},"scope":1955,"src":"7196:532:9","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1956,"src":"344:7386:9","usedErrors":[1618,1623,1628],"usedEvents":[]}],"src":"112:7619:9"},"id":9},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"EIP712":[2182],"IERC5267":[24],"MessageHashUtils":[2256],"ShortString":[1031],"ShortStrings":[1242]},"id":2183,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1957,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:10"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"./MessageHashUtils.sol","id":1959,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2183,"sourceUnit":2257,"src":"139:56:10","symbolAliases":[{"foreign":{"id":1958,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2256,"src":"147:16:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","file":"../ShortStrings.sol","id":1962,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2183,"sourceUnit":1243,"src":"196:62:10","symbolAliases":[{"foreign":{"id":1960,"name":"ShortStrings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"204:12:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1961,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"218:11:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"../../interfaces/IERC5267.sol","id":1964,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2183,"sourceUnit":25,"src":"259:55:10","symbolAliases":[{"foreign":{"id":1963,"name":"IERC5267","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"267:8:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1966,"name":"IERC5267","nameLocations":["1988:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":24,"src":"1988:8:10"},"id":1967,"nodeType":"InheritanceSpecifier","src":"1988:8:10"}],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":1965,"nodeType":"StructuredDocumentation","src":"316:1643:10","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"},"fullyImplemented":true,"id":2182,"linearizedBaseContracts":[2182,24],"name":"EIP712","nameLocation":"1978:6:10","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1969,"libraryName":{"id":1968,"name":"ShortStrings","nameLocations":["2009:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":1242,"src":"2009:12:10"},"nodeType":"UsingForDirective","src":"2003:25:10"},{"constant":true,"id":1974,"mutability":"constant","name":"TYPE_HASH","nameLocation":"2059:9:10","nodeType":"VariableDeclaration","scope":2182,"src":"2034:140:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1970,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2034:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":1972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2089:84:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":1971,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2079:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2079:95:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":1976,"mutability":"immutable","name":"_cachedDomainSeparator","nameLocation":"2399:22:10","nodeType":"VariableDeclaration","scope":2182,"src":"2373:48:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1975,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2373:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":1978,"mutability":"immutable","name":"_cachedChainId","nameLocation":"2453:14:10","nodeType":"VariableDeclaration","scope":2182,"src":"2427:40:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1977,"name":"uint256","nodeType":"ElementaryTypeName","src":"2427:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1980,"mutability":"immutable","name":"_cachedThis","nameLocation":"2499:11:10","nodeType":"VariableDeclaration","scope":2182,"src":"2473:37:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1979,"name":"address","nodeType":"ElementaryTypeName","src":"2473:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":1982,"mutability":"immutable","name":"_hashedName","nameLocation":"2543:11:10","nodeType":"VariableDeclaration","scope":2182,"src":"2517:37:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1981,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2517:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":1984,"mutability":"immutable","name":"_hashedVersion","nameLocation":"2586:14:10","nodeType":"VariableDeclaration","scope":2182,"src":"2560:40:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1983,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2560:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":1987,"mutability":"immutable","name":"_name","nameLocation":"2637:5:10","nodeType":"VariableDeclaration","scope":2182,"src":"2607:35:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1031","typeString":"ShortString"},"typeName":{"id":1986,"nodeType":"UserDefinedTypeName","pathNode":{"id":1985,"name":"ShortString","nameLocations":["2607:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":1031,"src":"2607:11:10"},"referencedDeclaration":1031,"src":"2607:11:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1031","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":1990,"mutability":"immutable","name":"_version","nameLocation":"2678:8:10","nodeType":"VariableDeclaration","scope":2182,"src":"2648:38:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1031","typeString":"ShortString"},"typeName":{"id":1989,"nodeType":"UserDefinedTypeName","pathNode":{"id":1988,"name":"ShortString","nameLocations":["2648:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":1031,"src":"2648:11:10"},"referencedDeclaration":1031,"src":"2648:11:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1031","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":1992,"mutability":"mutable","name":"_nameFallback","nameLocation":"2707:13:10","nodeType":"VariableDeclaration","scope":2182,"src":"2692:28:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1991,"name":"string","nodeType":"ElementaryTypeName","src":"2692:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1994,"mutability":"mutable","name":"_versionFallback","nameLocation":"2741:16:10","nodeType":"VariableDeclaration","scope":2182,"src":"2726:31:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1993,"name":"string","nodeType":"ElementaryTypeName","src":"2726:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":2051,"nodeType":"Block","src":"3383:376:10","statements":[{"expression":{"id":2007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2002,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1987,"src":"3393:5:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1031","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2005,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"3432:13:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2003,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1997,"src":"3401:4:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3406:25:10","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1183,"src":"3401:30:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1031_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":2006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3401:45:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1031","typeString":"ShortString"}},"src":"3393:53:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1031","typeString":"ShortString"}},"id":2008,"nodeType":"ExpressionStatement","src":"3393:53:10"},{"expression":{"id":2014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2009,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1990,"src":"3456:8:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1031","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2012,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1994,"src":"3501:16:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2010,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"3467:7:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3475:25:10","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1183,"src":"3467:33:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1031_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":2013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3467:51:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1031","typeString":"ShortString"}},"src":"3456:62:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1031","typeString":"ShortString"}},"id":2015,"nodeType":"ExpressionStatement","src":"3456:62:10"},{"expression":{"id":2023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2016,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"3528:11:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":2020,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1997,"src":"3558:4:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2019,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3552:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2018,"name":"bytes","nodeType":"ElementaryTypeName","src":"3552:5:10","typeDescriptions":{}}},"id":2021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3552:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2017,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3542:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3542:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3528:36:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2024,"nodeType":"ExpressionStatement","src":"3528:36:10"},{"expression":{"id":2032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2025,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"3574:14:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":2029,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"3607:7:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2028,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3601:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2027,"name":"bytes","nodeType":"ElementaryTypeName","src":"3601:5:10","typeDescriptions":{}}},"id":2030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3601:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2026,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3591:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3591:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3574:42:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2033,"nodeType":"ExpressionStatement","src":"3574:42:10"},{"expression":{"id":2037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2034,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1978,"src":"3627:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2035,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3644:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3650:7:10","memberName":"chainid","nodeType":"MemberAccess","src":"3644:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3627:30:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2038,"nodeType":"ExpressionStatement","src":"3627:30:10"},{"expression":{"id":2042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2039,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"3667:22:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":2040,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2099,"src":"3692:21:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3692:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3667:48:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2043,"nodeType":"ExpressionStatement","src":"3667:48:10"},{"expression":{"id":2049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2044,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1980,"src":"3725:11:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2047,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3747:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$2182","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$2182","typeString":"contract EIP712"}],"id":2046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3739:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2045,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:10","typeDescriptions":{}}},"id":2048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3725:27:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2050,"nodeType":"ExpressionStatement","src":"3725:27:10"}]},"documentation":{"id":1995,"nodeType":"StructuredDocumentation","src":"2764:559:10","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":2052,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1997,"mutability":"mutable","name":"name","nameLocation":"3354:4:10","nodeType":"VariableDeclaration","scope":2052,"src":"3340:18:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1996,"name":"string","nodeType":"ElementaryTypeName","src":"3340:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1999,"mutability":"mutable","name":"version","nameLocation":"3374:7:10","nodeType":"VariableDeclaration","scope":2052,"src":"3360:21:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1998,"name":"string","nodeType":"ElementaryTypeName","src":"3360:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3339:43:10"},"returnParameters":{"id":2001,"nodeType":"ParameterList","parameters":[],"src":"3383:0:10"},"scope":2182,"src":"3328:431:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2077,"nodeType":"Block","src":"3907:200:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2060,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3929:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$2182","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$2182","typeString":"contract EIP712"}],"id":2059,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3921:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2058,"name":"address","nodeType":"ElementaryTypeName","src":"3921:7:10","typeDescriptions":{}}},"id":2061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3921:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2062,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1980,"src":"3938:11:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3921:28:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2064,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3953:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3959:7:10","memberName":"chainid","nodeType":"MemberAccess","src":"3953:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2066,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1978,"src":"3970:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3953:31:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3921:63:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2075,"nodeType":"Block","src":"4046:55:10","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2072,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2099,"src":"4067:21:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4067:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2057,"id":2074,"nodeType":"Return","src":"4060:30:10"}]},"id":2076,"nodeType":"IfStatement","src":"3917:184:10","trueBody":{"id":2071,"nodeType":"Block","src":"3986:54:10","statements":[{"expression":{"id":2069,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"4007:22:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2057,"id":2070,"nodeType":"Return","src":"4000:29:10"}]}}]},"documentation":{"id":2053,"nodeType":"StructuredDocumentation","src":"3765:75:10","text":" @dev Returns the domain separator for the current chain."},"id":2078,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3854:18:10","nodeType":"FunctionDefinition","parameters":{"id":2054,"nodeType":"ParameterList","parameters":[],"src":"3872:2:10"},"returnParameters":{"id":2057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2056,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2078,"src":"3898:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2055,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3898:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3897:9:10"},"scope":2182,"src":"3845:262:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2098,"nodeType":"Block","src":"4177:115:10","statements":[{"expression":{"arguments":[{"arguments":[{"id":2086,"name":"TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1974,"src":"4215:9:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2087,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"4226:11:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2088,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"4239:14:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2089,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4255:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4261:7:10","memberName":"chainid","nodeType":"MemberAccess","src":"4255:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2093,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4278:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$2182","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$2182","typeString":"contract EIP712"}],"id":2092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4270:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2091,"name":"address","nodeType":"ElementaryTypeName","src":"4270:7:10","typeDescriptions":{}}},"id":2094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4270:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2084,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4204:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2085,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4208:6:10","memberName":"encode","nodeType":"MemberAccess","src":"4204:10:10","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4204:80:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2083,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4194:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4194:91:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2082,"id":2097,"nodeType":"Return","src":"4187:98:10"}]},"id":2099,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"4122:21:10","nodeType":"FunctionDefinition","parameters":{"id":2079,"nodeType":"ParameterList","parameters":[],"src":"4143:2:10"},"returnParameters":{"id":2082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2081,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2099,"src":"4168:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2080,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4168:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4167:9:10"},"scope":2182,"src":"4113:179:10","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":2114,"nodeType":"Block","src":"5003:90:10","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2109,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2078,"src":"5053:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5053:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2111,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2102,"src":"5075:10:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2107,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2256,"src":"5020:16:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$2256_$","typeString":"type(library MessageHashUtils)"}},"id":2108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5037:15:10","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":2255,"src":"5020:32:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":2112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5020:66:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2106,"id":2113,"nodeType":"Return","src":"5013:73:10"}]},"documentation":{"id":2100,"nodeType":"StructuredDocumentation","src":"4298:614:10","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":2115,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"4926:16:10","nodeType":"FunctionDefinition","parameters":{"id":2103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2102,"mutability":"mutable","name":"structHash","nameLocation":"4951:10:10","nodeType":"VariableDeclaration","scope":2115,"src":"4943:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2101,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4943:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4942:20:10"},"returnParameters":{"id":2106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2105,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2115,"src":"4994:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2104,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4994:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4993:9:10"},"scope":2182,"src":"4917:176:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[23],"body":{"id":2156,"nodeType":"Block","src":"5472:229:10","statements":[{"expression":{"components":[{"hexValue":"0f","id":2134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5503:7:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[],"expression":{"argumentTypes":[],"id":2135,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2169,"src":"5533:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5533:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2137,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2181,"src":"5560:14:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5560:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":2139,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5590:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5596:7:10","memberName":"chainid","nodeType":"MemberAccess","src":"5590:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2143,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5625:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$2182","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$2182","typeString":"contract EIP712"}],"id":2142,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5617:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2141,"name":"address","nodeType":"ElementaryTypeName","src":"5617:7:10","typeDescriptions":{}}},"id":2144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5617:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5652:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5644:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2145,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5644:7:10","typeDescriptions":{}}},"id":2148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5644:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":2152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5682:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2151,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5668:13:10","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":2149,"name":"uint256","nodeType":"ElementaryTypeName","src":"5672:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2150,"nodeType":"ArrayTypeName","src":"5672:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":2153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5668:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":2154,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5489:205:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":2133,"id":2155,"nodeType":"Return","src":"5482:212:10"}]},"documentation":{"id":2116,"nodeType":"StructuredDocumentation","src":"5099:40:10","text":" @dev See {IERC-5267}."},"functionSelector":"84b0196e","id":2157,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5153:12:10","nodeType":"FunctionDefinition","parameters":{"id":2117,"nodeType":"ParameterList","parameters":[],"src":"5165:2:10"},"returnParameters":{"id":2133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2119,"mutability":"mutable","name":"fields","nameLocation":"5249:6:10","nodeType":"VariableDeclaration","scope":2157,"src":"5242:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2118,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5242:6:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":2121,"mutability":"mutable","name":"name","nameLocation":"5283:4:10","nodeType":"VariableDeclaration","scope":2157,"src":"5269:18:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2120,"name":"string","nodeType":"ElementaryTypeName","src":"5269:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2123,"mutability":"mutable","name":"version","nameLocation":"5315:7:10","nodeType":"VariableDeclaration","scope":2157,"src":"5301:21:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2122,"name":"string","nodeType":"ElementaryTypeName","src":"5301:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2125,"mutability":"mutable","name":"chainId","nameLocation":"5344:7:10","nodeType":"VariableDeclaration","scope":2157,"src":"5336:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2124,"name":"uint256","nodeType":"ElementaryTypeName","src":"5336:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2127,"mutability":"mutable","name":"verifyingContract","nameLocation":"5373:17:10","nodeType":"VariableDeclaration","scope":2157,"src":"5365:25:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2126,"name":"address","nodeType":"ElementaryTypeName","src":"5365:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2129,"mutability":"mutable","name":"salt","nameLocation":"5412:4:10","nodeType":"VariableDeclaration","scope":2157,"src":"5404:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2128,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5404:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2132,"mutability":"mutable","name":"extensions","nameLocation":"5447:10:10","nodeType":"VariableDeclaration","scope":2157,"src":"5430:27:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2130,"name":"uint256","nodeType":"ElementaryTypeName","src":"5430:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2131,"nodeType":"ArrayTypeName","src":"5430:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5228:239:10"},"scope":2182,"src":"5144:557:10","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2168,"nodeType":"Block","src":"6082:65:10","statements":[{"expression":{"arguments":[{"id":2165,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"6126:13:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2163,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1987,"src":"6099:5:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1031","typeString":"ShortString"}},"id":2164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6105:20:10","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1210,"src":"6099:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1031_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1031_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":2166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6099:41:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2162,"id":2167,"nodeType":"Return","src":"6092:48:10"}]},"documentation":{"id":2158,"nodeType":"StructuredDocumentation","src":"5707:256:10","text":" @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":2169,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Name","nameLocation":"6030:11:10","nodeType":"FunctionDefinition","parameters":{"id":2159,"nodeType":"ParameterList","parameters":[],"src":"6041:2:10"},"returnParameters":{"id":2162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2161,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2169,"src":"6067:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2160,"name":"string","nodeType":"ElementaryTypeName","src":"6067:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6066:15:10"},"scope":2182,"src":"6021:126:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2180,"nodeType":"Block","src":"6537:71:10","statements":[{"expression":{"arguments":[{"id":2177,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1994,"src":"6584:16:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2175,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1990,"src":"6554:8:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1031","typeString":"ShortString"}},"id":2176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6563:20:10","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1210,"src":"6554:29:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1031_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1031_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":2178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6554:47:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2174,"id":2179,"nodeType":"Return","src":"6547:54:10"}]},"documentation":{"id":2170,"nodeType":"StructuredDocumentation","src":"6153:262:10","text":" @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":2181,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Version","nameLocation":"6482:14:10","nodeType":"FunctionDefinition","parameters":{"id":2171,"nodeType":"ParameterList","parameters":[],"src":"6496:2:10"},"returnParameters":{"id":2174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2173,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2181,"src":"6522:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2172,"name":"string","nodeType":"ElementaryTypeName","src":"6522:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6521:15:10"},"scope":2182,"src":"6473:135:10","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2183,"src":"1960:4650:10","usedErrors":[1039,1041],"usedEvents":[4]}],"src":"113:6498:10"},"id":10},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[2256],"Strings":[1607]},"id":2257,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2184,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:11"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":2186,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2257,"sourceUnit":1608,"src":"149:39:11","symbolAliases":[{"foreign":{"id":2185,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"157:7:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":2187,"nodeType":"StructuredDocumentation","src":"190:330:11","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":2256,"linearizedBaseContracts":[2256],"name":"MessageHashUtils","nameLocation":"529:16:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":2196,"nodeType":"Block","src":"1314:368:11","statements":[{"AST":{"nodeType":"YulBlock","src":"1376:300:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1397:4:11","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nodeType":"YulLiteral","src":"1403:34:11","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1390:6:11"},"nodeType":"YulFunctionCall","src":"1390:48:11"},"nodeType":"YulExpressionStatement","src":"1390:48:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1499:4:11","type":"","value":"0x1c"},{"name":"messageHash","nodeType":"YulIdentifier","src":"1505:11:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1492:6:11"},"nodeType":"YulFunctionCall","src":"1492:25:11"},"nodeType":"YulExpressionStatement","src":"1492:25:11"},{"nodeType":"YulAssignment","src":"1571:31:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1591:4:11","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1597:4:11","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1581:9:11"},"nodeType":"YulFunctionCall","src":"1581:21:11"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"1571:6:11"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2193,"isOffset":false,"isSlot":false,"src":"1571:6:11","valueSize":1},{"declaration":2190,"isOffset":false,"isSlot":false,"src":"1505:11:11","valueSize":1}],"id":2195,"nodeType":"InlineAssembly","src":"1367:309:11"}]},"documentation":{"id":2188,"nodeType":"StructuredDocumentation","src":"552:665:11","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":2197,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1231:22:11","nodeType":"FunctionDefinition","parameters":{"id":2191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2190,"mutability":"mutable","name":"messageHash","nameLocation":"1262:11:11","nodeType":"VariableDeclaration","scope":2197,"src":"1254:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2189,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1254:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1253:21:11"},"returnParameters":{"id":2194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2193,"mutability":"mutable","name":"digest","nameLocation":"1306:6:11","nodeType":"VariableDeclaration","scope":2197,"src":"1298:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2192,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1298:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1297:16:11"},"scope":2256,"src":"1222:460:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2222,"nodeType":"Block","src":"2234:143:11","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":2209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2286:32:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":2214,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2200,"src":"2343:7:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2351:6:11","memberName":"length","nodeType":"MemberAccess","src":"2343:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2212,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"2326:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$1607_$","typeString":"type(library Strings)"}},"id":2213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2334:8:11","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1420,"src":"2326:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2326:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2320:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2210,"name":"bytes","nodeType":"ElementaryTypeName","src":"2320:5:11","typeDescriptions":{}}},"id":2217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2320:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2218,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2200,"src":"2361:7:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2207,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2273:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2206,"name":"bytes","nodeType":"ElementaryTypeName","src":"2273:5:11","typeDescriptions":{}}},"id":2208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2279:6:11","memberName":"concat","nodeType":"MemberAccess","src":"2273:12:11","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2273:96:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2205,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2263:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2263:107:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2204,"id":2221,"nodeType":"Return","src":"2244:126:11"}]},"documentation":{"id":2198,"nodeType":"StructuredDocumentation","src":"1688:455:11","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":2223,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2157:22:11","nodeType":"FunctionDefinition","parameters":{"id":2201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2200,"mutability":"mutable","name":"message","nameLocation":"2193:7:11","nodeType":"VariableDeclaration","scope":2223,"src":"2180:20:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2199,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2179:22:11"},"returnParameters":{"id":2204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2203,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2223,"src":"2225:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2202,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2225:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2224:9:11"},"scope":2256,"src":"2148:229:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2242,"nodeType":"Block","src":"2831:80:11","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":2236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2875:10:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":2237,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2226,"src":"2887:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2238,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"2898:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2234,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2858:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2862:12:11","memberName":"encodePacked","nodeType":"MemberAccess","src":"2858:16:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2858:45:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2233,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2848:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2848:56:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2232,"id":2241,"nodeType":"Return","src":"2841:63:11"}]},"documentation":{"id":2224,"nodeType":"StructuredDocumentation","src":"2383:332:11","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":2243,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2729:31:11","nodeType":"FunctionDefinition","parameters":{"id":2229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2226,"mutability":"mutable","name":"validator","nameLocation":"2769:9:11","nodeType":"VariableDeclaration","scope":2243,"src":"2761:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2225,"name":"address","nodeType":"ElementaryTypeName","src":"2761:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2228,"mutability":"mutable","name":"data","nameLocation":"2793:4:11","nodeType":"VariableDeclaration","scope":2243,"src":"2780:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2227,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2760:38:11"},"returnParameters":{"id":2232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2231,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2243,"src":"2822:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2230,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2822:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2821:9:11"},"scope":2256,"src":"2720:191:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2254,"nodeType":"Block","src":"3462:292:11","statements":[{"AST":{"nodeType":"YulBlock","src":"3524:224:11","statements":[{"nodeType":"YulVariableDeclaration","src":"3538:22:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3555:4:11","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3549:5:11"},"nodeType":"YulFunctionCall","src":"3549:11:11"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"3542:3:11","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3580:3:11"},{"hexValue":"1901","kind":"string","nodeType":"YulLiteral","src":"3585:10:11","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3573:6:11"},"nodeType":"YulFunctionCall","src":"3573:23:11"},"nodeType":"YulExpressionStatement","src":"3573:23:11"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3620:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"3625:4:11","type":"","value":"0x02"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3616:3:11"},"nodeType":"YulFunctionCall","src":"3616:14:11"},{"name":"domainSeparator","nodeType":"YulIdentifier","src":"3632:15:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3609:6:11"},"nodeType":"YulFunctionCall","src":"3609:39:11"},"nodeType":"YulExpressionStatement","src":"3609:39:11"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3672:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"3677:4:11","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3668:3:11"},"nodeType":"YulFunctionCall","src":"3668:14:11"},{"name":"structHash","nodeType":"YulIdentifier","src":"3684:10:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3661:6:11"},"nodeType":"YulFunctionCall","src":"3661:34:11"},"nodeType":"YulExpressionStatement","src":"3661:34:11"},{"nodeType":"YulAssignment","src":"3708:30:11","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3728:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"3733:4:11","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3718:9:11"},"nodeType":"YulFunctionCall","src":"3718:20:11"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"3708:6:11"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2251,"isOffset":false,"isSlot":false,"src":"3708:6:11","valueSize":1},{"declaration":2246,"isOffset":false,"isSlot":false,"src":"3632:15:11","valueSize":1},{"declaration":2248,"isOffset":false,"isSlot":false,"src":"3684:10:11","valueSize":1}],"id":2253,"nodeType":"InlineAssembly","src":"3515:233:11"}]},"documentation":{"id":2244,"nodeType":"StructuredDocumentation","src":"2917:431:11","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":2255,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3362:15:11","nodeType":"FunctionDefinition","parameters":{"id":2249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2246,"mutability":"mutable","name":"domainSeparator","nameLocation":"3386:15:11","nodeType":"VariableDeclaration","scope":2255,"src":"3378:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2245,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3378:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2248,"mutability":"mutable","name":"structHash","nameLocation":"3411:10:11","nodeType":"VariableDeclaration","scope":2255,"src":"3403:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2247,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3403:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3377:45:11"},"returnParameters":{"id":2252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2251,"mutability":"mutable","name":"digest","nameLocation":"3454:6:11","nodeType":"VariableDeclaration","scope":2255,"src":"3446:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2250,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3446:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3445:16:11"},"scope":2256,"src":"3353:401:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2257,"src":"521:3235:11","usedErrors":[],"usedEvents":[]}],"src":"123:3634:11"},"id":11},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[3310]},"id":3311,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2258,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:12"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":2259,"nodeType":"StructuredDocumentation","src":"129:73:12","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3310,"linearizedBaseContracts":[3310],"name":"Math","nameLocation":"211:4:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2260,"nodeType":"StructuredDocumentation","src":"222:50:12","text":" @dev Muldiv operation overflow."},"errorSelector":"227bc153","id":2262,"name":"MathOverflowedMulDiv","nameLocation":"283:20:12","nodeType":"ErrorDefinition","parameters":{"id":2261,"nodeType":"ParameterList","parameters":[],"src":"303:2:12"},"src":"277:29:12"},{"canonicalName":"Math.Rounding","id":2267,"members":[{"id":2263,"name":"Floor","nameLocation":"336:5:12","nodeType":"EnumValue","src":"336:5:12"},{"id":2264,"name":"Ceil","nameLocation":"379:4:12","nodeType":"EnumValue","src":"379:4:12"},{"id":2265,"name":"Trunc","nameLocation":"421:5:12","nodeType":"EnumValue","src":"421:5:12"},{"id":2266,"name":"Expand","nameLocation":"451:6:12","nodeType":"EnumValue","src":"451:6:12"}],"name":"Rounding","nameLocation":"317:8:12","nodeType":"EnumDefinition","src":"312:169:12"},{"body":{"id":2298,"nodeType":"Block","src":"661:140:12","statements":[{"id":2297,"nodeType":"UncheckedBlock","src":"671:124:12","statements":[{"assignments":[2280],"declarations":[{"constant":false,"id":2280,"mutability":"mutable","name":"c","nameLocation":"703:1:12","nodeType":"VariableDeclaration","scope":2297,"src":"695:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2279,"name":"uint256","nodeType":"ElementaryTypeName","src":"695:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2284,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2281,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"707:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2282,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2272,"src":"711:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"707:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"695:17:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2285,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"730:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2286,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"734:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"730:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2292,"nodeType":"IfStatement","src":"726:28:12","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"745:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"752:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2290,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"744:10:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2278,"id":2291,"nodeType":"Return","src":"737:17:12"}},{"expression":{"components":[{"hexValue":"74727565","id":2293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"776:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2294,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"782:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2295,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"775:9:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2278,"id":2296,"nodeType":"Return","src":"768:16:12"}]}]},"documentation":{"id":2268,"nodeType":"StructuredDocumentation","src":"487:93:12","text":" @dev Returns the addition of two unsigned integers, with an overflow flag."},"id":2299,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"594:6:12","nodeType":"FunctionDefinition","parameters":{"id":2273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2270,"mutability":"mutable","name":"a","nameLocation":"609:1:12","nodeType":"VariableDeclaration","scope":2299,"src":"601:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2269,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2272,"mutability":"mutable","name":"b","nameLocation":"620:1:12","nodeType":"VariableDeclaration","scope":2299,"src":"612:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2271,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:12"},"returnParameters":{"id":2278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2275,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2299,"src":"646:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2274,"name":"bool","nodeType":"ElementaryTypeName","src":"646:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2277,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2299,"src":"652:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2276,"name":"uint256","nodeType":"ElementaryTypeName","src":"652:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:15:12"},"scope":3310,"src":"585:216:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2326,"nodeType":"Block","src":"984:113:12","statements":[{"id":2325,"nodeType":"UncheckedBlock","src":"994:97:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2311,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"1022:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2312,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2302,"src":"1026:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1022:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2318,"nodeType":"IfStatement","src":"1018:28:12","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1037:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2316,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1036:10:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2310,"id":2317,"nodeType":"Return","src":"1029:17:12"}},{"expression":{"components":[{"hexValue":"74727565","id":2319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1068:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2320,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2302,"src":"1074:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2321,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"1078:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1074:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2323,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1067:13:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2310,"id":2324,"nodeType":"Return","src":"1060:20:12"}]}]},"documentation":{"id":2300,"nodeType":"StructuredDocumentation","src":"807:96:12","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag."},"id":2327,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"917:6:12","nodeType":"FunctionDefinition","parameters":{"id":2305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2302,"mutability":"mutable","name":"a","nameLocation":"932:1:12","nodeType":"VariableDeclaration","scope":2327,"src":"924:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2301,"name":"uint256","nodeType":"ElementaryTypeName","src":"924:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2304,"mutability":"mutable","name":"b","nameLocation":"943:1:12","nodeType":"VariableDeclaration","scope":2327,"src":"935:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2303,"name":"uint256","nodeType":"ElementaryTypeName","src":"935:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"923:22:12"},"returnParameters":{"id":2310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2307,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2327,"src":"969:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2306,"name":"bool","nodeType":"ElementaryTypeName","src":"969:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2309,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2327,"src":"975:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2308,"name":"uint256","nodeType":"ElementaryTypeName","src":"975:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"968:15:12"},"scope":3310,"src":"908:189:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2368,"nodeType":"Block","src":"1283:417:12","statements":[{"id":2367,"nodeType":"UncheckedBlock","src":"1293:401:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2339,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2330,"src":"1551:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1556:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1551:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2346,"nodeType":"IfStatement","src":"1547:28:12","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":2342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1567:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":2343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1573:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2344,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1566:9:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2338,"id":2345,"nodeType":"Return","src":"1559:16:12"}},{"assignments":[2348],"declarations":[{"constant":false,"id":2348,"mutability":"mutable","name":"c","nameLocation":"1597:1:12","nodeType":"VariableDeclaration","scope":2367,"src":"1589:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2347,"name":"uint256","nodeType":"ElementaryTypeName","src":"1589:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2352,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2349,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2330,"src":"1601:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2350,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2332,"src":"1605:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1601:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1589:17:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2353,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2348,"src":"1624:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2354,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2330,"src":"1628:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2356,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2332,"src":"1633:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2362,"nodeType":"IfStatement","src":"1620:33:12","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1644:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1651:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2360,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1643:10:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2338,"id":2361,"nodeType":"Return","src":"1636:17:12"}},{"expression":{"components":[{"hexValue":"74727565","id":2363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1675:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2364,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2348,"src":"1681:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2365,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1674:9:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2338,"id":2366,"nodeType":"Return","src":"1667:16:12"}]}]},"documentation":{"id":2328,"nodeType":"StructuredDocumentation","src":"1103:99:12","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag."},"id":2369,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1216:6:12","nodeType":"FunctionDefinition","parameters":{"id":2333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2330,"mutability":"mutable","name":"a","nameLocation":"1231:1:12","nodeType":"VariableDeclaration","scope":2369,"src":"1223:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2329,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2332,"mutability":"mutable","name":"b","nameLocation":"1242:1:12","nodeType":"VariableDeclaration","scope":2369,"src":"1234:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2331,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1222:22:12"},"returnParameters":{"id":2338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2335,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2369,"src":"1268:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2334,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2337,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2369,"src":"1274:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2336,"name":"uint256","nodeType":"ElementaryTypeName","src":"1274:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1267:15:12"},"scope":3310,"src":"1207:493:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2396,"nodeType":"Block","src":"1887:114:12","statements":[{"id":2395,"nodeType":"UncheckedBlock","src":"1897:98:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2381,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2374,"src":"1925:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1930:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1925:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2388,"nodeType":"IfStatement","src":"1921:29:12","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1941:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1948:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2386,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1940:10:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2380,"id":2387,"nodeType":"Return","src":"1933:17:12"}},{"expression":{"components":[{"hexValue":"74727565","id":2389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1972:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2390,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2372,"src":"1978:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2391,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2374,"src":"1982:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1978:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2393,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1971:13:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2380,"id":2394,"nodeType":"Return","src":"1964:20:12"}]}]},"documentation":{"id":2370,"nodeType":"StructuredDocumentation","src":"1706:100:12","text":" @dev Returns the division of two unsigned integers, with a division by zero flag."},"id":2397,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1820:6:12","nodeType":"FunctionDefinition","parameters":{"id":2375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2372,"mutability":"mutable","name":"a","nameLocation":"1835:1:12","nodeType":"VariableDeclaration","scope":2397,"src":"1827:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2371,"name":"uint256","nodeType":"ElementaryTypeName","src":"1827:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2374,"mutability":"mutable","name":"b","nameLocation":"1846:1:12","nodeType":"VariableDeclaration","scope":2397,"src":"1838:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2373,"name":"uint256","nodeType":"ElementaryTypeName","src":"1838:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1826:22:12"},"returnParameters":{"id":2380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2377,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2397,"src":"1872:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2376,"name":"bool","nodeType":"ElementaryTypeName","src":"1872:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2397,"src":"1878:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2378,"name":"uint256","nodeType":"ElementaryTypeName","src":"1878:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1871:15:12"},"scope":3310,"src":"1811:190:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2424,"nodeType":"Block","src":"2198:114:12","statements":[{"id":2423,"nodeType":"UncheckedBlock","src":"2208:98:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2409,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2402,"src":"2236:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2241:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2236:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2416,"nodeType":"IfStatement","src":"2232:29:12","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2252:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2259:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2414,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2251:10:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2408,"id":2415,"nodeType":"Return","src":"2244:17:12"}},{"expression":{"components":[{"hexValue":"74727565","id":2417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2283:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2418,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"2289:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":2419,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2402,"src":"2293:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2289:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2421,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2282:13:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2408,"id":2422,"nodeType":"Return","src":"2275:20:12"}]}]},"documentation":{"id":2398,"nodeType":"StructuredDocumentation","src":"2007:110:12","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."},"id":2425,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2131:6:12","nodeType":"FunctionDefinition","parameters":{"id":2403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2400,"mutability":"mutable","name":"a","nameLocation":"2146:1:12","nodeType":"VariableDeclaration","scope":2425,"src":"2138:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2399,"name":"uint256","nodeType":"ElementaryTypeName","src":"2138:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2402,"mutability":"mutable","name":"b","nameLocation":"2157:1:12","nodeType":"VariableDeclaration","scope":2425,"src":"2149:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2401,"name":"uint256","nodeType":"ElementaryTypeName","src":"2149:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2137:22:12"},"returnParameters":{"id":2408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2405,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2425,"src":"2183:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2404,"name":"bool","nodeType":"ElementaryTypeName","src":"2183:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2407,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2425,"src":"2189:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2406,"name":"uint256","nodeType":"ElementaryTypeName","src":"2189:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2182:15:12"},"scope":3310,"src":"2122:190:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2442,"nodeType":"Block","src":"2449:37:12","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2435,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"2466:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2436,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2430,"src":"2470:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2466:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2439,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2430,"src":"2478:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2466:13:12","trueExpression":{"id":2438,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"2474:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2434,"id":2441,"nodeType":"Return","src":"2459:20:12"}]},"documentation":{"id":2426,"nodeType":"StructuredDocumentation","src":"2318:59:12","text":" @dev Returns the largest of two numbers."},"id":2443,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"2391:3:12","nodeType":"FunctionDefinition","parameters":{"id":2431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2428,"mutability":"mutable","name":"a","nameLocation":"2403:1:12","nodeType":"VariableDeclaration","scope":2443,"src":"2395:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2427,"name":"uint256","nodeType":"ElementaryTypeName","src":"2395:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2430,"mutability":"mutable","name":"b","nameLocation":"2414:1:12","nodeType":"VariableDeclaration","scope":2443,"src":"2406:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2429,"name":"uint256","nodeType":"ElementaryTypeName","src":"2406:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2394:22:12"},"returnParameters":{"id":2434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2443,"src":"2440:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2432,"name":"uint256","nodeType":"ElementaryTypeName","src":"2440:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2439:9:12"},"scope":3310,"src":"2382:104:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2460,"nodeType":"Block","src":"2624:37:12","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2453,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2446,"src":"2641:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2454,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"2645:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2641:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2457,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"2653:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2641:13:12","trueExpression":{"id":2456,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2446,"src":"2649:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2452,"id":2459,"nodeType":"Return","src":"2634:20:12"}]},"documentation":{"id":2444,"nodeType":"StructuredDocumentation","src":"2492:60:12","text":" @dev Returns the smallest of two numbers."},"id":2461,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"2566:3:12","nodeType":"FunctionDefinition","parameters":{"id":2449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2446,"mutability":"mutable","name":"a","nameLocation":"2578:1:12","nodeType":"VariableDeclaration","scope":2461,"src":"2570:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2445,"name":"uint256","nodeType":"ElementaryTypeName","src":"2570:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2448,"mutability":"mutable","name":"b","nameLocation":"2589:1:12","nodeType":"VariableDeclaration","scope":2461,"src":"2581:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2447,"name":"uint256","nodeType":"ElementaryTypeName","src":"2581:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2569:22:12"},"returnParameters":{"id":2452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2451,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2461,"src":"2615:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2450,"name":"uint256","nodeType":"ElementaryTypeName","src":"2615:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2614:9:12"},"scope":3310,"src":"2557:104:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2483,"nodeType":"Block","src":"2845:82:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2471,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2464,"src":"2900:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2472,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2466,"src":"2904:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2900:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2474,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2899:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2475,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2464,"src":"2910:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2476,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2466,"src":"2914:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2910:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2478,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2909:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":2479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2919:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2909:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2899:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2470,"id":2482,"nodeType":"Return","src":"2892:28:12"}]},"documentation":{"id":2462,"nodeType":"StructuredDocumentation","src":"2667:102:12","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":2484,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"2783:7:12","nodeType":"FunctionDefinition","parameters":{"id":2467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2464,"mutability":"mutable","name":"a","nameLocation":"2799:1:12","nodeType":"VariableDeclaration","scope":2484,"src":"2791:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2463,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2466,"mutability":"mutable","name":"b","nameLocation":"2810:1:12","nodeType":"VariableDeclaration","scope":2484,"src":"2802:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2465,"name":"uint256","nodeType":"ElementaryTypeName","src":"2802:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2790:22:12"},"returnParameters":{"id":2470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2469,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2484,"src":"2836:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2468,"name":"uint256","nodeType":"ElementaryTypeName","src":"2836:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2835:9:12"},"scope":3310,"src":"2774:153:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2517,"nodeType":"Block","src":"3219:260:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2494,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2489,"src":"3233:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3238:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3233:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2502,"nodeType":"IfStatement","src":"3229:127:12","trueBody":{"id":2501,"nodeType":"Block","src":"3241:115:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2497,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"3340:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2498,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2489,"src":"3344:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3340:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2493,"id":2500,"nodeType":"Return","src":"3333:12:12"}]}},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2503,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"3444:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3449:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3444:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2507,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"3458:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3462:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3458:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2510,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3457:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2511,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2489,"src":"3467:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3457:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3471:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3457:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3444:28:12","trueExpression":{"hexValue":"30","id":2506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3453:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2493,"id":2516,"nodeType":"Return","src":"3437:35:12"}]},"documentation":{"id":2485,"nodeType":"StructuredDocumentation","src":"2933:210:12","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":2518,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3157:7:12","nodeType":"FunctionDefinition","parameters":{"id":2490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2487,"mutability":"mutable","name":"a","nameLocation":"3173:1:12","nodeType":"VariableDeclaration","scope":2518,"src":"3165:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2486,"name":"uint256","nodeType":"ElementaryTypeName","src":"3165:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2489,"mutability":"mutable","name":"b","nameLocation":"3184:1:12","nodeType":"VariableDeclaration","scope":2518,"src":"3176:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2488,"name":"uint256","nodeType":"ElementaryTypeName","src":"3176:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3164:22:12"},"returnParameters":{"id":2493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2492,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2518,"src":"3210:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2491,"name":"uint256","nodeType":"ElementaryTypeName","src":"3210:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3209:9:12"},"scope":3310,"src":"3148:331:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2643,"nodeType":"Block","src":"3901:4018:12","statements":[{"id":2642,"nodeType":"UncheckedBlock","src":"3911:4002:12","statements":[{"assignments":[2531],"declarations":[{"constant":false,"id":2531,"mutability":"mutable","name":"prod0","nameLocation":"4240:5:12","nodeType":"VariableDeclaration","scope":2642,"src":"4232:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2530,"name":"uint256","nodeType":"ElementaryTypeName","src":"4232:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2535,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2532,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2521,"src":"4248:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2533,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"4252:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4248:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4232:21:12"},{"assignments":[2537],"declarations":[{"constant":false,"id":2537,"mutability":"mutable","name":"prod1","nameLocation":"4320:5:12","nodeType":"VariableDeclaration","scope":2642,"src":"4312:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2536,"name":"uint256","nodeType":"ElementaryTypeName","src":"4312:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2538,"nodeType":"VariableDeclarationStatement","src":"4312:13:12"},{"AST":{"nodeType":"YulBlock","src":"4392:122:12","statements":[{"nodeType":"YulVariableDeclaration","src":"4410:30:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4427:1:12"},{"name":"y","nodeType":"YulIdentifier","src":"4430:1:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4437:1:12","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4433:3:12"},"nodeType":"YulFunctionCall","src":"4433:6:12"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"4420:6:12"},"nodeType":"YulFunctionCall","src":"4420:20:12"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"4414:2:12","type":""}]},{"nodeType":"YulAssignment","src":"4457:43:12","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"4474:2:12"},{"name":"prod0","nodeType":"YulIdentifier","src":"4478:5:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4470:3:12"},"nodeType":"YulFunctionCall","src":"4470:14:12"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"4489:2:12"},{"name":"prod0","nodeType":"YulIdentifier","src":"4493:5:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4486:2:12"},"nodeType":"YulFunctionCall","src":"4486:13:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4466:3:12"},"nodeType":"YulFunctionCall","src":"4466:34:12"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"4457:5:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2531,"isOffset":false,"isSlot":false,"src":"4478:5:12","valueSize":1},{"declaration":2531,"isOffset":false,"isSlot":false,"src":"4493:5:12","valueSize":1},{"declaration":2537,"isOffset":false,"isSlot":false,"src":"4457:5:12","valueSize":1},{"declaration":2521,"isOffset":false,"isSlot":false,"src":"4427:1:12","valueSize":1},{"declaration":2523,"isOffset":false,"isSlot":false,"src":"4430:1:12","valueSize":1}],"id":2539,"nodeType":"InlineAssembly","src":"4383:131:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2540,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2537,"src":"4595:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4604:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4595:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2548,"nodeType":"IfStatement","src":"4591:368:12","trueBody":{"id":2547,"nodeType":"Block","src":"4607:352:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2543,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2531,"src":"4925:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2544,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"4933:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4925:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2529,"id":2546,"nodeType":"Return","src":"4918:26:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2549,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"5065:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2550,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2537,"src":"5080:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:20:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2556,"nodeType":"IfStatement","src":"5061:88:12","trueBody":{"id":2555,"nodeType":"Block","src":"5087:62:12","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2552,"name":"MathOverflowedMulDiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2262,"src":"5112:20:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5112:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2554,"nodeType":"RevertStatement","src":"5105:29:12"}]}},{"assignments":[2558],"declarations":[{"constant":false,"id":2558,"mutability":"mutable","name":"remainder","nameLocation":"5412:9:12","nodeType":"VariableDeclaration","scope":2642,"src":"5404:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2557,"name":"uint256","nodeType":"ElementaryTypeName","src":"5404:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2559,"nodeType":"VariableDeclarationStatement","src":"5404:17:12"},{"AST":{"nodeType":"YulBlock","src":"5444:291:12","statements":[{"nodeType":"YulAssignment","src":"5513:38:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5533:1:12"},{"name":"y","nodeType":"YulIdentifier","src":"5536:1:12"},{"name":"denominator","nodeType":"YulIdentifier","src":"5539:11:12"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"5526:6:12"},"nodeType":"YulFunctionCall","src":"5526:25:12"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"5513:9:12"}]},{"nodeType":"YulAssignment","src":"5633:41:12","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"5646:5:12"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"5656:9:12"},{"name":"prod0","nodeType":"YulIdentifier","src":"5667:5:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5653:2:12"},"nodeType":"YulFunctionCall","src":"5653:20:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5642:3:12"},"nodeType":"YulFunctionCall","src":"5642:32:12"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"5633:5:12"}]},{"nodeType":"YulAssignment","src":"5691:30:12","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"5704:5:12"},{"name":"remainder","nodeType":"YulIdentifier","src":"5711:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5700:3:12"},"nodeType":"YulFunctionCall","src":"5700:21:12"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"5691:5:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2525,"isOffset":false,"isSlot":false,"src":"5539:11:12","valueSize":1},{"declaration":2531,"isOffset":false,"isSlot":false,"src":"5667:5:12","valueSize":1},{"declaration":2531,"isOffset":false,"isSlot":false,"src":"5691:5:12","valueSize":1},{"declaration":2531,"isOffset":false,"isSlot":false,"src":"5704:5:12","valueSize":1},{"declaration":2537,"isOffset":false,"isSlot":false,"src":"5633:5:12","valueSize":1},{"declaration":2537,"isOffset":false,"isSlot":false,"src":"5646:5:12","valueSize":1},{"declaration":2558,"isOffset":false,"isSlot":false,"src":"5513:9:12","valueSize":1},{"declaration":2558,"isOffset":false,"isSlot":false,"src":"5656:9:12","valueSize":1},{"declaration":2558,"isOffset":false,"isSlot":false,"src":"5711:9:12","valueSize":1},{"declaration":2521,"isOffset":false,"isSlot":false,"src":"5533:1:12","valueSize":1},{"declaration":2523,"isOffset":false,"isSlot":false,"src":"5536:1:12","valueSize":1}],"id":2560,"nodeType":"InlineAssembly","src":"5435:300:12"},{"assignments":[2562],"declarations":[{"constant":false,"id":2562,"mutability":"mutable","name":"twos","nameLocation":"5947:4:12","nodeType":"VariableDeclaration","scope":2642,"src":"5939:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2561,"name":"uint256","nodeType":"ElementaryTypeName","src":"5939:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2569,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2563,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"5954:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":2564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5969:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2565,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"5973:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5969:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2567,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5968:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5954:31:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5939:46:12"},{"AST":{"nodeType":"YulBlock","src":"6008:362:12","statements":[{"nodeType":"YulAssignment","src":"6073:37:12","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"6092:11:12"},{"name":"twos","nodeType":"YulIdentifier","src":"6105:4:12"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6088:3:12"},"nodeType":"YulFunctionCall","src":"6088:22:12"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"6073:11:12"}]},{"nodeType":"YulAssignment","src":"6177:25:12","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"6190:5:12"},{"name":"twos","nodeType":"YulIdentifier","src":"6197:4:12"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6186:3:12"},"nodeType":"YulFunctionCall","src":"6186:16:12"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"6177:5:12"}]},{"nodeType":"YulAssignment","src":"6317:39:12","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6337:1:12","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"6340:4:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6333:3:12"},"nodeType":"YulFunctionCall","src":"6333:12:12"},{"name":"twos","nodeType":"YulIdentifier","src":"6347:4:12"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6329:3:12"},"nodeType":"YulFunctionCall","src":"6329:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"6354:1:12","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6325:3:12"},"nodeType":"YulFunctionCall","src":"6325:31:12"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"6317:4:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2525,"isOffset":false,"isSlot":false,"src":"6073:11:12","valueSize":1},{"declaration":2525,"isOffset":false,"isSlot":false,"src":"6092:11:12","valueSize":1},{"declaration":2531,"isOffset":false,"isSlot":false,"src":"6177:5:12","valueSize":1},{"declaration":2531,"isOffset":false,"isSlot":false,"src":"6190:5:12","valueSize":1},{"declaration":2562,"isOffset":false,"isSlot":false,"src":"6105:4:12","valueSize":1},{"declaration":2562,"isOffset":false,"isSlot":false,"src":"6197:4:12","valueSize":1},{"declaration":2562,"isOffset":false,"isSlot":false,"src":"6317:4:12","valueSize":1},{"declaration":2562,"isOffset":false,"isSlot":false,"src":"6340:4:12","valueSize":1},{"declaration":2562,"isOffset":false,"isSlot":false,"src":"6347:4:12","valueSize":1}],"id":2570,"nodeType":"InlineAssembly","src":"5999:371:12"},{"expression":{"id":2575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2571,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2531,"src":"6436:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2572,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2537,"src":"6445:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2573,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"6453:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6445:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6436:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2576,"nodeType":"ExpressionStatement","src":"6436:21:12"},{"assignments":[2578],"declarations":[{"constant":false,"id":2578,"mutability":"mutable","name":"inverse","nameLocation":"6783:7:12","nodeType":"VariableDeclaration","scope":2642,"src":"6775:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2577,"name":"uint256","nodeType":"ElementaryTypeName","src":"6775:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2585,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":2579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6794:1:12","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2580,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"6798:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6794:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2582,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6793:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":2583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6813:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"6793:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6775:39:12"},{"expression":{"id":2592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2586,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"7031:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7042:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2588,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"7046:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2589,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"7060:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7046:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7042:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7031:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2593,"nodeType":"ExpressionStatement","src":"7031:36:12"},{"expression":{"id":2600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2594,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"7100:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7111:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2596,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"7115:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2597,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"7129:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7115:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7111:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7100:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2601,"nodeType":"ExpressionStatement","src":"7100:36:12"},{"expression":{"id":2608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2602,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"7170:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7181:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2604,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"7185:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2605,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"7199:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7185:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7181:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7170:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2609,"nodeType":"ExpressionStatement","src":"7170:36:12"},{"expression":{"id":2616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2610,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"7240:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7251:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2612,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"7255:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2613,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"7269:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7255:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7251:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7240:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2617,"nodeType":"ExpressionStatement","src":"7240:36:12"},{"expression":{"id":2624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2618,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"7310:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7321:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2620,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"7325:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2621,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"7339:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7325:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7321:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7310:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2625,"nodeType":"ExpressionStatement","src":"7310:36:12"},{"expression":{"id":2632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2626,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"7381:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7392:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2628,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"7396:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2629,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"7410:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7396:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7392:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7381:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2633,"nodeType":"ExpressionStatement","src":"7381:36:12"},{"expression":{"id":2638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2634,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"7851:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2635,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2531,"src":"7860:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2636,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"7868:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7860:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7851:24:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2639,"nodeType":"ExpressionStatement","src":"7851:24:12"},{"expression":{"id":2640,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"7896:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2529,"id":2641,"nodeType":"Return","src":"7889:13:12"}]}]},"documentation":{"id":2519,"nodeType":"StructuredDocumentation","src":"3485:313:12","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":2644,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"3812:6:12","nodeType":"FunctionDefinition","parameters":{"id":2526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2521,"mutability":"mutable","name":"x","nameLocation":"3827:1:12","nodeType":"VariableDeclaration","scope":2644,"src":"3819:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2520,"name":"uint256","nodeType":"ElementaryTypeName","src":"3819:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2523,"mutability":"mutable","name":"y","nameLocation":"3838:1:12","nodeType":"VariableDeclaration","scope":2644,"src":"3830:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2522,"name":"uint256","nodeType":"ElementaryTypeName","src":"3830:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2525,"mutability":"mutable","name":"denominator","nameLocation":"3849:11:12","nodeType":"VariableDeclaration","scope":2644,"src":"3841:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2524,"name":"uint256","nodeType":"ElementaryTypeName","src":"3841:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3818:43:12"},"returnParameters":{"id":2529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2528,"mutability":"mutable","name":"result","nameLocation":"3893:6:12","nodeType":"VariableDeclaration","scope":2644,"src":"3885:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2527,"name":"uint256","nodeType":"ElementaryTypeName","src":"3885:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3884:16:12"},"scope":3310,"src":"3803:4116:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2686,"nodeType":"Block","src":"8161:192:12","statements":[{"assignments":[2660],"declarations":[{"constant":false,"id":2660,"mutability":"mutable","name":"result","nameLocation":"8179:6:12","nodeType":"VariableDeclaration","scope":2686,"src":"8171:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2659,"name":"uint256","nodeType":"ElementaryTypeName","src":"8171:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2666,"initialValue":{"arguments":[{"id":2662,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2647,"src":"8195:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2663,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"8198:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2664,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2651,"src":"8201:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2661,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[2644,2687],"referencedDeclaration":2644,"src":"8188:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8188:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8171:42:12"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2668,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2654,"src":"8244:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2267","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2267","typeString":"enum Math.Rounding"}],"id":2667,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3309,"src":"8227:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2267_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8227:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2671,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2647,"src":"8264:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2672,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"8267:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2673,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2651,"src":"8270:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2670,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"8257:6:12","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8257:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8285:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8257:29:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8227:59:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2683,"nodeType":"IfStatement","src":"8223:101:12","trueBody":{"id":2682,"nodeType":"Block","src":"8288:36:12","statements":[{"expression":{"id":2680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2678,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"8302:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8312:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8302:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2681,"nodeType":"ExpressionStatement","src":"8302:11:12"}]}},{"expression":{"id":2684,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"8340:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2658,"id":2685,"nodeType":"Return","src":"8333:13:12"}]},"documentation":{"id":2645,"nodeType":"StructuredDocumentation","src":"7925:121:12","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":2687,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"8060:6:12","nodeType":"FunctionDefinition","parameters":{"id":2655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2647,"mutability":"mutable","name":"x","nameLocation":"8075:1:12","nodeType":"VariableDeclaration","scope":2687,"src":"8067:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2646,"name":"uint256","nodeType":"ElementaryTypeName","src":"8067:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2649,"mutability":"mutable","name":"y","nameLocation":"8086:1:12","nodeType":"VariableDeclaration","scope":2687,"src":"8078:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2648,"name":"uint256","nodeType":"ElementaryTypeName","src":"8078:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2651,"mutability":"mutable","name":"denominator","nameLocation":"8097:11:12","nodeType":"VariableDeclaration","scope":2687,"src":"8089:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2650,"name":"uint256","nodeType":"ElementaryTypeName","src":"8089:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2654,"mutability":"mutable","name":"rounding","nameLocation":"8119:8:12","nodeType":"VariableDeclaration","scope":2687,"src":"8110:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2267","typeString":"enum Math.Rounding"},"typeName":{"id":2653,"nodeType":"UserDefinedTypeName","pathNode":{"id":2652,"name":"Rounding","nameLocations":["8110:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":2267,"src":"8110:8:12"},"referencedDeclaration":2267,"src":"8110:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2267","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8066:62:12"},"returnParameters":{"id":2658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2657,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2687,"src":"8152:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2656,"name":"uint256","nodeType":"ElementaryTypeName","src":"8152:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8151:9:12"},"scope":3310,"src":"8051:302:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2798,"nodeType":"Block","src":"8644:1585:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2695,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"8658:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8658:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2701,"nodeType":"IfStatement","src":"8654:45:12","trueBody":{"id":2700,"nodeType":"Block","src":"8666:33:12","statements":[{"expression":{"hexValue":"30","id":2698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8687:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2694,"id":2699,"nodeType":"Return","src":"8680:8:12"}]}},{"assignments":[2703],"declarations":[{"constant":false,"id":2703,"mutability":"mutable","name":"result","nameLocation":"9386:6:12","nodeType":"VariableDeclaration","scope":2798,"src":"9378:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2702,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2712,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9395:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2706,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"9406:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2705,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2966,3001],"referencedDeclaration":2966,"src":"9401:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9401:7:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9412:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9401:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2710,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9400:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9395:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9378:36:12"},{"id":2797,"nodeType":"UncheckedBlock","src":"9815:408:12","statements":[{"expression":{"id":2722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2713,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"9839:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2714,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"9849:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2715,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"9858:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2716,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"9862:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9858:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9849:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2719,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9848:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9873:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9848:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9839:35:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2723,"nodeType":"ExpressionStatement","src":"9839:35:12"},{"expression":{"id":2733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2724,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"9888:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2725,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"9898:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2726,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"9907:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2727,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"9911:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9907:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9898:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2730,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9897:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9922:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9897:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9888:35:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2734,"nodeType":"ExpressionStatement","src":"9888:35:12"},{"expression":{"id":2744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2735,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"9937:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2736,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"9947:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2737,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"9956:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2738,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"9960:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9956:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9947:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2741,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9946:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9971:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9946:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9937:35:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2745,"nodeType":"ExpressionStatement","src":"9937:35:12"},{"expression":{"id":2755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2746,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"9986:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2747,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"9996:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2748,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"10005:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2749,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"10009:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10005:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9996:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2752,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9995:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10020:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9995:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9986:35:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2756,"nodeType":"ExpressionStatement","src":"9986:35:12"},{"expression":{"id":2766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2757,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"10035:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2758,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"10045:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2759,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"10054:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2760,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"10058:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10054:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10045:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2763,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10044:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10069:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10044:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10035:35:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2767,"nodeType":"ExpressionStatement","src":"10035:35:12"},{"expression":{"id":2777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2768,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"10084:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2769,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"10094:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2770,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"10103:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2771,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"10107:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10094:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2774,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10093:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10118:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10093:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10084:35:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2778,"nodeType":"ExpressionStatement","src":"10084:35:12"},{"expression":{"id":2788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2779,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"10133:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2780,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"10143:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2781,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"10152:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2782,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"10156:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10152:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10143:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2785,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10142:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10167:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10142:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10133:35:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2789,"nodeType":"ExpressionStatement","src":"10133:35:12"},{"expression":{"arguments":[{"id":2791,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"10193:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2792,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"10201:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2793,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"10205:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10201:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2790,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2461,"src":"10189:3:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10189:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2694,"id":2796,"nodeType":"Return","src":"10182:30:12"}]}]},"documentation":{"id":2688,"nodeType":"StructuredDocumentation","src":"8359:223:12","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":2799,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8596:4:12","nodeType":"FunctionDefinition","parameters":{"id":2691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2690,"mutability":"mutable","name":"a","nameLocation":"8609:1:12","nodeType":"VariableDeclaration","scope":2799,"src":"8601:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2689,"name":"uint256","nodeType":"ElementaryTypeName","src":"8601:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8600:11:12"},"returnParameters":{"id":2694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2693,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2799,"src":"8635:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2692,"name":"uint256","nodeType":"ElementaryTypeName","src":"8635:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8634:9:12"},"scope":3310,"src":"8587:1642:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2833,"nodeType":"Block","src":"10405:164:12","statements":[{"id":2832,"nodeType":"UncheckedBlock","src":"10415:148:12","statements":[{"assignments":[2811],"declarations":[{"constant":false,"id":2811,"mutability":"mutable","name":"result","nameLocation":"10447:6:12","nodeType":"VariableDeclaration","scope":2832,"src":"10439:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2810,"name":"uint256","nodeType":"ElementaryTypeName","src":"10439:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2815,"initialValue":{"arguments":[{"id":2813,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2802,"src":"10461:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2812,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[2799,2834],"referencedDeclaration":2799,"src":"10456:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10456:7:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10439:24:12"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2816,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2811,"src":"10484:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2818,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2805,"src":"10511:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2267","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2267","typeString":"enum Math.Rounding"}],"id":2817,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3309,"src":"10494:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2267_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10494:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2820,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2811,"src":"10524:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2821,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2811,"src":"10533:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2823,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2802,"src":"10542:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10494:49:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10550:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10494:57:12","trueExpression":{"hexValue":"31","id":2826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10546:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2829,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10493:59:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"10484:68:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2809,"id":2831,"nodeType":"Return","src":"10477:75:12"}]}]},"documentation":{"id":2800,"nodeType":"StructuredDocumentation","src":"10235:89:12","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":2834,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"10338:4:12","nodeType":"FunctionDefinition","parameters":{"id":2806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2802,"mutability":"mutable","name":"a","nameLocation":"10351:1:12","nodeType":"VariableDeclaration","scope":2834,"src":"10343:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2801,"name":"uint256","nodeType":"ElementaryTypeName","src":"10343:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2805,"mutability":"mutable","name":"rounding","nameLocation":"10363:8:12","nodeType":"VariableDeclaration","scope":2834,"src":"10354:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2267","typeString":"enum Math.Rounding"},"typeName":{"id":2804,"nodeType":"UserDefinedTypeName","pathNode":{"id":2803,"name":"Rounding","nameLocations":["10354:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":2267,"src":"10354:8:12"},"referencedDeclaration":2267,"src":"10354:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2267","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10342:30:12"},"returnParameters":{"id":2809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2808,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2834,"src":"10396:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2807,"name":"uint256","nodeType":"ElementaryTypeName","src":"10396:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10395:9:12"},"scope":3310,"src":"10329:240:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2965,"nodeType":"Block","src":"10760:922:12","statements":[{"assignments":[2843],"declarations":[{"constant":false,"id":2843,"mutability":"mutable","name":"result","nameLocation":"10778:6:12","nodeType":"VariableDeclaration","scope":2965,"src":"10770:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2842,"name":"uint256","nodeType":"ElementaryTypeName","src":"10770:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2845,"initialValue":{"hexValue":"30","id":2844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10787:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10770:18:12"},{"id":2962,"nodeType":"UncheckedBlock","src":"10798:855:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2846,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2837,"src":"10826:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10835:3:12","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10826:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10841:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10826:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2860,"nodeType":"IfStatement","src":"10822:99:12","trueBody":{"id":2859,"nodeType":"Block","src":"10844:77:12","statements":[{"expression":{"id":2853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2851,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2837,"src":"10862:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10872:3:12","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10862:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2854,"nodeType":"ExpressionStatement","src":"10862:13:12"},{"expression":{"id":2857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2855,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2843,"src":"10893:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":2856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10903:3:12","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10893:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2858,"nodeType":"ExpressionStatement","src":"10893:13:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2861,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2837,"src":"10938:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10947:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10938:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10952:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10938:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2875,"nodeType":"IfStatement","src":"10934:96:12","trueBody":{"id":2874,"nodeType":"Block","src":"10955:75:12","statements":[{"expression":{"id":2868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2866,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2837,"src":"10973:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10983:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10973:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2869,"nodeType":"ExpressionStatement","src":"10973:12:12"},{"expression":{"id":2872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2870,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2843,"src":"11003:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11013:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11003:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2873,"nodeType":"ExpressionStatement","src":"11003:12:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2876,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2837,"src":"11047:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11056:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11047:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11061:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11047:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2890,"nodeType":"IfStatement","src":"11043:96:12","trueBody":{"id":2889,"nodeType":"Block","src":"11064:75:12","statements":[{"expression":{"id":2883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2881,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2837,"src":"11082:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11092:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11082:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2884,"nodeType":"ExpressionStatement","src":"11082:12:12"},{"expression":{"id":2887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2885,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2843,"src":"11112:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11122:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11112:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2888,"nodeType":"ExpressionStatement","src":"11112:12:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2891,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2837,"src":"11156:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11165:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11156:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11170:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11156:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2905,"nodeType":"IfStatement","src":"11152:96:12","trueBody":{"id":2904,"nodeType":"Block","src":"11173:75:12","statements":[{"expression":{"id":2898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2896,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2837,"src":"11191:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11201:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11191:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2899,"nodeType":"ExpressionStatement","src":"11191:12:12"},{"expression":{"id":2902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2900,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2843,"src":"11221:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11231:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11221:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2903,"nodeType":"ExpressionStatement","src":"11221:12:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2906,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2837,"src":"11265:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11274:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11265:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11278:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11265:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2920,"nodeType":"IfStatement","src":"11261:93:12","trueBody":{"id":2919,"nodeType":"Block","src":"11281:73:12","statements":[{"expression":{"id":2913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2911,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2837,"src":"11299:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":2912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11309:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11299:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2914,"nodeType":"ExpressionStatement","src":"11299:11:12"},{"expression":{"id":2917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2915,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2843,"src":"11328:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11338:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11328:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2918,"nodeType":"ExpressionStatement","src":"11328:11:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2921,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2837,"src":"11371:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":2922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11380:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11371:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11384:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11371:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2935,"nodeType":"IfStatement","src":"11367:93:12","trueBody":{"id":2934,"nodeType":"Block","src":"11387:73:12","statements":[{"expression":{"id":2928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2926,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2837,"src":"11405:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11415:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11405:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2929,"nodeType":"ExpressionStatement","src":"11405:11:12"},{"expression":{"id":2932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2930,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2843,"src":"11434:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11444:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11434:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2933,"nodeType":"ExpressionStatement","src":"11434:11:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2936,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2837,"src":"11477:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":2937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11486:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11477:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11490:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11477:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2950,"nodeType":"IfStatement","src":"11473:93:12","trueBody":{"id":2949,"nodeType":"Block","src":"11493:73:12","statements":[{"expression":{"id":2943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2941,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2837,"src":"11511:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":2942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11521:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11511:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2944,"nodeType":"ExpressionStatement","src":"11511:11:12"},{"expression":{"id":2947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2945,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2843,"src":"11540:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11550:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11540:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2948,"nodeType":"ExpressionStatement","src":"11540:11:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2951,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2837,"src":"11583:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11592:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11583:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11596:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11583:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2961,"nodeType":"IfStatement","src":"11579:64:12","trueBody":{"id":2960,"nodeType":"Block","src":"11599:44:12","statements":[{"expression":{"id":2958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2956,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2843,"src":"11617:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11627:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11617:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2959,"nodeType":"ExpressionStatement","src":"11617:11:12"}]}}]},{"expression":{"id":2963,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2843,"src":"11669:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2841,"id":2964,"nodeType":"Return","src":"11662:13:12"}]},"documentation":{"id":2835,"nodeType":"StructuredDocumentation","src":"10575:119:12","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":2966,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"10708:4:12","nodeType":"FunctionDefinition","parameters":{"id":2838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2837,"mutability":"mutable","name":"value","nameLocation":"10721:5:12","nodeType":"VariableDeclaration","scope":2966,"src":"10713:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2836,"name":"uint256","nodeType":"ElementaryTypeName","src":"10713:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10712:15:12"},"returnParameters":{"id":2841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2840,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2966,"src":"10751:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2839,"name":"uint256","nodeType":"ElementaryTypeName","src":"10751:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10750:9:12"},"scope":3310,"src":"10699:983:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3000,"nodeType":"Block","src":"11915:168:12","statements":[{"id":2999,"nodeType":"UncheckedBlock","src":"11925:152:12","statements":[{"assignments":[2978],"declarations":[{"constant":false,"id":2978,"mutability":"mutable","name":"result","nameLocation":"11957:6:12","nodeType":"VariableDeclaration","scope":2999,"src":"11949:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2977,"name":"uint256","nodeType":"ElementaryTypeName","src":"11949:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2982,"initialValue":{"arguments":[{"id":2980,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2969,"src":"11971:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2979,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2966,3001],"referencedDeclaration":2966,"src":"11966:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11966:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11949:28:12"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2983,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2978,"src":"11998:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2985,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2972,"src":"12025:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2267","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2267","typeString":"enum Math.Rounding"}],"id":2984,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3309,"src":"12008:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2267_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12008:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12038:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":2988,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2978,"src":"12043:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2990,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2969,"src":"12052:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12008:49:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12064:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12008:57:12","trueExpression":{"hexValue":"31","id":2993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12060:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2996,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12007:59:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11998:68:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2976,"id":2998,"nodeType":"Return","src":"11991:75:12"}]}]},"documentation":{"id":2967,"nodeType":"StructuredDocumentation","src":"11688:142:12","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3001,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"11844:4:12","nodeType":"FunctionDefinition","parameters":{"id":2973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2969,"mutability":"mutable","name":"value","nameLocation":"11857:5:12","nodeType":"VariableDeclaration","scope":3001,"src":"11849:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2968,"name":"uint256","nodeType":"ElementaryTypeName","src":"11849:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2972,"mutability":"mutable","name":"rounding","nameLocation":"11873:8:12","nodeType":"VariableDeclaration","scope":3001,"src":"11864:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2267","typeString":"enum Math.Rounding"},"typeName":{"id":2971,"nodeType":"UserDefinedTypeName","pathNode":{"id":2970,"name":"Rounding","nameLocations":["11864:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":2267,"src":"11864:8:12"},"referencedDeclaration":2267,"src":"11864:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2267","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11848:34:12"},"returnParameters":{"id":2976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2975,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3001,"src":"11906:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2974,"name":"uint256","nodeType":"ElementaryTypeName","src":"11906:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11905:9:12"},"scope":3310,"src":"11835:248:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3129,"nodeType":"Block","src":"12276:854:12","statements":[{"assignments":[3010],"declarations":[{"constant":false,"id":3010,"mutability":"mutable","name":"result","nameLocation":"12294:6:12","nodeType":"VariableDeclaration","scope":3129,"src":"12286:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3009,"name":"uint256","nodeType":"ElementaryTypeName","src":"12286:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3012,"initialValue":{"hexValue":"30","id":3011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12303:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12286:18:12"},{"id":3126,"nodeType":"UncheckedBlock","src":"12314:787:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3013,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"12342:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12351:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12357:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12351:8:12","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12342:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3029,"nodeType":"IfStatement","src":"12338:103:12","trueBody":{"id":3028,"nodeType":"Block","src":"12361:80:12","statements":[{"expression":{"id":3022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3018,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"12379:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3021,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12388:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12394:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12388:8:12","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12379:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3023,"nodeType":"ExpressionStatement","src":"12379:17:12"},{"expression":{"id":3026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3024,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"12414:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12424:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12414:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3027,"nodeType":"ExpressionStatement","src":"12414:12:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3030,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"12458:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3033,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12467:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12473:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12467:8:12","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12458:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3046,"nodeType":"IfStatement","src":"12454:103:12","trueBody":{"id":3045,"nodeType":"Block","src":"12477:80:12","statements":[{"expression":{"id":3039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3035,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"12495:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12504:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12510:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12504:8:12","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12495:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3040,"nodeType":"ExpressionStatement","src":"12495:17:12"},{"expression":{"id":3043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3041,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"12530:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12540:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12530:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3044,"nodeType":"ExpressionStatement","src":"12530:12:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3047,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"12574:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3050,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12583:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12589:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12583:8:12","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12574:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3063,"nodeType":"IfStatement","src":"12570:103:12","trueBody":{"id":3062,"nodeType":"Block","src":"12593:80:12","statements":[{"expression":{"id":3056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3052,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"12611:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3055,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12620:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12626:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12620:8:12","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12611:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3057,"nodeType":"ExpressionStatement","src":"12611:17:12"},{"expression":{"id":3060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3058,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"12646:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12656:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12646:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3061,"nodeType":"ExpressionStatement","src":"12646:12:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3064,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"12690:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3067,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12699:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12705:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12699:7:12","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12690:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3080,"nodeType":"IfStatement","src":"12686:100:12","trueBody":{"id":3079,"nodeType":"Block","src":"12708:78:12","statements":[{"expression":{"id":3073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3069,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"12726:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12735:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12741:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12735:7:12","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12726:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3074,"nodeType":"ExpressionStatement","src":"12726:16:12"},{"expression":{"id":3077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3075,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"12760:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12770:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12760:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3078,"nodeType":"ExpressionStatement","src":"12760:11:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3081,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"12803:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3084,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12812:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12818:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12812:7:12","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12803:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3097,"nodeType":"IfStatement","src":"12799:100:12","trueBody":{"id":3096,"nodeType":"Block","src":"12821:78:12","statements":[{"expression":{"id":3090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3086,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"12839:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12848:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12854:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12848:7:12","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12839:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3091,"nodeType":"ExpressionStatement","src":"12839:16:12"},{"expression":{"id":3094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3092,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"12873:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12883:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12873:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3095,"nodeType":"ExpressionStatement","src":"12873:11:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3098,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"12916:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3101,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12925:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12931:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12925:7:12","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12916:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3114,"nodeType":"IfStatement","src":"12912:100:12","trueBody":{"id":3113,"nodeType":"Block","src":"12934:78:12","statements":[{"expression":{"id":3107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3103,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"12952:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12961:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12967:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12961:7:12","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12952:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3108,"nodeType":"ExpressionStatement","src":"12952:16:12"},{"expression":{"id":3111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3109,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"12986:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12996:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12986:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3112,"nodeType":"ExpressionStatement","src":"12986:11:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3115,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"13029:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":3118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13038:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":3117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13044:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13038:7:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"13029:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3125,"nodeType":"IfStatement","src":"13025:66:12","trueBody":{"id":3124,"nodeType":"Block","src":"13047:44:12","statements":[{"expression":{"id":3122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3120,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"13065:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13075:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13065:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3123,"nodeType":"ExpressionStatement","src":"13065:11:12"}]}}]},{"expression":{"id":3127,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"13117:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3008,"id":3128,"nodeType":"Return","src":"13110:13:12"}]},"documentation":{"id":3002,"nodeType":"StructuredDocumentation","src":"12089:120:12","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":3130,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"12223:5:12","nodeType":"FunctionDefinition","parameters":{"id":3005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3004,"mutability":"mutable","name":"value","nameLocation":"12237:5:12","nodeType":"VariableDeclaration","scope":3130,"src":"12229:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3003,"name":"uint256","nodeType":"ElementaryTypeName","src":"12229:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12228:15:12"},"returnParameters":{"id":3008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3007,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3130,"src":"12267:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3006,"name":"uint256","nodeType":"ElementaryTypeName","src":"12267:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12266:9:12"},"scope":3310,"src":"12214:916:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3164,"nodeType":"Block","src":"13365:170:12","statements":[{"id":3163,"nodeType":"UncheckedBlock","src":"13375:154:12","statements":[{"assignments":[3142],"declarations":[{"constant":false,"id":3142,"mutability":"mutable","name":"result","nameLocation":"13407:6:12","nodeType":"VariableDeclaration","scope":3163,"src":"13399:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3141,"name":"uint256","nodeType":"ElementaryTypeName","src":"13399:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3146,"initialValue":{"arguments":[{"id":3144,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3133,"src":"13422:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3143,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[3130,3165],"referencedDeclaration":3130,"src":"13416:5:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13416:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13399:29:12"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3147,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3142,"src":"13449:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3149,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3136,"src":"13476:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2267","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2267","typeString":"enum Math.Rounding"}],"id":3148,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3309,"src":"13459:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2267_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13459:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13489:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":3152,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3142,"src":"13495:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3154,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3133,"src":"13504:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:20:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13459:50:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13516:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"13459:58:12","trueExpression":{"hexValue":"31","id":3157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13512:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3160,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13458:60:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13449:69:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3140,"id":3162,"nodeType":"Return","src":"13442:76:12"}]}]},"documentation":{"id":3131,"nodeType":"StructuredDocumentation","src":"13136:143:12","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3165,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"13293:5:12","nodeType":"FunctionDefinition","parameters":{"id":3137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3133,"mutability":"mutable","name":"value","nameLocation":"13307:5:12","nodeType":"VariableDeclaration","scope":3165,"src":"13299:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3132,"name":"uint256","nodeType":"ElementaryTypeName","src":"13299:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3136,"mutability":"mutable","name":"rounding","nameLocation":"13323:8:12","nodeType":"VariableDeclaration","scope":3165,"src":"13314:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2267","typeString":"enum Math.Rounding"},"typeName":{"id":3135,"nodeType":"UserDefinedTypeName","pathNode":{"id":3134,"name":"Rounding","nameLocations":["13314:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":2267,"src":"13314:8:12"},"referencedDeclaration":2267,"src":"13314:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2267","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"13298:34:12"},"returnParameters":{"id":3140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3139,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3165,"src":"13356:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3138,"name":"uint256","nodeType":"ElementaryTypeName","src":"13356:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13355:9:12"},"scope":3310,"src":"13284:251:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3251,"nodeType":"Block","src":"13855:600:12","statements":[{"assignments":[3174],"declarations":[{"constant":false,"id":3174,"mutability":"mutable","name":"result","nameLocation":"13873:6:12","nodeType":"VariableDeclaration","scope":3251,"src":"13865:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3173,"name":"uint256","nodeType":"ElementaryTypeName","src":"13865:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3176,"initialValue":{"hexValue":"30","id":3175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13882:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13865:18:12"},{"id":3248,"nodeType":"UncheckedBlock","src":"13893:533:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3177,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3168,"src":"13921:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13930:3:12","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13921:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13936:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13921:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3191,"nodeType":"IfStatement","src":"13917:98:12","trueBody":{"id":3190,"nodeType":"Block","src":"13939:76:12","statements":[{"expression":{"id":3184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3182,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3168,"src":"13957:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13967:3:12","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13957:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3185,"nodeType":"ExpressionStatement","src":"13957:13:12"},{"expression":{"id":3188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3186,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3174,"src":"13988:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13998:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13988:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3189,"nodeType":"ExpressionStatement","src":"13988:12:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3192,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3168,"src":"14032:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14041:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14032:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14046:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14032:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3206,"nodeType":"IfStatement","src":"14028:95:12","trueBody":{"id":3205,"nodeType":"Block","src":"14049:74:12","statements":[{"expression":{"id":3199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3197,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3168,"src":"14067:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14077:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14067:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3200,"nodeType":"ExpressionStatement","src":"14067:12:12"},{"expression":{"id":3203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3201,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3174,"src":"14097:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14107:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14097:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3204,"nodeType":"ExpressionStatement","src":"14097:11:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3207,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3168,"src":"14140:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14149:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14140:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14154:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14140:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3221,"nodeType":"IfStatement","src":"14136:95:12","trueBody":{"id":3220,"nodeType":"Block","src":"14157:74:12","statements":[{"expression":{"id":3214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3212,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3168,"src":"14175:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14185:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14175:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3215,"nodeType":"ExpressionStatement","src":"14175:12:12"},{"expression":{"id":3218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3216,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3174,"src":"14205:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14215:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"14205:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3219,"nodeType":"ExpressionStatement","src":"14205:11:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3222,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3168,"src":"14248:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14257:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14248:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14262:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14248:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3236,"nodeType":"IfStatement","src":"14244:95:12","trueBody":{"id":3235,"nodeType":"Block","src":"14265:74:12","statements":[{"expression":{"id":3229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3227,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3168,"src":"14283:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14293:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14283:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3230,"nodeType":"ExpressionStatement","src":"14283:12:12"},{"expression":{"id":3233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3231,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3174,"src":"14313:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14323:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"14313:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3234,"nodeType":"ExpressionStatement","src":"14313:11:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3237,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3168,"src":"14356:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14365:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14356:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14369:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14356:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3247,"nodeType":"IfStatement","src":"14352:64:12","trueBody":{"id":3246,"nodeType":"Block","src":"14372:44:12","statements":[{"expression":{"id":3244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3242,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3174,"src":"14390:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14400:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14390:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3245,"nodeType":"ExpressionStatement","src":"14390:11:12"}]}}]},{"expression":{"id":3249,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3174,"src":"14442:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3172,"id":3250,"nodeType":"Return","src":"14435:13:12"}]},"documentation":{"id":3166,"nodeType":"StructuredDocumentation","src":"13541:246:12","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":3252,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"13801:6:12","nodeType":"FunctionDefinition","parameters":{"id":3169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3168,"mutability":"mutable","name":"value","nameLocation":"13816:5:12","nodeType":"VariableDeclaration","scope":3252,"src":"13808:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3167,"name":"uint256","nodeType":"ElementaryTypeName","src":"13808:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13807:15:12"},"returnParameters":{"id":3172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3171,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3252,"src":"13846:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3170,"name":"uint256","nodeType":"ElementaryTypeName","src":"13846:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13845:9:12"},"scope":3310,"src":"13792:663:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3289,"nodeType":"Block","src":"14692:177:12","statements":[{"id":3288,"nodeType":"UncheckedBlock","src":"14702:161:12","statements":[{"assignments":[3264],"declarations":[{"constant":false,"id":3264,"mutability":"mutable","name":"result","nameLocation":"14734:6:12","nodeType":"VariableDeclaration","scope":3288,"src":"14726:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3263,"name":"uint256","nodeType":"ElementaryTypeName","src":"14726:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3268,"initialValue":{"arguments":[{"id":3266,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3255,"src":"14750:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3265,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[3252,3290],"referencedDeclaration":3252,"src":"14743:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14743:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14726:30:12"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3269,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"14777:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3271,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3258,"src":"14804:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2267","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2267","typeString":"enum Math.Rounding"}],"id":3270,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3309,"src":"14787:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2267_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14787:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14817:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3274,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"14823:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":3275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14833:1:12","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"14823:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3277,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14822:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3279,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3255,"src":"14838:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:26:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14787:56:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14850:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"14787:64:12","trueExpression":{"hexValue":"31","id":3282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14846:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3285,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14786:66:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"14777:75:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3262,"id":3287,"nodeType":"Return","src":"14770:82:12"}]}]},"documentation":{"id":3253,"nodeType":"StructuredDocumentation","src":"14461:144:12","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3290,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"14619:6:12","nodeType":"FunctionDefinition","parameters":{"id":3259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3255,"mutability":"mutable","name":"value","nameLocation":"14634:5:12","nodeType":"VariableDeclaration","scope":3290,"src":"14626:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3254,"name":"uint256","nodeType":"ElementaryTypeName","src":"14626:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3258,"mutability":"mutable","name":"rounding","nameLocation":"14650:8:12","nodeType":"VariableDeclaration","scope":3290,"src":"14641:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2267","typeString":"enum Math.Rounding"},"typeName":{"id":3257,"nodeType":"UserDefinedTypeName","pathNode":{"id":3256,"name":"Rounding","nameLocations":["14641:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":2267,"src":"14641:8:12"},"referencedDeclaration":2267,"src":"14641:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2267","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"14625:34:12"},"returnParameters":{"id":3262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3261,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3290,"src":"14683:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3260,"name":"uint256","nodeType":"ElementaryTypeName","src":"14683:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14682:9:12"},"scope":3310,"src":"14610:259:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3308,"nodeType":"Block","src":"15067:48:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3301,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3294,"src":"15090:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2267","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2267","typeString":"enum Math.Rounding"}],"id":3300,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15084:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3299,"name":"uint8","nodeType":"ElementaryTypeName","src":"15084:5:12","typeDescriptions":{}}},"id":3302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15084:15:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":3303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15102:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15084:19:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":3305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15107:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15084:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3298,"id":3307,"nodeType":"Return","src":"15077:31:12"}]},"documentation":{"id":3291,"nodeType":"StructuredDocumentation","src":"14875:113:12","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":3309,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"15002:16:12","nodeType":"FunctionDefinition","parameters":{"id":3295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3294,"mutability":"mutable","name":"rounding","nameLocation":"15028:8:12","nodeType":"VariableDeclaration","scope":3309,"src":"15019:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2267","typeString":"enum Math.Rounding"},"typeName":{"id":3293,"nodeType":"UserDefinedTypeName","pathNode":{"id":3292,"name":"Rounding","nameLocations":["15019:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":2267,"src":"15019:8:12"},"referencedDeclaration":2267,"src":"15019:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2267","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"15018:19:12"},"returnParameters":{"id":3298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3297,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3309,"src":"15061:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3296,"name":"bool","nodeType":"ElementaryTypeName","src":"15061:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15060:6:12"},"scope":3310,"src":"14993:122:12","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3311,"src":"203:14914:12","usedErrors":[2262],"usedEvents":[]}],"src":"103:15015:12"},"id":12},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[3415]},"id":3416,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3312,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":3313,"nodeType":"StructuredDocumentation","src":"135:80:13","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3415,"linearizedBaseContracts":[3415],"name":"SignedMath","nameLocation":"224:10:13","nodeType":"ContractDefinition","nodes":[{"body":{"id":3330,"nodeType":"Block","src":"376:37:13","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3323,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3316,"src":"393:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3324,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"397:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"393:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3327,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"405:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"393:13:13","trueExpression":{"id":3326,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3316,"src":"401:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3322,"id":3329,"nodeType":"Return","src":"386:20:13"}]},"documentation":{"id":3314,"nodeType":"StructuredDocumentation","src":"241:66:13","text":" @dev Returns the largest of two signed numbers."},"id":3331,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"321:3:13","nodeType":"FunctionDefinition","parameters":{"id":3319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3316,"mutability":"mutable","name":"a","nameLocation":"332:1:13","nodeType":"VariableDeclaration","scope":3331,"src":"325:8:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3315,"name":"int256","nodeType":"ElementaryTypeName","src":"325:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3318,"mutability":"mutable","name":"b","nameLocation":"342:1:13","nodeType":"VariableDeclaration","scope":3331,"src":"335:8:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3317,"name":"int256","nodeType":"ElementaryTypeName","src":"335:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"324:20:13"},"returnParameters":{"id":3322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3321,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3331,"src":"368:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3320,"name":"int256","nodeType":"ElementaryTypeName","src":"368:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"367:8:13"},"scope":3415,"src":"312:101:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3348,"nodeType":"Block","src":"555:37:13","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3341,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3334,"src":"572:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3342,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3336,"src":"576:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"572:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3345,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3336,"src":"584:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"572:13:13","trueExpression":{"id":3344,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3334,"src":"580:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3340,"id":3347,"nodeType":"Return","src":"565:20:13"}]},"documentation":{"id":3332,"nodeType":"StructuredDocumentation","src":"419:67:13","text":" @dev Returns the smallest of two signed numbers."},"id":3349,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"500:3:13","nodeType":"FunctionDefinition","parameters":{"id":3337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3334,"mutability":"mutable","name":"a","nameLocation":"511:1:13","nodeType":"VariableDeclaration","scope":3349,"src":"504:8:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3333,"name":"int256","nodeType":"ElementaryTypeName","src":"504:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3336,"mutability":"mutable","name":"b","nameLocation":"521:1:13","nodeType":"VariableDeclaration","scope":3349,"src":"514:8:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3335,"name":"int256","nodeType":"ElementaryTypeName","src":"514:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"503:20:13"},"returnParameters":{"id":3340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3339,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3349,"src":"547:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3338,"name":"int256","nodeType":"ElementaryTypeName","src":"547:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"546:8:13"},"scope":3415,"src":"491:101:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3392,"nodeType":"Block","src":"797:162:13","statements":[{"assignments":[3360],"declarations":[{"constant":false,"id":3360,"mutability":"mutable","name":"x","nameLocation":"866:1:13","nodeType":"VariableDeclaration","scope":3392,"src":"859:8:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3359,"name":"int256","nodeType":"ElementaryTypeName","src":"859:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3373,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3361,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"871:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3362,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3354,"src":"875:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"871:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3364,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"870:7:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3365,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"882:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3366,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3354,"src":"886:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"882:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3368,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"881:7:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"892:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"881:12:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3371,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:14:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:24:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"859:35:13"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3374,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3360,"src":"911:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3379,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3360,"src":"931:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"923:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3377,"name":"uint256","nodeType":"ElementaryTypeName","src":"923:7:13","typeDescriptions":{}}},"id":3380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"923:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"937:3:13","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"923:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3376,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"916:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3375,"name":"int256","nodeType":"ElementaryTypeName","src":"916:6:13","typeDescriptions":{}}},"id":3383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3384,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"945:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3385,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3354,"src":"949:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"945:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3387,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"944:7:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"916:35:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3389,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"915:37:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"911:41:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3358,"id":3391,"nodeType":"Return","src":"904:48:13"}]},"documentation":{"id":3350,"nodeType":"StructuredDocumentation","src":"598:126:13","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":3393,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"738:7:13","nodeType":"FunctionDefinition","parameters":{"id":3355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3352,"mutability":"mutable","name":"a","nameLocation":"753:1:13","nodeType":"VariableDeclaration","scope":3393,"src":"746:8:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3351,"name":"int256","nodeType":"ElementaryTypeName","src":"746:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3354,"mutability":"mutable","name":"b","nameLocation":"763:1:13","nodeType":"VariableDeclaration","scope":3393,"src":"756:8:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3353,"name":"int256","nodeType":"ElementaryTypeName","src":"756:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"745:20:13"},"returnParameters":{"id":3358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3357,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3393,"src":"789:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3356,"name":"int256","nodeType":"ElementaryTypeName","src":"789:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"788:8:13"},"scope":3415,"src":"729:230:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3413,"nodeType":"Block","src":"1103:158:13","statements":[{"id":3412,"nodeType":"UncheckedBlock","src":"1113:142:13","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3403,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3396,"src":"1228:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":3404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1233:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1228:6:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1241:2:13","subExpression":{"id":3407,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3396,"src":"1242:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1228:15:13","trueExpression":{"id":3406,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3396,"src":"1237:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1220:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3401,"name":"uint256","nodeType":"ElementaryTypeName","src":"1220:7:13","typeDescriptions":{}}},"id":3410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1220:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3400,"id":3411,"nodeType":"Return","src":"1213:31:13"}]}]},"documentation":{"id":3394,"nodeType":"StructuredDocumentation","src":"965:78:13","text":" @dev Returns the absolute unsigned value of a signed value."},"id":3414,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1057:3:13","nodeType":"FunctionDefinition","parameters":{"id":3397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3396,"mutability":"mutable","name":"n","nameLocation":"1068:1:13","nodeType":"VariableDeclaration","scope":3414,"src":"1061:8:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3395,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1060:10:13"},"returnParameters":{"id":3400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3399,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3414,"src":"1094:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3398,"name":"uint256","nodeType":"ElementaryTypeName","src":"1094:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1093:9:13"},"scope":3415,"src":"1048:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3416,"src":"216:1047:13","usedErrors":[],"usedEvents":[]}],"src":"109:1155:13"},"id":13},"contracts/MetaSum.sol":{"ast":{"absolutePath":"contracts/MetaSum.sol","exportedSymbols":{"Address":[927],"Context":[957],"ECDSA":[1955],"EIP712":[2182],"ERC2771Context":[167],"ERC2771Forwarder":[674],"MetaSum":[3447],"Nonces":[1025]},"id":3448,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3417,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:14"},{"absolutePath":"@openzeppelin/contracts/metatx/ERC2771Context.sol","file":"@openzeppelin/contracts/metatx/ERC2771Context.sol","id":3418,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3448,"sourceUnit":168,"src":"61:59:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/metatx/ERC2771Forwarder.sol","file":"@openzeppelin/contracts/metatx/ERC2771Forwarder.sol","id":3419,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3448,"sourceUnit":675,"src":"122:61:14","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3420,"name":"ERC2771Context","nameLocations":["207:14:14"],"nodeType":"IdentifierPath","referencedDeclaration":167,"src":"207:14:14"},"id":3421,"nodeType":"InheritanceSpecifier","src":"207:14:14"}],"canonicalName":"MetaSum","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3447,"linearizedBaseContracts":[3447,167,957],"name":"MetaSum","nameLocation":"196:7:14","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"853255cc","id":3423,"mutability":"mutable","name":"sum","nameLocation":"241:3:14","nodeType":"VariableDeclaration","scope":3447,"src":"229:15:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3422,"name":"uint","nodeType":"ElementaryTypeName","src":"229:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"body":{"id":3435,"nodeType":"Block","src":"376:2:14","statements":[]},"id":3436,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"arguments":[{"id":3431,"name":"forwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3426,"src":"364:9:14","typeDescriptions":{"typeIdentifier":"t_contract$_ERC2771Forwarder_$674","typeString":"contract ERC2771Forwarder"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC2771Forwarder_$674","typeString":"contract ERC2771Forwarder"}],"id":3430,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"356:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3429,"name":"address","nodeType":"ElementaryTypeName","src":"356:7:14","typeDescriptions":{}}},"id":3432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"356:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3433,"kind":"baseConstructorSpecifier","modifierName":{"id":3428,"name":"ERC2771Context","nameLocations":["341:14:14"],"nodeType":"IdentifierPath","referencedDeclaration":167,"src":"341:14:14"},"nodeType":"ModifierInvocation","src":"341:34:14"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3426,"mutability":"mutable","name":"forwarder","nameLocation":"292:9:14","nodeType":"VariableDeclaration","scope":3436,"src":"275:26:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ERC2771Forwarder_$674","typeString":"contract ERC2771Forwarder"},"typeName":{"id":3425,"nodeType":"UserDefinedTypeName","pathNode":{"id":3424,"name":"ERC2771Forwarder","nameLocations":["275:16:14"],"nodeType":"IdentifierPath","referencedDeclaration":674,"src":"275:16:14"},"referencedDeclaration":674,"src":"275:16:14","typeDescriptions":{"typeIdentifier":"t_contract$_ERC2771Forwarder_$674","typeString":"contract ERC2771Forwarder"}},"visibility":"internal"}],"src":"264:76:14"},"returnParameters":{"id":3434,"nodeType":"ParameterList","parameters":[],"src":"376:0:14"},"scope":3447,"src":"253:125:14","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3445,"nodeType":"Block","src":"415:27:14","statements":[{"expression":{"id":3443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3441,"name":"sum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3423,"src":"426:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3442,"name":"_a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3438,"src":"432:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"426:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3444,"nodeType":"ExpressionStatement","src":"426:8:14"}]},"functionSelector":"1003e2d2","id":3446,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"395:3:14","nodeType":"FunctionDefinition","parameters":{"id":3439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3438,"mutability":"mutable","name":"_a","nameLocation":"404:2:14","nodeType":"VariableDeclaration","scope":3446,"src":"399:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3437,"name":"uint","nodeType":"ElementaryTypeName","src":"399:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"398:9:14"},"returnParameters":{"id":3440,"nodeType":"ParameterList","parameters":[],"src":"415:0:14"},"scope":3447,"src":"386:56:14","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":3448,"src":"187:258:14","usedErrors":[],"usedEvents":[]}],"src":"33:414:14"},"id":14},"contracts/Sum.sol":{"ast":{"absolutePath":"contracts/Sum.sol","exportedSymbols":{"Sum":[3462]},"id":3463,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3449,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"33:24:15"},{"abstract":false,"baseContracts":[],"canonicalName":"Sum","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3462,"linearizedBaseContracts":[3462],"name":"Sum","nameLocation":"70:3:15","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"853255cc","id":3451,"mutability":"mutable","name":"sum","nameLocation":"93:3:15","nodeType":"VariableDeclaration","scope":3462,"src":"81:15:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3450,"name":"uint","nodeType":"ElementaryTypeName","src":"81:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"body":{"id":3460,"nodeType":"Block","src":"134:27:15","statements":[{"expression":{"id":3458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3456,"name":"sum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3451,"src":"145:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3457,"name":"_a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3453,"src":"151:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"145:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3459,"nodeType":"ExpressionStatement","src":"145:8:15"}]},"functionSelector":"1003e2d2","id":3461,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"114:3:15","nodeType":"FunctionDefinition","parameters":{"id":3454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3453,"mutability":"mutable","name":"_a","nameLocation":"123:2:15","nodeType":"VariableDeclaration","scope":3461,"src":"118:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3452,"name":"uint","nodeType":"ElementaryTypeName","src":"118:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"117:9:15"},"returnParameters":{"id":3455,"nodeType":"ParameterList","parameters":[],"src":"134:0:15"},"scope":3462,"src":"105:56:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":3463,"src":"61:103:15","usedErrors":[],"usedEvents":[]}],"src":"33:133:15"},"id":15}},"contracts":{"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]}},\"version\":1}"}},"@openzeppelin/contracts/metatx/ERC2771Context.sol":{"ERC2771Context":{"abi":[{"inputs":[{"internalType":"address","name":"forwarder","type":"address"}],"name":"isTrustedForwarder","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"trustedForwarder","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"isTrustedForwarder(address)":"572b6c05","trustedForwarder()":"7da0a877"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Context variant with ERC2771 support. WARNING: Avoid using this pattern in contracts that rely in a specific calldata length as they'll be affected by any forwarder whose `msg.data` is suffixed with the `from` address according to the ERC2771 specification adding the address size in bytes (20) to the calldata size. An example of an unexpected behavior could be an unintended fallback (or another function) invocation while trying to invoke the `receive` function only accessible if `msg.data.length == 0`. WARNING: The usage of `delegatecall` in this contract is dangerous and may result in context corruption. Any forwarded request to this contract triggering a `delegatecall` to itself will result in an invalid {_msgSender} recovery.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"isTrustedForwarder(address)\":{\"details\":\"Indicates whether any particular address is the trusted forwarder.\"},\"trustedForwarder()\":{\"details\":\"Returns the address of the trusted forwarder.\"}},\"stateVariables\":{\"_trustedForwarder\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/metatx/ERC2771Context.sol\":\"ERC2771Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/metatx/ERC2771Context.sol\":{\"keccak256\":\"0x98256cf37b71a69b2f5a8a6fe975ea03590dff703102bd141a830f94e8adebf6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6251fe1f6a1e45e6d619d150c123afc88b8646b38ee26a136efa9a6988a31d3f\",\"dweb:/ipfs/QmeXDT85wSZdP31wkz3ah3KhponCiksJLP5o2LR5e1JxcK\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/metatx/ERC2771Forwarder.sol":{"ERC2771Forwarder":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressInsufficientBalance","type":"error"},{"inputs":[{"internalType":"uint48","name":"deadline","type":"uint48"}],"name":"ERC2771ForwarderExpiredRequest","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"from","type":"address"}],"name":"ERC2771ForwarderInvalidSigner","type":"error"},{"inputs":[{"internalType":"uint256","name":"requestedValue","type":"uint256"},{"internalType":"uint256","name":"msgValue","type":"uint256"}],"name":"ERC2771ForwarderMismatchedValue","type":"error"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"address","name":"forwarder","type":"address"}],"name":"ERC2771UntrustfulTarget","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"signer","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"bool","name":"success","type":"bool"}],"name":"ExecutedForwardRequest","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"gas","type":"uint256"},{"internalType":"uint48","name":"deadline","type":"uint48"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct ERC2771Forwarder.ForwardRequestData","name":"request","type":"tuple"}],"name":"execute","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"gas","type":"uint256"},{"internalType":"uint48","name":"deadline","type":"uint48"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct ERC2771Forwarder.ForwardRequestData[]","name":"requests","type":"tuple[]"},{"internalType":"address payable","name":"refundReceiver","type":"address"}],"name":"executeBatch","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"gas","type":"uint256"},{"internalType":"uint48","name":"deadline","type":"uint48"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct ERC2771Forwarder.ForwardRequestData","name":"request","type":"tuple"}],"name":"verify","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_2052":{"entryPoint":null,"id":2052,"parameterSlots":2,"returnSlots":0},"@_253":{"entryPoint":null,"id":253,"parameterSlots":1,"returnSlots":0},"@_buildDomainSeparator_2099":{"entryPoint":382,"id":2099,"parameterSlots":0,"returnSlots":1},"@getStringSlot_1329":{"entryPoint":584,"id":1329,"parameterSlots":1,"returnSlots":1},"@toShortStringWithFallback_1183":{"entryPoint":294,"id":1183,"parameterSlots":2,"returnSlots":1},"@toShortString_1085":{"entryPoint":475,"id":1085,"parameterSlots":1,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":871,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":946,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptr_fromMemory":{"entryPoint":997,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1992,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":1906,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":2119,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":1923,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":2009,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2184,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":742,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":594,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":773,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_bytes_memory_ptr":{"entryPoint":2231,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":1189,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":2220,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":1078,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2102,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1510,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":1972,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":1896,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1940,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1325,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1471,"id":null,"parameterSlots":2,"returnSlots":0},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32":{"entryPoint":2270,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":1345,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1665,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":827,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":1210,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1136,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1635,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":688,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":1335,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1603,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":1089,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":641,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":1385,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_bytes32":{"entryPoint":2247,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":614,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":619,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":609,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":604,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":624,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":1226,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1590,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1443,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":1239,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":1395,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":1438,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:11467:16","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:16","statements":[{"nodeType":"YulAssignment","src":"57:19:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:16","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:16"},"nodeType":"YulFunctionCall","src":"67:9:16"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:16"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:16","type":""}],"src":"7:75:16"},{"body":{"nodeType":"YulBlock","src":"177:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:16"},"nodeType":"YulFunctionCall","src":"187:12:16"},"nodeType":"YulExpressionStatement","src":"187:12:16"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:16"},{"body":{"nodeType":"YulBlock","src":"300:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:16"},"nodeType":"YulFunctionCall","src":"310:12:16"},"nodeType":"YulExpressionStatement","src":"310:12:16"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:16"},{"body":{"nodeType":"YulBlock","src":"423:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:16"},"nodeType":"YulFunctionCall","src":"433:12:16"},"nodeType":"YulExpressionStatement","src":"433:12:16"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:16"},{"body":{"nodeType":"YulBlock","src":"546:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:16"},"nodeType":"YulFunctionCall","src":"556:12:16"},"nodeType":"YulExpressionStatement","src":"556:12:16"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:16"},{"body":{"nodeType":"YulBlock","src":"628:54:16","statements":[{"nodeType":"YulAssignment","src":"638:38:16","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:16"},"nodeType":"YulFunctionCall","src":"652:14:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:16"},"nodeType":"YulFunctionCall","src":"668:7:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:16"},"nodeType":"YulFunctionCall","src":"648:28:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:16"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:16","type":""}],"src":"580:102:16"},{"body":{"nodeType":"YulBlock","src":"716:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:16"},"nodeType":"YulFunctionCall","src":"726:88:16"},"nodeType":"YulExpressionStatement","src":"726:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:16","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:16"},"nodeType":"YulFunctionCall","src":"823:15:16"},"nodeType":"YulExpressionStatement","src":"823:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:16"},"nodeType":"YulFunctionCall","src":"847:15:16"},"nodeType":"YulExpressionStatement","src":"847:15:16"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:16"},{"body":{"nodeType":"YulBlock","src":"917:238:16","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:16","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:16"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:16"},"nodeType":"YulFunctionCall","src":"957:27:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:16"},"nodeType":"YulFunctionCall","src":"945:40:16"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:16"},"nodeType":"YulFunctionCall","src":"1098:18:16"},"nodeType":"YulExpressionStatement","src":"1098:18:16"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:16"},"nodeType":"YulFunctionCall","src":"1036:34:16"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:16"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:16"},"nodeType":"YulFunctionCall","src":"1072:22:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:16"},"nodeType":"YulFunctionCall","src":"1033:62:16"},"nodeType":"YulIf","src":"1030:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:16","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:16"},"nodeType":"YulFunctionCall","src":"1127:22:16"},"nodeType":"YulExpressionStatement","src":"1127:22:16"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:16","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:16","type":""}],"src":"874:281:16"},{"body":{"nodeType":"YulBlock","src":"1202:88:16","statements":[{"nodeType":"YulAssignment","src":"1212:30:16","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:16"},"nodeType":"YulFunctionCall","src":"1222:20:16"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:16"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:16"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:16"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:16"},"nodeType":"YulFunctionCall","src":"1251:33:16"},"nodeType":"YulExpressionStatement","src":"1251:33:16"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:16","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:16","type":""}],"src":"1161:129:16"},{"body":{"nodeType":"YulBlock","src":"1363:241:16","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:16"},"nodeType":"YulFunctionCall","src":"1470:18:16"},"nodeType":"YulExpressionStatement","src":"1470:18:16"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:16"},"nodeType":"YulFunctionCall","src":"1437:30:16"},"nodeType":"YulIf","src":"1434:56:16"},{"nodeType":"YulAssignment","src":"1500:37:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:16"},"nodeType":"YulFunctionCall","src":"1508:29:16"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:16"}]},{"nodeType":"YulAssignment","src":"1574:23:16","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:16"},"nodeType":"YulFunctionCall","src":"1582:15:16"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:16"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:16","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:16","type":""}],"src":"1296:308:16"},{"body":{"nodeType":"YulBlock","src":"1672:184:16","statements":[{"nodeType":"YulVariableDeclaration","src":"1682:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"1691:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1686:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"1751:63:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1776:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"1781:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:16"},"nodeType":"YulFunctionCall","src":"1772:11:16"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1795:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"1800:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1791:3:16"},"nodeType":"YulFunctionCall","src":"1791:11:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1785:5:16"},"nodeType":"YulFunctionCall","src":"1785:18:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1765:6:16"},"nodeType":"YulFunctionCall","src":"1765:39:16"},"nodeType":"YulExpressionStatement","src":"1765:39:16"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1712:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"1715:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1709:2:16"},"nodeType":"YulFunctionCall","src":"1709:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1723:19:16","statements":[{"nodeType":"YulAssignment","src":"1725:15:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1734:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"1737:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1730:3:16"},"nodeType":"YulFunctionCall","src":"1730:10:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1725:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"1705:3:16","statements":[]},"src":"1701:113:16"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1834:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"1839:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1830:3:16"},"nodeType":"YulFunctionCall","src":"1830:16:16"},{"kind":"number","nodeType":"YulLiteral","src":"1848:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1823:6:16"},"nodeType":"YulFunctionCall","src":"1823:27:16"},"nodeType":"YulExpressionStatement","src":"1823:27:16"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1654:3:16","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1659:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"1664:6:16","type":""}],"src":"1610:246:16"},{"body":{"nodeType":"YulBlock","src":"1957:339:16","statements":[{"nodeType":"YulAssignment","src":"1967:75:16","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2034:6:16"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1992:41:16"},"nodeType":"YulFunctionCall","src":"1992:49:16"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1976:15:16"},"nodeType":"YulFunctionCall","src":"1976:66:16"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1967:5:16"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2058:5:16"},{"name":"length","nodeType":"YulIdentifier","src":"2065:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2051:6:16"},"nodeType":"YulFunctionCall","src":"2051:21:16"},"nodeType":"YulExpressionStatement","src":"2051:21:16"},{"nodeType":"YulVariableDeclaration","src":"2081:27:16","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2096:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"2103:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2092:3:16"},"nodeType":"YulFunctionCall","src":"2092:16:16"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2085:3:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"2146:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2148:77:16"},"nodeType":"YulFunctionCall","src":"2148:79:16"},"nodeType":"YulExpressionStatement","src":"2148:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2127:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"2132:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2123:3:16"},"nodeType":"YulFunctionCall","src":"2123:16:16"},{"name":"end","nodeType":"YulIdentifier","src":"2141:3:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2120:2:16"},"nodeType":"YulFunctionCall","src":"2120:25:16"},"nodeType":"YulIf","src":"2117:112:16"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2273:3:16"},{"name":"dst","nodeType":"YulIdentifier","src":"2278:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"2283:6:16"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2238:34:16"},"nodeType":"YulFunctionCall","src":"2238:52:16"},"nodeType":"YulExpressionStatement","src":"2238:52:16"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1930:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"1935:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"1943:3:16","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1951:5:16","type":""}],"src":"1862:434:16"},{"body":{"nodeType":"YulBlock","src":"2389:282:16","statements":[{"body":{"nodeType":"YulBlock","src":"2438:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2440:77:16"},"nodeType":"YulFunctionCall","src":"2440:79:16"},"nodeType":"YulExpressionStatement","src":"2440:79:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2417:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"2425:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2413:3:16"},"nodeType":"YulFunctionCall","src":"2413:17:16"},{"name":"end","nodeType":"YulIdentifier","src":"2432:3:16"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2409:3:16"},"nodeType":"YulFunctionCall","src":"2409:27:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2402:6:16"},"nodeType":"YulFunctionCall","src":"2402:35:16"},"nodeType":"YulIf","src":"2399:122:16"},{"nodeType":"YulVariableDeclaration","src":"2530:27:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2550:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2544:5:16"},"nodeType":"YulFunctionCall","src":"2544:13:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2534:6:16","type":""}]},{"nodeType":"YulAssignment","src":"2566:99:16","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2638:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"2646:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2634:3:16"},"nodeType":"YulFunctionCall","src":"2634:17:16"},{"name":"length","nodeType":"YulIdentifier","src":"2653:6:16"},{"name":"end","nodeType":"YulIdentifier","src":"2661:3:16"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2575:58:16"},"nodeType":"YulFunctionCall","src":"2575:90:16"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2566:5:16"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2367:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"2375:3:16","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2383:5:16","type":""}],"src":"2316:355:16"},{"body":{"nodeType":"YulBlock","src":"2764:437:16","statements":[{"body":{"nodeType":"YulBlock","src":"2810:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2812:77:16"},"nodeType":"YulFunctionCall","src":"2812:79:16"},"nodeType":"YulExpressionStatement","src":"2812:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2785:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"2794:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2781:3:16"},"nodeType":"YulFunctionCall","src":"2781:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"2806:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2777:3:16"},"nodeType":"YulFunctionCall","src":"2777:32:16"},"nodeType":"YulIf","src":"2774:119:16"},{"nodeType":"YulBlock","src":"2903:291:16","statements":[{"nodeType":"YulVariableDeclaration","src":"2918:38:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2942:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2953:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2938:3:16"},"nodeType":"YulFunctionCall","src":"2938:17:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2932:5:16"},"nodeType":"YulFunctionCall","src":"2932:24:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2922:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"3003:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3005:77:16"},"nodeType":"YulFunctionCall","src":"3005:79:16"},"nodeType":"YulExpressionStatement","src":"3005:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2975:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"2983:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2972:2:16"},"nodeType":"YulFunctionCall","src":"2972:30:16"},"nodeType":"YulIf","src":"2969:117:16"},{"nodeType":"YulAssignment","src":"3100:84:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3156:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"3167:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3152:3:16"},"nodeType":"YulFunctionCall","src":"3152:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3176:7:16"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3110:41:16"},"nodeType":"YulFunctionCall","src":"3110:74:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3100:6:16"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2734:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2745:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2757:6:16","type":""}],"src":"2677:524:16"},{"body":{"nodeType":"YulBlock","src":"3266:40:16","statements":[{"nodeType":"YulAssignment","src":"3277:22:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3293:5:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3287:5:16"},"nodeType":"YulFunctionCall","src":"3287:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3277:6:16"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3249:5:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3259:6:16","type":""}],"src":"3207:99:16"},{"body":{"nodeType":"YulBlock","src":"3340:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3357:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3360:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3350:6:16"},"nodeType":"YulFunctionCall","src":"3350:88:16"},"nodeType":"YulExpressionStatement","src":"3350:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3454:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3457:4:16","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3447:6:16"},"nodeType":"YulFunctionCall","src":"3447:15:16"},"nodeType":"YulExpressionStatement","src":"3447:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3478:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3481:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3471:6:16"},"nodeType":"YulFunctionCall","src":"3471:15:16"},"nodeType":"YulExpressionStatement","src":"3471:15:16"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"3312:180:16"},{"body":{"nodeType":"YulBlock","src":"3549:269:16","statements":[{"nodeType":"YulAssignment","src":"3559:22:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3573:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"3579:1:16","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3569:3:16"},"nodeType":"YulFunctionCall","src":"3569:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3559:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"3590:38:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3620:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"3626:1:16","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3616:3:16"},"nodeType":"YulFunctionCall","src":"3616:12:16"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3594:18:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"3667:51:16","statements":[{"nodeType":"YulAssignment","src":"3681:27:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3695:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"3703:4:16","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3691:3:16"},"nodeType":"YulFunctionCall","src":"3691:17:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3681:6:16"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3647:18:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3640:6:16"},"nodeType":"YulFunctionCall","src":"3640:26:16"},"nodeType":"YulIf","src":"3637:81:16"},{"body":{"nodeType":"YulBlock","src":"3770:42:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"3784:16:16"},"nodeType":"YulFunctionCall","src":"3784:18:16"},"nodeType":"YulExpressionStatement","src":"3784:18:16"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3734:18:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3757:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"3765:2:16","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3754:2:16"},"nodeType":"YulFunctionCall","src":"3754:14:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3731:2:16"},"nodeType":"YulFunctionCall","src":"3731:38:16"},"nodeType":"YulIf","src":"3728:84:16"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3533:4:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3542:6:16","type":""}],"src":"3498:320:16"},{"body":{"nodeType":"YulBlock","src":"3878:87:16","statements":[{"nodeType":"YulAssignment","src":"3888:11:16","value":{"name":"ptr","nodeType":"YulIdentifier","src":"3896:3:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"3888:4:16"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3916:1:16","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"3919:3:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3909:6:16"},"nodeType":"YulFunctionCall","src":"3909:14:16"},"nodeType":"YulExpressionStatement","src":"3909:14:16"},{"nodeType":"YulAssignment","src":"3932:26:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3950:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3953:4:16","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3940:9:16"},"nodeType":"YulFunctionCall","src":"3940:18:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"3932:4:16"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"3865:3:16","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"3873:4:16","type":""}],"src":"3824:141:16"},{"body":{"nodeType":"YulBlock","src":"4015:49:16","statements":[{"nodeType":"YulAssignment","src":"4025:33:16","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4043:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"4050:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4039:3:16"},"nodeType":"YulFunctionCall","src":"4039:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"4055:2:16","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4035:3:16"},"nodeType":"YulFunctionCall","src":"4035:23:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4025:6:16"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3998:5:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4008:6:16","type":""}],"src":"3971:93:16"},{"body":{"nodeType":"YulBlock","src":"4123:54:16","statements":[{"nodeType":"YulAssignment","src":"4133:37:16","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"4158:4:16"},{"name":"value","nodeType":"YulIdentifier","src":"4164:5:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4154:3:16"},"nodeType":"YulFunctionCall","src":"4154:16:16"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"4133:8:16"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"4098:4:16","type":""},{"name":"value","nodeType":"YulTypedName","src":"4104:5:16","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"4114:8:16","type":""}],"src":"4070:107:16"},{"body":{"nodeType":"YulBlock","src":"4259:317:16","statements":[{"nodeType":"YulVariableDeclaration","src":"4269:35:16","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"4290:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"4302:1:16","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4286:3:16"},"nodeType":"YulFunctionCall","src":"4286:18:16"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"4273:9:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4313:109:16","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4344:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4355:66:16","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4325:18:16"},"nodeType":"YulFunctionCall","src":"4325:97:16"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"4317:4:16","type":""}]},{"nodeType":"YulAssignment","src":"4431:51:16","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4462:9:16"},{"name":"toInsert","nodeType":"YulIdentifier","src":"4473:8:16"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4443:18:16"},"nodeType":"YulFunctionCall","src":"4443:39:16"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"4431:8:16"}]},{"nodeType":"YulAssignment","src":"4491:30:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4504:5:16"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"4515:4:16"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4511:3:16"},"nodeType":"YulFunctionCall","src":"4511:9:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4500:3:16"},"nodeType":"YulFunctionCall","src":"4500:21:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4491:5:16"}]},{"nodeType":"YulAssignment","src":"4530:40:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4543:5:16"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"4554:8:16"},{"name":"mask","nodeType":"YulIdentifier","src":"4564:4:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4550:3:16"},"nodeType":"YulFunctionCall","src":"4550:19:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4540:2:16"},"nodeType":"YulFunctionCall","src":"4540:30:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4530:6:16"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4220:5:16","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"4227:10:16","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"4239:8:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4252:6:16","type":""}],"src":"4183:393:16"},{"body":{"nodeType":"YulBlock","src":"4627:32:16","statements":[{"nodeType":"YulAssignment","src":"4637:16:16","value":{"name":"value","nodeType":"YulIdentifier","src":"4648:5:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4637:7:16"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4609:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4619:7:16","type":""}],"src":"4582:77:16"},{"body":{"nodeType":"YulBlock","src":"4697:28:16","statements":[{"nodeType":"YulAssignment","src":"4707:12:16","value":{"name":"value","nodeType":"YulIdentifier","src":"4714:5:16"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"4707:3:16"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4683:5:16","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"4693:3:16","type":""}],"src":"4665:60:16"},{"body":{"nodeType":"YulBlock","src":"4791:82:16","statements":[{"nodeType":"YulAssignment","src":"4801:66:16","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4859:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4841:17:16"},"nodeType":"YulFunctionCall","src":"4841:24:16"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"4832:8:16"},"nodeType":"YulFunctionCall","src":"4832:34:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4814:17:16"},"nodeType":"YulFunctionCall","src":"4814:53:16"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"4801:9:16"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4771:5:16","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"4781:9:16","type":""}],"src":"4731:142:16"},{"body":{"nodeType":"YulBlock","src":"4926:28:16","statements":[{"nodeType":"YulAssignment","src":"4936:12:16","value":{"name":"value","nodeType":"YulIdentifier","src":"4943:5:16"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"4936:3:16"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4912:5:16","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"4922:3:16","type":""}],"src":"4879:75:16"},{"body":{"nodeType":"YulBlock","src":"5036:193:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5046:63:16","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"5101:7:16"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5070:30:16"},"nodeType":"YulFunctionCall","src":"5070:39:16"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"5050:16:16","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5125:4:16"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5165:4:16"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"5159:5:16"},"nodeType":"YulFunctionCall","src":"5159:11:16"},{"name":"offset","nodeType":"YulIdentifier","src":"5172:6:16"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"5204:16:16"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"5180:23:16"},"nodeType":"YulFunctionCall","src":"5180:41:16"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"5131:27:16"},"nodeType":"YulFunctionCall","src":"5131:91:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5118:6:16"},"nodeType":"YulFunctionCall","src":"5118:105:16"},"nodeType":"YulExpressionStatement","src":"5118:105:16"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5013:4:16","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5019:6:16","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"5027:7:16","type":""}],"src":"4960:269:16"},{"body":{"nodeType":"YulBlock","src":"5284:24:16","statements":[{"nodeType":"YulAssignment","src":"5294:8:16","value":{"kind":"number","nodeType":"YulLiteral","src":"5301:1:16","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5294:3:16"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5280:3:16","type":""}],"src":"5235:73:16"},{"body":{"nodeType":"YulBlock","src":"5367:136:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5377:46:16","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"5391:30:16"},"nodeType":"YulFunctionCall","src":"5391:32:16"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"5381:6:16","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5476:4:16"},{"name":"offset","nodeType":"YulIdentifier","src":"5482:6:16"},{"name":"zero_0","nodeType":"YulIdentifier","src":"5490:6:16"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5432:43:16"},"nodeType":"YulFunctionCall","src":"5432:65:16"},"nodeType":"YulExpressionStatement","src":"5432:65:16"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5353:4:16","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5359:6:16","type":""}],"src":"5314:189:16"},{"body":{"nodeType":"YulBlock","src":"5559:136:16","statements":[{"body":{"nodeType":"YulBlock","src":"5626:63:16","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5670:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"5677:1:16","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"5640:29:16"},"nodeType":"YulFunctionCall","src":"5640:39:16"},"nodeType":"YulExpressionStatement","src":"5640:39:16"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5579:5:16"},{"name":"end","nodeType":"YulIdentifier","src":"5586:3:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5576:2:16"},"nodeType":"YulFunctionCall","src":"5576:14:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5591:26:16","statements":[{"nodeType":"YulAssignment","src":"5593:22:16","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5606:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"5613:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5602:3:16"},"nodeType":"YulFunctionCall","src":"5602:13:16"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"5593:5:16"}]}]},"pre":{"nodeType":"YulBlock","src":"5573:2:16","statements":[]},"src":"5569:120:16"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"5547:5:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"5554:3:16","type":""}],"src":"5509:186:16"},{"body":{"nodeType":"YulBlock","src":"5780:464:16","statements":[{"body":{"nodeType":"YulBlock","src":"5806:431:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5820:54:16","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"5868:5:16"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"5836:31:16"},"nodeType":"YulFunctionCall","src":"5836:38:16"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"5824:8:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5887:63:16","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"5910:8:16"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"5938:10:16"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"5920:17:16"},"nodeType":"YulFunctionCall","src":"5920:29:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5906:3:16"},"nodeType":"YulFunctionCall","src":"5906:44:16"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"5891:11:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"6107:27:16","statements":[{"nodeType":"YulAssignment","src":"6109:23:16","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"6124:8:16"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6109:11:16"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6091:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"6103:2:16","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6088:2:16"},"nodeType":"YulFunctionCall","src":"6088:18:16"},"nodeType":"YulIf","src":"6085:49:16"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6176:11:16"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6193:8:16"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6221:3:16"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6203:17:16"},"nodeType":"YulFunctionCall","src":"6203:22:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6189:3:16"},"nodeType":"YulFunctionCall","src":"6189:37:16"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"6147:28:16"},"nodeType":"YulFunctionCall","src":"6147:80:16"},"nodeType":"YulExpressionStatement","src":"6147:80:16"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"5797:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"5802:2:16","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5794:2:16"},"nodeType":"YulFunctionCall","src":"5794:11:16"},"nodeType":"YulIf","src":"5791:446:16"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"5756:5:16","type":""},{"name":"len","nodeType":"YulTypedName","src":"5763:3:16","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"5768:10:16","type":""}],"src":"5701:543:16"},{"body":{"nodeType":"YulBlock","src":"6313:54:16","statements":[{"nodeType":"YulAssignment","src":"6323:37:16","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"6348:4:16"},{"name":"value","nodeType":"YulIdentifier","src":"6354:5:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6344:3:16"},"nodeType":"YulFunctionCall","src":"6344:16:16"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"6323:8:16"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"6288:4:16","type":""},{"name":"value","nodeType":"YulTypedName","src":"6294:5:16","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"6304:8:16","type":""}],"src":"6250:117:16"},{"body":{"nodeType":"YulBlock","src":"6424:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"6434:68:16","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6483:1:16","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"6486:5:16"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6479:3:16"},"nodeType":"YulFunctionCall","src":"6479:13:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6498:1:16","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6494:3:16"},"nodeType":"YulFunctionCall","src":"6494:6:16"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"6450:28:16"},"nodeType":"YulFunctionCall","src":"6450:51:16"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6446:3:16"},"nodeType":"YulFunctionCall","src":"6446:56:16"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"6438:4:16","type":""}]},{"nodeType":"YulAssignment","src":"6511:25:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6525:4:16"},{"name":"mask","nodeType":"YulIdentifier","src":"6531:4:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6521:3:16"},"nodeType":"YulFunctionCall","src":"6521:15:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"6511:6:16"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6401:4:16","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"6407:5:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"6417:6:16","type":""}],"src":"6373:169:16"},{"body":{"nodeType":"YulBlock","src":"6628:214:16","statements":[{"nodeType":"YulAssignment","src":"6761:37:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6788:4:16"},{"name":"len","nodeType":"YulIdentifier","src":"6794:3:16"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"6769:18:16"},"nodeType":"YulFunctionCall","src":"6769:29:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"6761:4:16"}]},{"nodeType":"YulAssignment","src":"6807:29:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6818:4:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6828:1:16","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"6831:3:16"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6824:3:16"},"nodeType":"YulFunctionCall","src":"6824:11:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"6815:2:16"},"nodeType":"YulFunctionCall","src":"6815:21:16"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"6807:4:16"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6609:4:16","type":""},{"name":"len","nodeType":"YulTypedName","src":"6615:3:16","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"6623:4:16","type":""}],"src":"6547:295:16"},{"body":{"nodeType":"YulBlock","src":"6939:1303:16","statements":[{"nodeType":"YulVariableDeclaration","src":"6950:51:16","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6997:3:16"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"6964:32:16"},"nodeType":"YulFunctionCall","src":"6964:37:16"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"6954:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"7086:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7088:16:16"},"nodeType":"YulFunctionCall","src":"7088:18:16"},"nodeType":"YulExpressionStatement","src":"7088:18:16"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7058:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"7066:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7055:2:16"},"nodeType":"YulFunctionCall","src":"7055:30:16"},"nodeType":"YulIf","src":"7052:56:16"},{"nodeType":"YulVariableDeclaration","src":"7118:52:16","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7164:4:16"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"7158:5:16"},"nodeType":"YulFunctionCall","src":"7158:11:16"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"7132:25:16"},"nodeType":"YulFunctionCall","src":"7132:38:16"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"7122:6:16","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7263:4:16"},{"name":"oldLen","nodeType":"YulIdentifier","src":"7269:6:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"7277:6:16"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"7217:45:16"},"nodeType":"YulFunctionCall","src":"7217:67:16"},"nodeType":"YulExpressionStatement","src":"7217:67:16"},{"nodeType":"YulVariableDeclaration","src":"7294:18:16","value":{"kind":"number","nodeType":"YulLiteral","src":"7311:1:16","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"7298:9:16","type":""}]},{"nodeType":"YulAssignment","src":"7322:17:16","value":{"kind":"number","nodeType":"YulLiteral","src":"7335:4:16","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"7322:9:16"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"7386:611:16","statements":[{"nodeType":"YulVariableDeclaration","src":"7400:37:16","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7419:6:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7431:4:16","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7427:3:16"},"nodeType":"YulFunctionCall","src":"7427:9:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7415:3:16"},"nodeType":"YulFunctionCall","src":"7415:22:16"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"7404:7:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7451:51:16","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7497:4:16"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"7465:31:16"},"nodeType":"YulFunctionCall","src":"7465:37:16"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"7455:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7515:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"7524:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"7519:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"7583:163:16","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7608:6:16"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7626:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"7631:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7622:3:16"},"nodeType":"YulFunctionCall","src":"7622:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7616:5:16"},"nodeType":"YulFunctionCall","src":"7616:26:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7601:6:16"},"nodeType":"YulFunctionCall","src":"7601:42:16"},"nodeType":"YulExpressionStatement","src":"7601:42:16"},{"nodeType":"YulAssignment","src":"7660:24:16","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7674:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"7682:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7670:3:16"},"nodeType":"YulFunctionCall","src":"7670:14:16"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7660:6:16"}]},{"nodeType":"YulAssignment","src":"7701:31:16","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"7718:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7729:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7714:3:16"},"nodeType":"YulFunctionCall","src":"7714:18:16"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"7701:9:16"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7549:1:16"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"7552:7:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7546:2:16"},"nodeType":"YulFunctionCall","src":"7546:14:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7561:21:16","statements":[{"nodeType":"YulAssignment","src":"7563:17:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7572:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"7575:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7568:3:16"},"nodeType":"YulFunctionCall","src":"7568:12:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7563:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"7542:3:16","statements":[]},"src":"7538:208:16"},{"body":{"nodeType":"YulBlock","src":"7782:156:16","statements":[{"nodeType":"YulVariableDeclaration","src":"7800:43:16","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7827:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"7832:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7823:3:16"},"nodeType":"YulFunctionCall","src":"7823:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7817:5:16"},"nodeType":"YulFunctionCall","src":"7817:26:16"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"7804:9:16","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7867:6:16"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"7894:9:16"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7909:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"7917:4:16","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7905:3:16"},"nodeType":"YulFunctionCall","src":"7905:17:16"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"7875:18:16"},"nodeType":"YulFunctionCall","src":"7875:48:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7860:6:16"},"nodeType":"YulFunctionCall","src":"7860:64:16"},"nodeType":"YulExpressionStatement","src":"7860:64:16"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"7765:7:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"7774:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7762:2:16"},"nodeType":"YulFunctionCall","src":"7762:19:16"},"nodeType":"YulIf","src":"7759:179:16"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7958:4:16"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7972:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"7980:1:16","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7968:3:16"},"nodeType":"YulFunctionCall","src":"7968:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"7984:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7964:3:16"},"nodeType":"YulFunctionCall","src":"7964:22:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7951:6:16"},"nodeType":"YulFunctionCall","src":"7951:36:16"},"nodeType":"YulExpressionStatement","src":"7951:36:16"}]},"nodeType":"YulCase","src":"7379:618:16","value":{"kind":"number","nodeType":"YulLiteral","src":"7384:1:16","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"8014:222:16","statements":[{"nodeType":"YulVariableDeclaration","src":"8028:14:16","value":{"kind":"number","nodeType":"YulLiteral","src":"8041:1:16","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8032:5:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"8065:67:16","statements":[{"nodeType":"YulAssignment","src":"8083:35:16","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8102:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8107:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8098:3:16"},"nodeType":"YulFunctionCall","src":"8098:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8092:5:16"},"nodeType":"YulFunctionCall","src":"8092:26:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8083:5:16"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"8058:6:16"},"nodeType":"YulIf","src":"8055:77:16"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8152:4:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8211:5:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"8218:6:16"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"8158:52:16"},"nodeType":"YulFunctionCall","src":"8158:67:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8145:6:16"},"nodeType":"YulFunctionCall","src":"8145:81:16"},"nodeType":"YulExpressionStatement","src":"8145:81:16"}]},"nodeType":"YulCase","src":"8006:230:16","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7359:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"7367:2:16","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7356:2:16"},"nodeType":"YulFunctionCall","src":"7356:14:16"},"nodeType":"YulSwitch","src":"7349:887:16"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"6928:4:16","type":""},{"name":"src","nodeType":"YulTypedName","src":"6934:3:16","type":""}],"src":"6847:1395:16"},{"body":{"nodeType":"YulBlock","src":"8293:32:16","statements":[{"nodeType":"YulAssignment","src":"8303:16:16","value":{"name":"value","nodeType":"YulIdentifier","src":"8314:5:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"8303:7:16"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8275:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"8285:7:16","type":""}],"src":"8248:77:16"},{"body":{"nodeType":"YulBlock","src":"8396:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8413:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8436:5:16"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"8418:17:16"},"nodeType":"YulFunctionCall","src":"8418:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8406:6:16"},"nodeType":"YulFunctionCall","src":"8406:37:16"},"nodeType":"YulExpressionStatement","src":"8406:37:16"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8384:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8391:3:16","type":""}],"src":"8331:118:16"},{"body":{"nodeType":"YulBlock","src":"8520:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8537:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8560:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8542:17:16"},"nodeType":"YulFunctionCall","src":"8542:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8530:6:16"},"nodeType":"YulFunctionCall","src":"8530:37:16"},"nodeType":"YulExpressionStatement","src":"8530:37:16"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8508:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8515:3:16","type":""}],"src":"8455:118:16"},{"body":{"nodeType":"YulBlock","src":"8624:81:16","statements":[{"nodeType":"YulAssignment","src":"8634:65:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8649:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"8656:42:16","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8645:3:16"},"nodeType":"YulFunctionCall","src":"8645:54:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"8634:7:16"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8606:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"8616:7:16","type":""}],"src":"8579:126:16"},{"body":{"nodeType":"YulBlock","src":"8756:51:16","statements":[{"nodeType":"YulAssignment","src":"8766:35:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8795:5:16"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"8777:17:16"},"nodeType":"YulFunctionCall","src":"8777:24:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"8766:7:16"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8738:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"8748:7:16","type":""}],"src":"8711:96:16"},{"body":{"nodeType":"YulBlock","src":"8878:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8895:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8918:5:16"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"8900:17:16"},"nodeType":"YulFunctionCall","src":"8900:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8888:6:16"},"nodeType":"YulFunctionCall","src":"8888:37:16"},"nodeType":"YulExpressionStatement","src":"8888:37:16"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8866:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8873:3:16","type":""}],"src":"8813:118:16"},{"body":{"nodeType":"YulBlock","src":"9147:454:16","statements":[{"nodeType":"YulAssignment","src":"9157:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9169:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9180:3:16","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9165:3:16"},"nodeType":"YulFunctionCall","src":"9165:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9157:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9238:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9251:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9262:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9247:3:16"},"nodeType":"YulFunctionCall","src":"9247:17:16"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"9194:43:16"},"nodeType":"YulFunctionCall","src":"9194:71:16"},"nodeType":"YulExpressionStatement","src":"9194:71:16"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9319:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9332:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9343:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9328:3:16"},"nodeType":"YulFunctionCall","src":"9328:18:16"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"9275:43:16"},"nodeType":"YulFunctionCall","src":"9275:72:16"},"nodeType":"YulExpressionStatement","src":"9275:72:16"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"9401:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9414:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9425:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9410:3:16"},"nodeType":"YulFunctionCall","src":"9410:18:16"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"9357:43:16"},"nodeType":"YulFunctionCall","src":"9357:72:16"},"nodeType":"YulExpressionStatement","src":"9357:72:16"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"9483:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9496:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9507:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9492:3:16"},"nodeType":"YulFunctionCall","src":"9492:18:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9439:43:16"},"nodeType":"YulFunctionCall","src":"9439:72:16"},"nodeType":"YulExpressionStatement","src":"9439:72:16"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"9565:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9578:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9589:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9574:3:16"},"nodeType":"YulFunctionCall","src":"9574:19:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"9521:43:16"},"nodeType":"YulFunctionCall","src":"9521:73:16"},"nodeType":"YulExpressionStatement","src":"9521:73:16"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9087:9:16","type":""},{"name":"value4","nodeType":"YulTypedName","src":"9099:6:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9107:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9115:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9123:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9131:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9142:4:16","type":""}],"src":"8937:664:16"},{"body":{"nodeType":"YulBlock","src":"9703:73:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9720:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"9725:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9713:6:16"},"nodeType":"YulFunctionCall","src":"9713:19:16"},"nodeType":"YulExpressionStatement","src":"9713:19:16"},{"nodeType":"YulAssignment","src":"9741:29:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9760:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"9765:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9756:3:16"},"nodeType":"YulFunctionCall","src":"9756:14:16"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"9741:11:16"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9675:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"9680:6:16","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"9691:11:16","type":""}],"src":"9607:169:16"},{"body":{"nodeType":"YulBlock","src":"9874:285:16","statements":[{"nodeType":"YulVariableDeclaration","src":"9884:53:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9931:5:16"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"9898:32:16"},"nodeType":"YulFunctionCall","src":"9898:39:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9888:6:16","type":""}]},{"nodeType":"YulAssignment","src":"9946:78:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10012:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"10017:6:16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9953:58:16"},"nodeType":"YulFunctionCall","src":"9953:71:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9946:3:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10072:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"10079:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10068:3:16"},"nodeType":"YulFunctionCall","src":"10068:16:16"},{"name":"pos","nodeType":"YulIdentifier","src":"10086:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"10091:6:16"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"10033:34:16"},"nodeType":"YulFunctionCall","src":"10033:65:16"},"nodeType":"YulExpressionStatement","src":"10033:65:16"},{"nodeType":"YulAssignment","src":"10107:46:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10118:3:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10145:6:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"10123:21:16"},"nodeType":"YulFunctionCall","src":"10123:29:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10114:3:16"},"nodeType":"YulFunctionCall","src":"10114:39:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10107:3:16"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9855:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9862:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9870:3:16","type":""}],"src":"9782:377:16"},{"body":{"nodeType":"YulBlock","src":"10283:195:16","statements":[{"nodeType":"YulAssignment","src":"10293:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10305:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10316:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10301:3:16"},"nodeType":"YulFunctionCall","src":"10301:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10293:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10340:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10351:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10336:3:16"},"nodeType":"YulFunctionCall","src":"10336:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10359:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"10365:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10355:3:16"},"nodeType":"YulFunctionCall","src":"10355:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10329:6:16"},"nodeType":"YulFunctionCall","src":"10329:47:16"},"nodeType":"YulExpressionStatement","src":"10329:47:16"},{"nodeType":"YulAssignment","src":"10385:86:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10457:6:16"},{"name":"tail","nodeType":"YulIdentifier","src":"10466:4:16"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10393:63:16"},"nodeType":"YulFunctionCall","src":"10393:78:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10385:4:16"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10255:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10267:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10278:4:16","type":""}],"src":"10165:313:16"},{"body":{"nodeType":"YulBlock","src":"10542:40:16","statements":[{"nodeType":"YulAssignment","src":"10553:22:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10569:5:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10563:5:16"},"nodeType":"YulFunctionCall","src":"10563:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10553:6:16"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10525:5:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"10535:6:16","type":""}],"src":"10484:98:16"},{"body":{"nodeType":"YulBlock","src":"10644:60:16","statements":[{"nodeType":"YulAssignment","src":"10654:11:16","value":{"name":"ptr","nodeType":"YulIdentifier","src":"10662:3:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"10654:4:16"}]},{"nodeType":"YulAssignment","src":"10675:22:16","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"10687:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"10692:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10683:3:16"},"nodeType":"YulFunctionCall","src":"10683:14:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"10675:4:16"}]}]},"name":"array_dataslot_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"10631:3:16","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"10639:4:16","type":""}],"src":"10588:116:16"},{"body":{"nodeType":"YulBlock","src":"10765:99:16","statements":[{"nodeType":"YulVariableDeclaration","src":"10776:42:16","value":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"10813:3:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10807:5:16"},"nodeType":"YulFunctionCall","src":"10807:10:16"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"10789:17:16"},"nodeType":"YulFunctionCall","src":"10789:29:16"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"10780:5:16","type":""}]},{"nodeType":"YulAssignment","src":"10828:29:16","value":{"name":"value","nodeType":"YulIdentifier","src":"10852:5:16"},"variableNames":[{"name":"returnValue","nodeType":"YulIdentifier","src":"10828:11:16"}]}]},"name":"read_from_memoryt_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"10745:3:16","type":""}],"returnVariables":[{"name":"returnValue","nodeType":"YulTypedName","src":"10753:11:16","type":""}],"src":"10710:154:16"},{"body":{"nodeType":"YulBlock","src":"10960:504:16","statements":[{"nodeType":"YulVariableDeclaration","src":"10971:52:16","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"11017:5:16"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"10985:31:16"},"nodeType":"YulFunctionCall","src":"10985:38:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"10975:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11032:21:16","value":{"name":"array","nodeType":"YulIdentifier","src":"11048:5:16"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"11036:8:16","type":""}]},{"nodeType":"YulAssignment","src":"11063:52:16","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"11109:5:16"}],"functionName":{"name":"array_dataslot_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"11075:33:16"},"nodeType":"YulFunctionCall","src":"11075:40:16"},"variableNames":[{"name":"dataArea","nodeType":"YulIdentifier","src":"11063:8:16"}]},{"nodeType":"YulAssignment","src":"11125:44:16","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"11160:8:16"}],"functionName":{"name":"read_from_memoryt_bytes32","nodeType":"YulIdentifier","src":"11134:25:16"},"nodeType":"YulFunctionCall","src":"11134:35:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"11125:5:16"}]},{"body":{"nodeType":"YulBlock","src":"11197:260:16","statements":[{"nodeType":"YulAssignment","src":"11211:236:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11241:5:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11308:1:16","type":"","value":"8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11315:2:16","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"11319:6:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11311:3:16"},"nodeType":"YulFunctionCall","src":"11311:15:16"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11304:3:16"},"nodeType":"YulFunctionCall","src":"11304:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"11349:66:16","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"11264:18:16"},"nodeType":"YulFunctionCall","src":"11264:169:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11220:3:16"},"nodeType":"YulFunctionCall","src":"11220:227:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"11211:5:16"}]}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11185:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"11193:2:16","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11182:2:16"},"nodeType":"YulFunctionCall","src":"11182:14:16"},"nodeType":"YulIf","src":"11179:278:16"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"10944:5:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"10954:5:16","type":""}],"src":"10870:594:16"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_dataslot_t_bytes_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function read_from_memoryt_bytes32(ptr) -> returnValue {\n\n        let value := cleanup_t_bytes32(mload(ptr))\n\n        returnValue :=\n\n        value\n\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value {\n\n        let length := array_length_t_bytes_memory_ptr(array)\n        let dataArea := array\n\n        dataArea := array_dataslot_t_bytes_memory_ptr(array)\n\n        value := read_from_memoryt_bytes32(dataArea)\n\n        if lt(length, 32) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(32, length)),\n                    0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                )\n            )\n        }\n\n    }\n\n}\n","id":16,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH2 0x160 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x23FA CODESIZE SUB DUP1 PUSH3 0x23FA DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x38 SWAP2 SWAP1 PUSH3 0x3E5 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH3 0x85 PUSH1 0x0 DUP4 PUSH3 0x126 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x120 DUP2 DUP2 MSTORE POP POP PUSH3 0xA3 PUSH1 0x1 DUP3 PUSH3 0x126 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x140 DUP2 DUP2 MSTORE POP POP DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x100 DUP2 DUP2 MSTORE POP POP CHAINID PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP PUSH3 0xE2 PUSH3 0x17E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x80 DUP2 DUP2 MSTORE POP POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP PUSH3 0x94E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH3 0x14C JUMPI PUSH3 0x144 DUP4 PUSH3 0x1DB PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH3 0x178 JUMP JUMPDEST DUP3 PUSH3 0x15E DUP4 PUSH3 0x248 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 DUP2 PUSH3 0x16F SWAP2 SWAP1 PUSH3 0x681 JUMP JUMPDEST POP PUSH1 0xFF PUSH1 0x0 SHL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x1C0 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x7D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH3 0x22B JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x305A27A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x222 SWAP2 SWAP1 PUSH3 0x888 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH3 0x239 SWAP1 PUSH3 0x8DE JUMP JUMPDEST PUSH1 0x0 SHR OR PUSH1 0x0 SHL SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x2BB DUP3 PUSH3 0x270 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x2DD JUMPI PUSH3 0x2DC PUSH3 0x281 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2F2 PUSH3 0x252 JUMP JUMPDEST SWAP1 POP PUSH3 0x300 DUP3 DUP3 PUSH3 0x2B0 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x323 JUMPI PUSH3 0x322 PUSH3 0x281 JUMP JUMPDEST JUMPDEST PUSH3 0x32E DUP3 PUSH3 0x270 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x35B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x33E JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x37E PUSH3 0x378 DUP5 PUSH3 0x305 JUMP JUMPDEST PUSH3 0x2E6 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x39D JUMPI PUSH3 0x39C PUSH3 0x26B JUMP JUMPDEST JUMPDEST PUSH3 0x3AA DUP5 DUP3 DUP6 PUSH3 0x33B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x3CA JUMPI PUSH3 0x3C9 PUSH3 0x266 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x3DC DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x367 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x3FE JUMPI PUSH3 0x3FD PUSH3 0x25C JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x41F JUMPI PUSH3 0x41E PUSH3 0x261 JUMP JUMPDEST JUMPDEST PUSH3 0x42D DUP5 DUP3 DUP6 ADD PUSH3 0x3B2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x489 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x49F JUMPI PUSH3 0x49E PUSH3 0x441 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x509 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x4CA JUMP JUMPDEST PUSH3 0x515 DUP7 DUP4 PUSH3 0x4CA JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x562 PUSH3 0x55C PUSH3 0x556 DUP5 PUSH3 0x52D JUMP JUMPDEST PUSH3 0x537 JUMP JUMPDEST PUSH3 0x52D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x57E DUP4 PUSH3 0x541 JUMP JUMPDEST PUSH3 0x596 PUSH3 0x58D DUP3 PUSH3 0x569 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x4D7 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x5AD PUSH3 0x59E JUMP JUMPDEST PUSH3 0x5BA DUP2 DUP5 DUP5 PUSH3 0x573 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x5E2 JUMPI PUSH3 0x5D6 PUSH1 0x0 DUP3 PUSH3 0x5A3 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x5C0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x631 JUMPI PUSH3 0x5FB DUP2 PUSH3 0x4A5 JUMP JUMPDEST PUSH3 0x606 DUP5 PUSH3 0x4BA JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x616 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x62E PUSH3 0x625 DUP6 PUSH3 0x4BA JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x5BF JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x656 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x636 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x671 DUP4 DUP4 PUSH3 0x643 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x68C DUP3 PUSH3 0x436 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x6A8 JUMPI PUSH3 0x6A7 PUSH3 0x281 JUMP JUMPDEST JUMPDEST PUSH3 0x6B4 DUP3 SLOAD PUSH3 0x470 JUMP JUMPDEST PUSH3 0x6C1 DUP3 DUP3 DUP6 PUSH3 0x5E6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x6F9 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x6E4 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x6F0 DUP6 DUP3 PUSH3 0x663 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x760 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x709 DUP7 PUSH3 0x4A5 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x733 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x70C JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x753 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x74F PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x643 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x77D DUP2 PUSH3 0x768 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x78E DUP2 PUSH3 0x52D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x7C1 DUP3 PUSH3 0x794 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x7D3 DUP2 PUSH3 0x7B4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH3 0x7F0 PUSH1 0x0 DUP4 ADD DUP9 PUSH3 0x772 JUMP JUMPDEST PUSH3 0x7FF PUSH1 0x20 DUP4 ADD DUP8 PUSH3 0x772 JUMP JUMPDEST PUSH3 0x80E PUSH1 0x40 DUP4 ADD DUP7 PUSH3 0x772 JUMP JUMPDEST PUSH3 0x81D PUSH1 0x60 DUP4 ADD DUP6 PUSH3 0x783 JUMP JUMPDEST PUSH3 0x82C PUSH1 0x80 DUP4 ADD DUP5 PUSH3 0x7C8 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x854 DUP3 PUSH3 0x436 JUMP JUMPDEST PUSH3 0x860 DUP2 DUP6 PUSH3 0x836 JUMP JUMPDEST SWAP4 POP PUSH3 0x872 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x33B JUMP JUMPDEST PUSH3 0x87D DUP2 PUSH3 0x270 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x8A4 DUP2 DUP5 PUSH3 0x847 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x8D5 DUP3 MLOAD PUSH3 0x768 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x8EB DUP3 PUSH3 0x8AC JUMP JUMPDEST DUP3 PUSH3 0x8F7 DUP5 PUSH3 0x8B7 JUMP JUMPDEST SWAP1 POP PUSH3 0x904 DUP2 PUSH3 0x8C7 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 LT ISZERO PUSH3 0x947 JUMPI PUSH3 0x942 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SUB PUSH1 0x8 MUL PUSH3 0x4CA JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x1A51 PUSH3 0x9A9 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x535 ADD MSTORE PUSH1 0x0 PUSH2 0x4FA ADD MSTORE PUSH1 0x0 PUSH2 0xF33 ADD MSTORE PUSH1 0x0 PUSH2 0xF12 ADD MSTORE PUSH1 0x0 PUSH2 0xCB5 ADD MSTORE PUSH1 0x0 PUSH2 0xD0B ADD MSTORE PUSH1 0x0 PUSH2 0xD34 ADD MSTORE PUSH2 0x1A51 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x19D8D38C EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0xCCF96B4A EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0xDF905CAF EQ PUSH2 0x116 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x76 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x71 SWAP2 SWAP1 PUSH2 0xFB1 JUMP JUMPDEST PUSH2 0x132 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x1015 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAE SWAP2 SWAP1 PUSH2 0x108E JUMP JUMPDEST PUSH2 0x165 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x10D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDE PUSH2 0x1AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF1 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x114 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x13C7 JUMP JUMPDEST PUSH2 0x258 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x130 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12B SWAP2 SWAP1 PUSH2 0xFB1 JUMP JUMPDEST PUSH2 0x3B4 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x141 DUP6 PUSH2 0x446 JUMP JUMPDEST POP SWAP3 POP SWAP3 POP SWAP3 POP DUP3 DUP1 ISZERO PUSH2 0x152 JUMPI POP DUP2 JUMPDEST DUP1 ISZERO PUSH2 0x15B JUMPI POP DUP1 JUMPDEST SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0x1C2 PUSH2 0x4F1 JUMP JUMPDEST PUSH2 0x1CA PUSH2 0x52C JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x0 DUP1 SHL PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EB JUMPI PUSH2 0x1EA PUSH2 0x1427 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x219 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST DUP7 DUP7 SWAP1 POP DUP2 LT ISZERO PUSH2 0x352 JUMPI DUP7 DUP7 DUP3 DUP2 DUP2 LT PUSH2 0x2AF JUMPI PUSH2 0x2AE PUSH2 0x1456 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x2C1 SWAP2 SWAP1 PUSH2 0x1494 JUMP JUMPDEST PUSH1 0x40 ADD CALLDATALOAD DUP4 PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x14EB JUMP JUMPDEST SWAP3 POP PUSH1 0x0 PUSH2 0x302 DUP9 DUP9 DUP5 DUP2 DUP2 LT PUSH2 0x2EA JUMPI PUSH2 0x2E9 PUSH2 0x1456 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x2FC SWAP2 SWAP1 PUSH2 0x1494 JUMP JUMPDEST DUP7 PUSH2 0x567 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x340 JUMPI DUP8 DUP8 DUP4 DUP2 DUP2 LT PUSH2 0x31C JUMPI PUSH2 0x31B PUSH2 0x1456 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x32E SWAP2 SWAP1 PUSH2 0x1494 JUMP JUMPDEST PUSH1 0x40 ADD CALLDATALOAD DUP4 PUSH2 0x33D SWAP2 SWAP1 PUSH2 0x14EB JUMP JUMPDEST SWAP3 POP JUMPDEST POP DUP1 PUSH2 0x34B SWAP1 PUSH2 0x151F JUMP JUMPDEST SWAP1 POP PUSH2 0x291 JUMP JUMPDEST POP CALLVALUE DUP3 EQ PUSH2 0x399 JUMPI DUP2 CALLVALUE PUSH1 0x40 MLOAD PUSH32 0x70647F7900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x390 SWAP3 SWAP2 SWAP1 PUSH2 0x1567 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 EQ PUSH2 0x3AC JUMPI PUSH2 0x3AB DUP5 DUP3 PUSH2 0x79C JUMP JUMPDEST JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x40 ADD CALLDATALOAD CALLVALUE EQ PUSH2 0x402 JUMPI DUP1 PUSH1 0x40 ADD CALLDATALOAD CALLVALUE PUSH1 0x40 MLOAD PUSH32 0x70647F7900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F9 SWAP3 SWAP2 SWAP1 PUSH2 0x1567 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x40D DUP2 PUSH1 0x1 PUSH2 0x567 JUMP JUMPDEST PUSH2 0x443 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x458 DUP8 PUSH2 0x889 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x477 DUP8 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x472 SWAP2 SWAP1 PUSH2 0x108E JUMP JUMPDEST PUSH2 0xA06 JUMP JUMPDEST TIMESTAMP DUP9 PUSH1 0x80 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x48B SWAP2 SWAP1 PUSH2 0x15CE JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND LT ISZERO DUP4 DUP1 ISZERO PUSH2 0x4DF JUMPI POP DUP9 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x4B0 SWAP2 SWAP1 PUSH2 0x108E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP4 SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP POP POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x527 PUSH1 0x0 PUSH32 0x0 PUSH2 0xAA2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x562 PUSH1 0x1 PUSH32 0x0 PUSH2 0xAA2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x578 DUP8 PUSH2 0x446 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP DUP6 ISZERO PUSH2 0x687 JUMPI DUP4 PUSH2 0x5DC JUMPI DUP7 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x59E SWAP2 SWAP1 PUSH2 0x108E JUMP JUMPDEST ADDRESS PUSH1 0x40 MLOAD PUSH32 0xD2650CD100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D3 SWAP3 SWAP2 SWAP1 PUSH2 0x15FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH2 0x630 JUMPI DUP7 PUSH1 0x80 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x5F4 SWAP2 SWAP1 PUSH2 0x15CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x94EEF58A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x627 SWAP2 SWAP1 PUSH2 0x1633 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH2 0x686 JUMPI DUP1 DUP8 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x649 SWAP2 SWAP1 PUSH2 0x108E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xC845A05600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67D SWAP3 SWAP2 SWAP1 PUSH2 0x15FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP4 DUP1 ISZERO PUSH2 0x691 JUMPI POP DUP2 JUMPDEST DUP1 ISZERO PUSH2 0x69A JUMPI POP DUP3 JUMPDEST ISZERO PUSH2 0x792 JUMPI PUSH1 0x0 PUSH2 0x6AA DUP3 PUSH2 0xB52 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP9 PUSH1 0x60 ADD CALLDATALOAD SWAP1 POP PUSH1 0x0 DUP10 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x6CA SWAP2 SWAP1 PUSH2 0x108E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP11 PUSH1 0x40 ADD CALLDATALOAD SWAP1 POP PUSH1 0x0 DUP12 DUP1 PUSH1 0xA0 ADD SWAP1 PUSH2 0x6E7 SWAP2 SWAP1 PUSH2 0x164E JUMP JUMPDEST DUP14 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x6FA SWAP2 SWAP1 PUSH2 0x108E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x70C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1738 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x20 DUP6 ADD DUP7 DUP9 DUP11 CALL SWAP11 POP GAS SWAP1 POP PUSH2 0x73B DUP2 DUP15 PUSH2 0xBA9 JUMP JUMPDEST DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x842FB24A83793558587A3DAB2BE7674DA4A51D09C5542D6DD354E5D0EA70813C DUP8 DUP14 PUSH1 0x40 MLOAD PUSH2 0x783 SWAP3 SWAP2 SWAP1 PUSH2 0x1762 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMPDEST POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x7E1 JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D8 SWAP2 SWAP1 PUSH2 0x178B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x807 SWAP1 PUSH2 0x17CC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x844 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x849 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x884 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x9CD DUP6 DUP1 PUSH1 0xC0 ADD SWAP1 PUSH2 0x8A2 SWAP2 SWAP1 PUSH2 0x164E JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0x9BF PUSH32 0x7F96328B83274EBC7C1CF4F7A3ABDA602B51A78B7FA1D86A2CE353D75E587CAC DUP9 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x91C SWAP2 SWAP1 PUSH2 0x108E JUMP JUMPDEST DUP10 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x92F SWAP2 SWAP1 PUSH2 0x108E JUMP JUMPDEST DUP11 PUSH1 0x40 ADD CALLDATALOAD DUP12 PUSH1 0x60 ADD CALLDATALOAD PUSH2 0x954 DUP14 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x94F SWAP2 SWAP1 PUSH2 0x108E JUMP JUMPDEST PUSH2 0x165 JUMP JUMPDEST DUP14 PUSH1 0x80 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x967 SWAP2 SWAP1 PUSH2 0x15CE JUMP JUMPDEST DUP15 DUP1 PUSH1 0xA0 ADD SWAP1 PUSH2 0x977 SWAP2 SWAP1 PUSH2 0x164E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x985 SWAP3 SWAP2 SWAP1 PUSH2 0x17E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x9A4 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0xBE1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x9E6 JUMPI PUSH2 0x9E5 PUSH2 0x1878 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x9F9 JUMPI PUSH2 0x9F8 PUSH2 0x1878 JUMP JUMPDEST JUMPDEST EQ DUP3 SWAP4 POP SWAP4 POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 ADDRESS PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xA1A SWAP2 SWAP1 PUSH2 0x178B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH4 0x572B6C05 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 PUSH1 0x0 DUP6 MLOAD PUSH1 0x20 DUP8 ADD DUP10 GAS STATICCALL SWAP3 POP RETURNDATASIZE SWAP2 POP PUSH1 0x0 MLOAD SWAP1 POP DUP3 DUP1 ISZERO PUSH2 0xA8B JUMPI POP PUSH1 0x20 DUP3 LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xA97 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST SWAP5 POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH1 0x0 SHL DUP4 EQ PUSH2 0xABF JUMPI PUSH2 0xAB8 DUP4 PUSH2 0xC3D JUMP JUMPDEST SWAP1 POP PUSH2 0xB4C JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0xACB SWAP1 PUSH2 0x18D6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAF7 SWAP1 PUSH2 0x18D6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB44 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB19 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB44 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB27 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3F DUP2 PUSH1 0x60 ADD CALLDATALOAD PUSH2 0xBBA SWAP2 SWAP1 PUSH2 0x1936 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0xBC3 JUMPI INVALID JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBDA PUSH2 0xBD4 PUSH2 0xCB1 JUMP JUMPDEST DUP4 PUSH2 0xD68 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x41 DUP5 MLOAD SUB PUSH2 0xC26 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP8 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP8 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH2 0xC18 DUP9 DUP3 DUP6 DUP6 PUSH2 0xDA9 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0xC36 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP6 MLOAD PUSH1 0x0 SHL SWAP3 POP SWAP3 POP SWAP3 POP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xC4A DUP4 PUSH2 0xE9D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC69 JUMPI PUSH2 0xC68 PUSH2 0x1427 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC9B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xD2D JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0xD5A JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0xD65 JUMP JUMPDEST PUSH2 0xD62 PUSH2 0xEED JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0xDE9 JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xE93 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0xE0E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1983 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE30 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE84 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0xE93 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF DUP4 PUSH1 0x0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0xEE4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF68 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFA8 JUMPI PUSH2 0xFA7 PUSH2 0xF8D JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFC7 JUMPI PUSH2 0xFC6 PUSH2 0xF83 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFE5 JUMPI PUSH2 0xFE4 PUSH2 0xF88 JUMP JUMPDEST JUMPDEST PUSH2 0xFF1 DUP5 DUP3 DUP6 ADD PUSH2 0xF92 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x100F DUP2 PUSH2 0xFFA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x102A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1006 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x105B DUP3 PUSH2 0x1030 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x106B DUP2 PUSH2 0x1050 JUMP JUMPDEST DUP2 EQ PUSH2 0x1076 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1088 DUP2 PUSH2 0x1062 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10A4 JUMPI PUSH2 0x10A3 PUSH2 0xF83 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10B2 DUP5 DUP3 DUP6 ADD PUSH2 0x1079 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10CE DUP2 PUSH2 0x10BB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10E9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1124 DUP2 PUSH2 0x10EF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1164 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1149 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x118C DUP3 PUSH2 0x112A JUMP JUMPDEST PUSH2 0x1196 DUP2 DUP6 PUSH2 0x1135 JUMP JUMPDEST SWAP4 POP PUSH2 0x11A6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1146 JUMP JUMPDEST PUSH2 0x11AF DUP2 PUSH2 0x1170 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x11C3 DUP2 PUSH2 0x1050 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11DC DUP2 PUSH2 0x11C9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1217 DUP2 PUSH2 0x10BB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1229 DUP4 DUP4 PUSH2 0x120E JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x124D DUP3 PUSH2 0x11E2 JUMP JUMPDEST PUSH2 0x1257 DUP2 DUP6 PUSH2 0x11ED JUMP JUMPDEST SWAP4 POP PUSH2 0x1262 DUP4 PUSH2 0x11FE JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1293 JUMPI DUP2 MLOAD PUSH2 0x127A DUP9 DUP3 PUSH2 0x121D JUMP JUMPDEST SWAP8 POP PUSH2 0x1285 DUP4 PUSH2 0x1235 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1266 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x12B5 PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x111B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x12C7 DUP2 DUP10 PUSH2 0x1181 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x12DB DUP2 DUP9 PUSH2 0x1181 JUMP JUMPDEST SWAP1 POP PUSH2 0x12EA PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x10C5 JUMP JUMPDEST PUSH2 0x12F7 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x11BA JUMP JUMPDEST PUSH2 0x1304 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x11D3 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x1316 DUP2 DUP5 PUSH2 0x1242 JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1349 JUMPI PUSH2 0x1348 PUSH2 0x1324 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1366 JUMPI PUSH2 0x1365 PUSH2 0x1329 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1382 JUMPI PUSH2 0x1381 PUSH2 0x132E JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1394 DUP3 PUSH2 0x1030 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13A4 DUP2 PUSH2 0x1389 JUMP JUMPDEST DUP2 EQ PUSH2 0x13AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13C1 DUP2 PUSH2 0x139B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x13E0 JUMPI PUSH2 0x13DF PUSH2 0xF83 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13FE JUMPI PUSH2 0x13FD PUSH2 0xF88 JUMP JUMPDEST JUMPDEST PUSH2 0x140A DUP7 DUP3 DUP8 ADD PUSH2 0x1333 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x20 PUSH2 0x141D DUP7 DUP3 DUP8 ADD PUSH2 0x13B2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0xE0 SUB DUP4 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x14B0 JUMPI PUSH2 0x14AF PUSH2 0x1485 JUMP JUMPDEST JUMPDEST DUP1 DUP4 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x14F6 DUP3 PUSH2 0x10BB JUMP JUMPDEST SWAP2 POP PUSH2 0x1501 DUP4 PUSH2 0x10BB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1519 JUMPI PUSH2 0x1518 PUSH2 0x14BC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x152A DUP3 PUSH2 0x10BB JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x155C JUMPI PUSH2 0x155B PUSH2 0x14BC JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x157C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x10C5 JUMP JUMPDEST PUSH2 0x1589 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x10C5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH6 0xFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15AB DUP2 PUSH2 0x1590 JUMP JUMPDEST DUP2 EQ PUSH2 0x15B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15C8 DUP2 PUSH2 0x15A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15E4 JUMPI PUSH2 0x15E3 PUSH2 0xF83 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15F2 DUP5 DUP3 DUP6 ADD PUSH2 0x15B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1610 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x11BA JUMP JUMPDEST PUSH2 0x161D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x11BA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x162D DUP2 PUSH2 0x1590 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1648 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1624 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x166B JUMPI PUSH2 0x166A PUSH2 0x1485 JUMP JUMPDEST JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x168D JUMPI PUSH2 0x168C PUSH2 0x148A JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x16A9 JUMPI PUSH2 0x16A8 PUSH2 0x148F JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16D7 DUP4 DUP6 PUSH2 0x16B1 JUMP JUMPDEST SWAP4 POP PUSH2 0x16E4 DUP4 DUP6 DUP5 PUSH2 0x16BC JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1708 DUP3 PUSH2 0x16F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x171A DUP3 PUSH2 0x16FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1732 PUSH2 0x172D DUP3 PUSH2 0x1050 JUMP JUMPDEST PUSH2 0x170F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1745 DUP3 DUP6 DUP8 PUSH2 0x16CB JUMP JUMPDEST SWAP2 POP PUSH2 0x1751 DUP3 DUP5 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1777 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x10C5 JUMP JUMPDEST PUSH2 0x1784 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1006 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17A0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x11BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17B6 PUSH1 0x0 DUP4 PUSH2 0x16B1 JUMP JUMPDEST SWAP2 POP PUSH2 0x17C1 DUP3 PUSH2 0x17A6 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17D7 DUP3 PUSH2 0x17A9 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17EE DUP3 DUP5 DUP7 PUSH2 0x16CB JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x1810 PUSH1 0x0 DUP4 ADD DUP12 PUSH2 0x11D3 JUMP JUMPDEST PUSH2 0x181D PUSH1 0x20 DUP4 ADD DUP11 PUSH2 0x11BA JUMP JUMPDEST PUSH2 0x182A PUSH1 0x40 DUP4 ADD DUP10 PUSH2 0x11BA JUMP JUMPDEST PUSH2 0x1837 PUSH1 0x60 DUP4 ADD DUP9 PUSH2 0x10C5 JUMP JUMPDEST PUSH2 0x1844 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x10C5 JUMP JUMPDEST PUSH2 0x1851 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x10C5 JUMP JUMPDEST PUSH2 0x185E PUSH1 0xC0 DUP4 ADD DUP6 PUSH2 0x1624 JUMP JUMPDEST PUSH2 0x186B PUSH1 0xE0 DUP4 ADD DUP5 PUSH2 0x11D3 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x18EE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1901 JUMPI PUSH2 0x1900 PUSH2 0x18A7 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1941 DUP3 PUSH2 0x10BB JUMP JUMPDEST SWAP2 POP PUSH2 0x194C DUP4 PUSH2 0x10BB JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x195C JUMPI PUSH2 0x195B PUSH2 0x1907 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x197D DUP2 PUSH2 0x1967 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1998 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x11D3 JUMP JUMPDEST PUSH2 0x19A5 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1974 JUMP JUMPDEST PUSH2 0x19B2 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x11D3 JUMP JUMPDEST PUSH2 0x19BF PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x11D3 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x19DD PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x11D3 JUMP JUMPDEST PUSH2 0x19EA PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x11D3 JUMP JUMPDEST PUSH2 0x19F7 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x11D3 JUMP JUMPDEST PUSH2 0x1A04 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x10C5 JUMP JUMPDEST PUSH2 0x1A11 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x11BA JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP7 0xE6 0xDA 0xD9 0x4A 0xC5 0xD8 0xBD 0x5D 0x4C DUP16 0xAB COINBASE DUP5 JUMPDEST 0xAE 0xD2 PUSH2 0x27D2 0x1E SWAP6 0xF7 EQ 0xDF 0x4F POP PC DUP2 EXTCODEHASH GAS DUP12 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"2733:14066:2:-:0;;;4315:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4354:4;3328:431:10;;;;;;;;;;;;;;;;;3401:45;3432:13;3401:4;:30;;;;:45;;;;:::i;:::-;3393:53;;;;;;3467:51;3501:16;3467:7;:33;;;;:51;;;;:::i;:::-;3456:62;;;;;;3558:4;3542:22;;;;;;3528:36;;;;;;3607:7;3591:25;;;;;;3574:42;;;;;;3644:13;3627:30;;;;;;3692:23;:21;;;:23;;:::i;:::-;3667:48;;;;;;3747:4;3725:27;;;;;;;;;;3328:431;;4315:52:2;2733:14066;;2914:340:6;3010:11;3059:2;3043:5;3037:19;:24;3033:215;;;3084:20;3098:5;3084:13;;;:20;;:::i;:::-;3077:27;;;;3033:215;3176:5;3135:32;3161:5;3135:25;;;:32;;:::i;:::-;:38;;:46;;;;;;:::i;:::-;;1390:66;3219:17;;3195:42;;2914:340;;;;;:::o;4113:179:10:-;4168:7;2079:95;4226:11;;4239:14;;4255:13;4278:4;4204:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;:::o;1708:286:6:-;1773:11;1796:17;1822:3;1796:30;;1854:2;1840:4;:11;:16;1836:72;;;1893:3;1879:18;;;;;;;;;;;:::i;:::-;;;;;;;;1836:72;1974:4;:11;1965:4;1957:13;;;:::i;:::-;1949:22;;:36;1941:45;;1917:70;;;1708:286;;;:::o;3135:202:7:-;3203:20;3311:10;3301:20;;3135:202;;;:::o;7:75:16:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:524::-;2757:6;2806:2;2794:9;2785:7;2781:23;2777:32;2774:119;;;2812:79;;:::i;:::-;2774:119;2953:1;2942:9;2938:17;2932:24;2983:18;2975:6;2972:30;2969:117;;;3005:79;;:::i;:::-;2969:117;3110:74;3176:7;3167:6;3156:9;3152:22;3110:74;:::i;:::-;3100:84;;2903:291;2677:524;;;;:::o;3207:99::-;3259:6;3293:5;3287:12;3277:22;;3207:99;;;:::o;3312:180::-;3360:77;3357:1;3350:88;3457:4;3454:1;3447:15;3481:4;3478:1;3471:15;3498:320;3542:6;3579:1;3573:4;3569:12;3559:22;;3626:1;3620:4;3616:12;3647:18;3637:81;;3703:4;3695:6;3691:17;3681:27;;3637:81;3765:2;3757:6;3754:14;3734:18;3731:38;3728:84;;3784:18;;:::i;:::-;3728:84;3549:269;3498:320;;;:::o;3824:141::-;3873:4;3896:3;3888:11;;3919:3;3916:1;3909:14;3953:4;3950:1;3940:18;3932:26;;3824:141;;;:::o;3971:93::-;4008:6;4055:2;4050;4043:5;4039:14;4035:23;4025:33;;3971:93;;;:::o;4070:107::-;4114:8;4164:5;4158:4;4154:16;4133:37;;4070:107;;;;:::o;4183:393::-;4252:6;4302:1;4290:10;4286:18;4325:97;4355:66;4344:9;4325:97;:::i;:::-;4443:39;4473:8;4462:9;4443:39;:::i;:::-;4431:51;;4515:4;4511:9;4504:5;4500:21;4491:30;;4564:4;4554:8;4550:19;4543:5;4540:30;4530:40;;4259:317;;4183:393;;;;;:::o;4582:77::-;4619:7;4648:5;4637:16;;4582:77;;;:::o;4665:60::-;4693:3;4714:5;4707:12;;4665:60;;;:::o;4731:142::-;4781:9;4814:53;4832:34;4841:24;4859:5;4841:24;:::i;:::-;4832:34;:::i;:::-;4814:53;:::i;:::-;4801:66;;4731:142;;;:::o;4879:75::-;4922:3;4943:5;4936:12;;4879:75;;;:::o;4960:269::-;5070:39;5101:7;5070:39;:::i;:::-;5131:91;5180:41;5204:16;5180:41;:::i;:::-;5172:6;5165:4;5159:11;5131:91;:::i;:::-;5125:4;5118:105;5036:193;4960:269;;;:::o;5235:73::-;5280:3;5235:73;:::o;5314:189::-;5391:32;;:::i;:::-;5432:65;5490:6;5482;5476:4;5432:65;:::i;:::-;5367:136;5314:189;;:::o;5509:186::-;5569:120;5586:3;5579:5;5576:14;5569:120;;;5640:39;5677:1;5670:5;5640:39;:::i;:::-;5613:1;5606:5;5602:13;5593:22;;5569:120;;;5509:186;;:::o;5701:543::-;5802:2;5797:3;5794:11;5791:446;;;5836:38;5868:5;5836:38;:::i;:::-;5920:29;5938:10;5920:29;:::i;:::-;5910:8;5906:44;6103:2;6091:10;6088:18;6085:49;;;6124:8;6109:23;;6085:49;6147:80;6203:22;6221:3;6203:22;:::i;:::-;6193:8;6189:37;6176:11;6147:80;:::i;:::-;5806:431;;5791:446;5701:543;;;:::o;6250:117::-;6304:8;6354:5;6348:4;6344:16;6323:37;;6250:117;;;;:::o;6373:169::-;6417:6;6450:51;6498:1;6494:6;6486:5;6483:1;6479:13;6450:51;:::i;:::-;6446:56;6531:4;6525;6521:15;6511:25;;6424:118;6373:169;;;;:::o;6547:295::-;6623:4;6769:29;6794:3;6788:4;6769:29;:::i;:::-;6761:37;;6831:3;6828:1;6824:11;6818:4;6815:21;6807:29;;6547:295;;;;:::o;6847:1395::-;6964:37;6997:3;6964:37;:::i;:::-;7066:18;7058:6;7055:30;7052:56;;;7088:18;;:::i;:::-;7052:56;7132:38;7164:4;7158:11;7132:38;:::i;:::-;7217:67;7277:6;7269;7263:4;7217:67;:::i;:::-;7311:1;7335:4;7322:17;;7367:2;7359:6;7356:14;7384:1;7379:618;;;;8041:1;8058:6;8055:77;;;8107:9;8102:3;8098:19;8092:26;8083:35;;8055:77;8158:67;8218:6;8211:5;8158:67;:::i;:::-;8152:4;8145:81;8014:222;7349:887;;7379:618;7431:4;7427:9;7419:6;7415:22;7465:37;7497:4;7465:37;:::i;:::-;7524:1;7538:208;7552:7;7549:1;7546:14;7538:208;;;7631:9;7626:3;7622:19;7616:26;7608:6;7601:42;7682:1;7674:6;7670:14;7660:24;;7729:2;7718:9;7714:18;7701:31;;7575:4;7572:1;7568:12;7563:17;;7538:208;;;7774:6;7765:7;7762:19;7759:179;;;7832:9;7827:3;7823:19;7817:26;7875:48;7917:4;7909:6;7905:17;7894:9;7875:48;:::i;:::-;7867:6;7860:64;7782:156;7759:179;7984:1;7980;7972:6;7968:14;7964:22;7958:4;7951:36;7386:611;;;7349:887;;6939:1303;;;6847:1395;;:::o;8248:77::-;8285:7;8314:5;8303:16;;8248:77;;;:::o;8331:118::-;8418:24;8436:5;8418:24;:::i;:::-;8413:3;8406:37;8331:118;;:::o;8455:::-;8542:24;8560:5;8542:24;:::i;:::-;8537:3;8530:37;8455:118;;:::o;8579:126::-;8616:7;8656:42;8649:5;8645:54;8634:65;;8579:126;;;:::o;8711:96::-;8748:7;8777:24;8795:5;8777:24;:::i;:::-;8766:35;;8711:96;;;:::o;8813:118::-;8900:24;8918:5;8900:24;:::i;:::-;8895:3;8888:37;8813:118;;:::o;8937:664::-;9142:4;9180:3;9169:9;9165:19;9157:27;;9194:71;9262:1;9251:9;9247:17;9238:6;9194:71;:::i;:::-;9275:72;9343:2;9332:9;9328:18;9319:6;9275:72;:::i;:::-;9357;9425:2;9414:9;9410:18;9401:6;9357:72;:::i;:::-;9439;9507:2;9496:9;9492:18;9483:6;9439:72;:::i;:::-;9521:73;9589:3;9578:9;9574:19;9565:6;9521:73;:::i;:::-;8937:664;;;;;;;;:::o;9607:169::-;9691:11;9725:6;9720:3;9713:19;9765:4;9760:3;9756:14;9741:29;;9607:169;;;;:::o;9782:377::-;9870:3;9898:39;9931:5;9898:39;:::i;:::-;9953:71;10017:6;10012:3;9953:71;:::i;:::-;9946:78;;10033:65;10091:6;10086:3;10079:4;10072:5;10068:16;10033:65;:::i;:::-;10123:29;10145:6;10123:29;:::i;:::-;10118:3;10114:39;10107:46;;9874:285;9782:377;;;;:::o;10165:313::-;10278:4;10316:2;10305:9;10301:18;10293:26;;10365:9;10359:4;10355:20;10351:1;10340:9;10336:17;10329:47;10393:78;10466:4;10457:6;10393:78;:::i;:::-;10385:86;;10165:313;;;;:::o;10484:98::-;10535:6;10569:5;10563:12;10553:22;;10484:98;;;:::o;10588:116::-;10639:4;10662:3;10654:11;;10692:4;10687:3;10683:14;10675:22;;10588:116;;;:::o;10710:154::-;10753:11;10789:29;10813:3;10807:10;10789:29;:::i;:::-;10852:5;10828:29;;10765:99;10710:154;;;:::o;10870:594::-;10954:5;10985:38;11017:5;10985:38;:::i;:::-;11048:5;11075:40;11109:5;11075:40;:::i;:::-;11063:52;;11134:35;11160:8;11134:35;:::i;:::-;11125:44;;11193:2;11185:6;11182:14;11179:278;;;11264:169;11349:66;11319:6;11315:2;11311:15;11308:1;11304:23;11264:169;:::i;:::-;11241:5;11220:227;11211:236;;11179:278;10960:504;;10870:594;;;:::o;2733:14066:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_EIP712Name_2169":{"entryPoint":1265,"id":2169,"parameterSlots":0,"returnSlots":1},"@_EIP712Version_2181":{"entryPoint":1324,"id":2181,"parameterSlots":0,"returnSlots":1},"@_buildDomainSeparator_2099":{"entryPoint":3821,"id":2099,"parameterSlots":0,"returnSlots":1},"@_checkForwardedGas_673":{"entryPoint":2985,"id":673,"parameterSlots":2,"returnSlots":0},"@_domainSeparatorV4_2078":{"entryPoint":3249,"id":2078,"parameterSlots":0,"returnSlots":1},"@_execute_612":{"entryPoint":1383,"id":612,"parameterSlots":2,"returnSlots":1},"@_hashTypedDataV4_2115":{"entryPoint":3015,"id":2115,"parameterSlots":1,"returnSlots":1},"@_isTrustedByTarget_654":{"entryPoint":2566,"id":654,"parameterSlots":1,"returnSlots":1},"@_recoverForwardRequestSigner_500":{"entryPoint":2185,"id":500,"parameterSlots":1,"returnSlots":2},"@_useNonce_999":{"entryPoint":2898,"id":999,"parameterSlots":1,"returnSlots":1},"@_validate_444":{"entryPoint":1094,"id":444,"parameterSlots":1,"returnSlots":4},"@byteLength_1143":{"entryPoint":3741,"id":1143,"parameterSlots":1,"returnSlots":1},"@eip712Domain_2157":{"entryPoint":430,"id":2157,"parameterSlots":0,"returnSlots":7},"@executeBatch_402":{"entryPoint":600,"id":402,"parameterSlots":3,"returnSlots":0},"@execute_313":{"entryPoint":948,"id":313,"parameterSlots":1,"returnSlots":0},"@nonces_984":{"entryPoint":357,"id":984,"parameterSlots":1,"returnSlots":1},"@sendValue_731":{"entryPoint":1948,"id":731,"parameterSlots":2,"returnSlots":0},"@toStringWithFallback_1210":{"entryPoint":2722,"id":1210,"parameterSlots":2,"returnSlots":1},"@toString_1111":{"entryPoint":3133,"id":1111,"parameterSlots":1,"returnSlots":1},"@toTypedDataHash_2255":{"entryPoint":3432,"id":2255,"parameterSlots":2,"returnSlots":1},"@tryRecover_1681":{"entryPoint":3041,"id":1681,"parameterSlots":2,"returnSlots":3},"@tryRecover_1869":{"entryPoint":3497,"id":1869,"parameterSlots":4,"returnSlots":3},"@verify_279":{"entryPoint":306,"id":279,"parameterSlots":1,"returnSlots":1},"abi_decode_t_address":{"entryPoint":4217,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_payable":{"entryPoint":5042,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_struct$_ForwardRequestData_$202_calldata_ptr_$dyn_calldata_ptr":{"entryPoint":4915,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_struct$_ForwardRequestData_$202_calldata_ptr":{"entryPoint":3986,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint48":{"entryPoint":5561,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":4238,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_array$_t_struct$_ForwardRequestData_$202_calldata_ptr_$dyn_calldata_ptrt_address_payable":{"entryPoint":5063,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_struct$_ForwardRequestData_$202_calldata_ptr":{"entryPoint":4017,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint48":{"entryPoint":5582,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":4637,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":4538,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack":{"entryPoint":5921,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":4674,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":4102,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes1_to_t_bytes1_fromStack":{"entryPoint":4379,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":4563,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":5835,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":4481,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":6057,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":4622,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":4293,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint48_to_t_uint48_fromStack":{"entryPoint":5668,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":6516,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":6113,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_calldata_ptr_t_address__to_t_bytes_memory_ptr_t_address__nonPadded_inplace_fromStack_reversed":{"entryPoint":5944,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":6092,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":6027,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":5627,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":4117,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":4768,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint48_t_bytes32__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint48_t_bytes32__fromStack_reversed":{"entryPoint":6138,"id":null,"parameterSlots":9,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":6600,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":6531,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":4308,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed":{"entryPoint":5986,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":5479,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint48__to_t_uint48__fromStack_reversed":{"entryPoint":5683,"id":null,"parameterSlots":2,"returnSlots":1},"access_calldata_tail_t_bytes_calldata_ptr":{"entryPoint":5710,"id":null,"parameterSlots":2,"returnSlots":2},"access_calldata_tail_t_struct$_ForwardRequestData_$202_calldata_ptr":{"entryPoint":5268,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":4606,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":4578,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":4394,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":4661,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":4589,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":5809,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":4405,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":5355,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":6454,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":4176,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_address_payable":{"entryPoint":5001,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":4090,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes1":{"entryPoint":4335,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":4553,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":4144,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":4283,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint48":{"entryPoint":5520,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":6503,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":5820,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":4422,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":6358,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":5407,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_address":{"entryPoint":5903,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint160":{"entryPoint":5885,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":5308,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":6407,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":6264,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":6311,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":5206,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":5159,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":4905,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":4900,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a":{"entryPoint":5258,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d":{"entryPoint":3981,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad":{"entryPoint":5253,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":4910,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e":{"entryPoint":5263,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":3976,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":3971,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":4464,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_96":{"entryPoint":5872,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":6054,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":4194,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address_payable":{"entryPoint":5019,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint48":{"entryPoint":5538,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:20817:16","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:16","statements":[{"nodeType":"YulAssignment","src":"57:19:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:16","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:16"},"nodeType":"YulFunctionCall","src":"67:9:16"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:16"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:16","type":""}],"src":"7:75:16"},{"body":{"nodeType":"YulBlock","src":"177:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:16"},"nodeType":"YulFunctionCall","src":"187:12:16"},"nodeType":"YulExpressionStatement","src":"187:12:16"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:16"},{"body":{"nodeType":"YulBlock","src":"300:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:16"},"nodeType":"YulFunctionCall","src":"310:12:16"},"nodeType":"YulExpressionStatement","src":"310:12:16"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:16"},{"body":{"nodeType":"YulBlock","src":"423:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:16"},"nodeType":"YulFunctionCall","src":"433:12:16"},"nodeType":"YulExpressionStatement","src":"433:12:16"}]},"name":"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d","nodeType":"YulFunctionDefinition","src":"334:117:16"},{"body":{"nodeType":"YulBlock","src":"596:153:16","statements":[{"body":{"nodeType":"YulBlock","src":"636:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d","nodeType":"YulIdentifier","src":"638:77:16"},"nodeType":"YulFunctionCall","src":"638:79:16"},"nodeType":"YulExpressionStatement","src":"638:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"617:3:16"},{"name":"offset","nodeType":"YulIdentifier","src":"622:6:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"613:3:16"},"nodeType":"YulFunctionCall","src":"613:16:16"},{"kind":"number","nodeType":"YulLiteral","src":"631:3:16","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"609:3:16"},"nodeType":"YulFunctionCall","src":"609:26:16"},"nodeType":"YulIf","src":"606:113:16"},{"nodeType":"YulAssignment","src":"728:15:16","value":{"name":"offset","nodeType":"YulIdentifier","src":"737:6:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"728:5:16"}]}]},"name":"abi_decode_t_struct$_ForwardRequestData_$202_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"574:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"582:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"590:5:16","type":""}],"src":"507:242:16"},{"body":{"nodeType":"YulBlock","src":"858:460:16","statements":[{"body":{"nodeType":"YulBlock","src":"904:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"906:77:16"},"nodeType":"YulFunctionCall","src":"906:79:16"},"nodeType":"YulExpressionStatement","src":"906:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"879:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"888:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"875:3:16"},"nodeType":"YulFunctionCall","src":"875:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"900:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"871:3:16"},"nodeType":"YulFunctionCall","src":"871:32:16"},"nodeType":"YulIf","src":"868:119:16"},{"nodeType":"YulBlock","src":"997:314:16","statements":[{"nodeType":"YulVariableDeclaration","src":"1012:45:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1043:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1054:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1039:3:16"},"nodeType":"YulFunctionCall","src":"1039:17:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1026:12:16"},"nodeType":"YulFunctionCall","src":"1026:31:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1016:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"1104:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"1106:77:16"},"nodeType":"YulFunctionCall","src":"1106:79:16"},"nodeType":"YulExpressionStatement","src":"1106:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1076:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"1084:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1073:2:16"},"nodeType":"YulFunctionCall","src":"1073:30:16"},"nodeType":"YulIf","src":"1070:117:16"},{"nodeType":"YulAssignment","src":"1201:100:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1273:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"1284:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1269:3:16"},"nodeType":"YulFunctionCall","src":"1269:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1293:7:16"}],"functionName":{"name":"abi_decode_t_struct$_ForwardRequestData_$202_calldata_ptr","nodeType":"YulIdentifier","src":"1211:57:16"},"nodeType":"YulFunctionCall","src":"1211:90:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1201:6:16"}]}]}]},"name":"abi_decode_tuple_t_struct$_ForwardRequestData_$202_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"828:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"839:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"851:6:16","type":""}],"src":"755:563:16"},{"body":{"nodeType":"YulBlock","src":"1366:48:16","statements":[{"nodeType":"YulAssignment","src":"1376:32:16","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1401:5:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1394:6:16"},"nodeType":"YulFunctionCall","src":"1394:13:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1387:6:16"},"nodeType":"YulFunctionCall","src":"1387:21:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1376:7:16"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1348:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1358:7:16","type":""}],"src":"1324:90:16"},{"body":{"nodeType":"YulBlock","src":"1479:50:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1496:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1516:5:16"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1501:14:16"},"nodeType":"YulFunctionCall","src":"1501:21:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1489:6:16"},"nodeType":"YulFunctionCall","src":"1489:34:16"},"nodeType":"YulExpressionStatement","src":"1489:34:16"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1467:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1474:3:16","type":""}],"src":"1420:109:16"},{"body":{"nodeType":"YulBlock","src":"1627:118:16","statements":[{"nodeType":"YulAssignment","src":"1637:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1649:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1660:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1645:3:16"},"nodeType":"YulFunctionCall","src":"1645:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1637:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1711:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1724:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1735:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1720:3:16"},"nodeType":"YulFunctionCall","src":"1720:17:16"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1673:37:16"},"nodeType":"YulFunctionCall","src":"1673:65:16"},"nodeType":"YulExpressionStatement","src":"1673:65:16"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1599:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1611:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1622:4:16","type":""}],"src":"1535:210:16"},{"body":{"nodeType":"YulBlock","src":"1796:81:16","statements":[{"nodeType":"YulAssignment","src":"1806:65:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1821:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"1828:42:16","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1817:3:16"},"nodeType":"YulFunctionCall","src":"1817:54:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1806:7:16"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1778:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1788:7:16","type":""}],"src":"1751:126:16"},{"body":{"nodeType":"YulBlock","src":"1928:51:16","statements":[{"nodeType":"YulAssignment","src":"1938:35:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1967:5:16"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1949:17:16"},"nodeType":"YulFunctionCall","src":"1949:24:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1938:7:16"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1910:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1920:7:16","type":""}],"src":"1883:96:16"},{"body":{"nodeType":"YulBlock","src":"2028:79:16","statements":[{"body":{"nodeType":"YulBlock","src":"2085:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2094:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2097:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2087:6:16"},"nodeType":"YulFunctionCall","src":"2087:12:16"},"nodeType":"YulExpressionStatement","src":"2087:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2051:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2076:5:16"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2058:17:16"},"nodeType":"YulFunctionCall","src":"2058:24:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2048:2:16"},"nodeType":"YulFunctionCall","src":"2048:35:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2041:6:16"},"nodeType":"YulFunctionCall","src":"2041:43:16"},"nodeType":"YulIf","src":"2038:63:16"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2021:5:16","type":""}],"src":"1985:122:16"},{"body":{"nodeType":"YulBlock","src":"2165:87:16","statements":[{"nodeType":"YulAssignment","src":"2175:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2197:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2184:12:16"},"nodeType":"YulFunctionCall","src":"2184:20:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2175:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2240:5:16"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2213:26:16"},"nodeType":"YulFunctionCall","src":"2213:33:16"},"nodeType":"YulExpressionStatement","src":"2213:33:16"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2143:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"2151:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2159:5:16","type":""}],"src":"2113:139:16"},{"body":{"nodeType":"YulBlock","src":"2324:263:16","statements":[{"body":{"nodeType":"YulBlock","src":"2370:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2372:77:16"},"nodeType":"YulFunctionCall","src":"2372:79:16"},"nodeType":"YulExpressionStatement","src":"2372:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2345:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"2354:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2341:3:16"},"nodeType":"YulFunctionCall","src":"2341:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"2366:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2337:3:16"},"nodeType":"YulFunctionCall","src":"2337:32:16"},"nodeType":"YulIf","src":"2334:119:16"},{"nodeType":"YulBlock","src":"2463:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"2478:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"2492:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2482:6:16","type":""}]},{"nodeType":"YulAssignment","src":"2507:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2542:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"2553:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2538:3:16"},"nodeType":"YulFunctionCall","src":"2538:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2562:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2517:20:16"},"nodeType":"YulFunctionCall","src":"2517:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2507:6:16"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2294:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2305:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2317:6:16","type":""}],"src":"2258:329:16"},{"body":{"nodeType":"YulBlock","src":"2638:32:16","statements":[{"nodeType":"YulAssignment","src":"2648:16:16","value":{"name":"value","nodeType":"YulIdentifier","src":"2659:5:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2648:7:16"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2620:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2630:7:16","type":""}],"src":"2593:77:16"},{"body":{"nodeType":"YulBlock","src":"2741:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2758:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2781:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2763:17:16"},"nodeType":"YulFunctionCall","src":"2763:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2751:6:16"},"nodeType":"YulFunctionCall","src":"2751:37:16"},"nodeType":"YulExpressionStatement","src":"2751:37:16"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2729:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2736:3:16","type":""}],"src":"2676:118:16"},{"body":{"nodeType":"YulBlock","src":"2898:124:16","statements":[{"nodeType":"YulAssignment","src":"2908:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2920:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2931:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2916:3:16"},"nodeType":"YulFunctionCall","src":"2916:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2908:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2988:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3001:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3012:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2997:3:16"},"nodeType":"YulFunctionCall","src":"2997:17:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"2944:43:16"},"nodeType":"YulFunctionCall","src":"2944:71:16"},"nodeType":"YulExpressionStatement","src":"2944:71:16"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2870:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2882:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2893:4:16","type":""}],"src":"2800:222:16"},{"body":{"nodeType":"YulBlock","src":"3072:105:16","statements":[{"nodeType":"YulAssignment","src":"3082:89:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3097:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"3104:66:16","type":"","value":"0xff00000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3093:3:16"},"nodeType":"YulFunctionCall","src":"3093:78:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3082:7:16"}]}]},"name":"cleanup_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3054:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3064:7:16","type":""}],"src":"3028:149:16"},{"body":{"nodeType":"YulBlock","src":"3246:52:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3263:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3285:5:16"}],"functionName":{"name":"cleanup_t_bytes1","nodeType":"YulIdentifier","src":"3268:16:16"},"nodeType":"YulFunctionCall","src":"3268:23:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3256:6:16"},"nodeType":"YulFunctionCall","src":"3256:36:16"},"nodeType":"YulExpressionStatement","src":"3256:36:16"}]},"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3234:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3241:3:16","type":""}],"src":"3183:115:16"},{"body":{"nodeType":"YulBlock","src":"3363:40:16","statements":[{"nodeType":"YulAssignment","src":"3374:22:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3390:5:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3384:5:16"},"nodeType":"YulFunctionCall","src":"3384:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3374:6:16"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3346:5:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3356:6:16","type":""}],"src":"3304:99:16"},{"body":{"nodeType":"YulBlock","src":"3505:73:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3522:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"3527:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3515:6:16"},"nodeType":"YulFunctionCall","src":"3515:19:16"},"nodeType":"YulExpressionStatement","src":"3515:19:16"},{"nodeType":"YulAssignment","src":"3543:29:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3562:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"3567:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3558:3:16"},"nodeType":"YulFunctionCall","src":"3558:14:16"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"3543:11:16"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3477:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"3482:6:16","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"3493:11:16","type":""}],"src":"3409:169:16"},{"body":{"nodeType":"YulBlock","src":"3646:184:16","statements":[{"nodeType":"YulVariableDeclaration","src":"3656:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"3665:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3660:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"3725:63:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3750:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"3755:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3746:3:16"},"nodeType":"YulFunctionCall","src":"3746:11:16"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3769:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"3774:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3765:3:16"},"nodeType":"YulFunctionCall","src":"3765:11:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3759:5:16"},"nodeType":"YulFunctionCall","src":"3759:18:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3739:6:16"},"nodeType":"YulFunctionCall","src":"3739:39:16"},"nodeType":"YulExpressionStatement","src":"3739:39:16"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3686:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"3689:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3683:2:16"},"nodeType":"YulFunctionCall","src":"3683:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3697:19:16","statements":[{"nodeType":"YulAssignment","src":"3699:15:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3708:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"3711:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3704:3:16"},"nodeType":"YulFunctionCall","src":"3704:10:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3699:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"3679:3:16","statements":[]},"src":"3675:113:16"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3808:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"3813:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3804:3:16"},"nodeType":"YulFunctionCall","src":"3804:16:16"},{"kind":"number","nodeType":"YulLiteral","src":"3822:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3797:6:16"},"nodeType":"YulFunctionCall","src":"3797:27:16"},"nodeType":"YulExpressionStatement","src":"3797:27:16"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"3628:3:16","type":""},{"name":"dst","nodeType":"YulTypedName","src":"3633:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"3638:6:16","type":""}],"src":"3584:246:16"},{"body":{"nodeType":"YulBlock","src":"3884:54:16","statements":[{"nodeType":"YulAssignment","src":"3894:38:16","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3912:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"3919:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3908:3:16"},"nodeType":"YulFunctionCall","src":"3908:14:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3928:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3924:3:16"},"nodeType":"YulFunctionCall","src":"3924:7:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3904:3:16"},"nodeType":"YulFunctionCall","src":"3904:28:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3894:6:16"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3867:5:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3877:6:16","type":""}],"src":"3836:102:16"},{"body":{"nodeType":"YulBlock","src":"4036:285:16","statements":[{"nodeType":"YulVariableDeclaration","src":"4046:53:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4093:5:16"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4060:32:16"},"nodeType":"YulFunctionCall","src":"4060:39:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4050:6:16","type":""}]},{"nodeType":"YulAssignment","src":"4108:78:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4174:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"4179:6:16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4115:58:16"},"nodeType":"YulFunctionCall","src":"4115:71:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4108:3:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4234:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"4241:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4230:3:16"},"nodeType":"YulFunctionCall","src":"4230:16:16"},{"name":"pos","nodeType":"YulIdentifier","src":"4248:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"4253:6:16"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"4195:34:16"},"nodeType":"YulFunctionCall","src":"4195:65:16"},"nodeType":"YulExpressionStatement","src":"4195:65:16"},{"nodeType":"YulAssignment","src":"4269:46:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4280:3:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4307:6:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"4285:21:16"},"nodeType":"YulFunctionCall","src":"4285:29:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4276:3:16"},"nodeType":"YulFunctionCall","src":"4276:39:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4269:3:16"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4017:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4024:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4032:3:16","type":""}],"src":"3944:377:16"},{"body":{"nodeType":"YulBlock","src":"4392:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4409:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4432:5:16"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4414:17:16"},"nodeType":"YulFunctionCall","src":"4414:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4402:6:16"},"nodeType":"YulFunctionCall","src":"4402:37:16"},"nodeType":"YulExpressionStatement","src":"4402:37:16"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4380:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4387:3:16","type":""}],"src":"4327:118:16"},{"body":{"nodeType":"YulBlock","src":"4496:32:16","statements":[{"nodeType":"YulAssignment","src":"4506:16:16","value":{"name":"value","nodeType":"YulIdentifier","src":"4517:5:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4506:7:16"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4478:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4488:7:16","type":""}],"src":"4451:77:16"},{"body":{"nodeType":"YulBlock","src":"4599:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4616:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4639:5:16"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"4621:17:16"},"nodeType":"YulFunctionCall","src":"4621:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4609:6:16"},"nodeType":"YulFunctionCall","src":"4609:37:16"},"nodeType":"YulExpressionStatement","src":"4609:37:16"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4587:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4594:3:16","type":""}],"src":"4534:118:16"},{"body":{"nodeType":"YulBlock","src":"4732:40:16","statements":[{"nodeType":"YulAssignment","src":"4743:22:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4759:5:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4753:5:16"},"nodeType":"YulFunctionCall","src":"4753:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4743:6:16"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4715:5:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4725:6:16","type":""}],"src":"4658:114:16"},{"body":{"nodeType":"YulBlock","src":"4889:73:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4906:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"4911:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4899:6:16"},"nodeType":"YulFunctionCall","src":"4899:19:16"},"nodeType":"YulExpressionStatement","src":"4899:19:16"},{"nodeType":"YulAssignment","src":"4927:29:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4946:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"4951:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4942:3:16"},"nodeType":"YulFunctionCall","src":"4942:14:16"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"4927:11:16"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4861:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"4866:6:16","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"4877:11:16","type":""}],"src":"4778:184:16"},{"body":{"nodeType":"YulBlock","src":"5040:60:16","statements":[{"nodeType":"YulAssignment","src":"5050:11:16","value":{"name":"ptr","nodeType":"YulIdentifier","src":"5058:3:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"5050:4:16"}]},{"nodeType":"YulAssignment","src":"5071:22:16","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"5083:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"5088:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5079:3:16"},"nodeType":"YulFunctionCall","src":"5079:14:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"5071:4:16"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"5027:3:16","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"5035:4:16","type":""}],"src":"4968:132:16"},{"body":{"nodeType":"YulBlock","src":"5161:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5178:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5201:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5183:17:16"},"nodeType":"YulFunctionCall","src":"5183:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5171:6:16"},"nodeType":"YulFunctionCall","src":"5171:37:16"},"nodeType":"YulExpressionStatement","src":"5171:37:16"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5149:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5156:3:16","type":""}],"src":"5106:108:16"},{"body":{"nodeType":"YulBlock","src":"5300:99:16","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5344:6:16"},{"name":"pos","nodeType":"YulIdentifier","src":"5352:3:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5310:33:16"},"nodeType":"YulFunctionCall","src":"5310:46:16"},"nodeType":"YulExpressionStatement","src":"5310:46:16"},{"nodeType":"YulAssignment","src":"5365:28:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5383:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"5388:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5379:3:16"},"nodeType":"YulFunctionCall","src":"5379:14:16"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"5365:10:16"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"5273:6:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5281:3:16","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"5289:10:16","type":""}],"src":"5220:179:16"},{"body":{"nodeType":"YulBlock","src":"5480:38:16","statements":[{"nodeType":"YulAssignment","src":"5490:22:16","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"5502:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"5507:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5498:3:16"},"nodeType":"YulFunctionCall","src":"5498:14:16"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"5490:4:16"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"5467:3:16","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"5475:4:16","type":""}],"src":"5405:113:16"},{"body":{"nodeType":"YulBlock","src":"5678:608:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5688:68:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5750:5:16"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"5702:47:16"},"nodeType":"YulFunctionCall","src":"5702:54:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5692:6:16","type":""}]},{"nodeType":"YulAssignment","src":"5765:93:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5846:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"5851:6:16"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5772:73:16"},"nodeType":"YulFunctionCall","src":"5772:86:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5765:3:16"}]},{"nodeType":"YulVariableDeclaration","src":"5867:71:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5932:5:16"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"5882:49:16"},"nodeType":"YulFunctionCall","src":"5882:56:16"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"5871:7:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5947:21:16","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"5961:7:16"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"5951:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"6037:224:16","statements":[{"nodeType":"YulVariableDeclaration","src":"6051:34:16","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6078:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6072:5:16"},"nodeType":"YulFunctionCall","src":"6072:13:16"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"6055:13:16","type":""}]},{"nodeType":"YulAssignment","src":"6098:70:16","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"6149:13:16"},{"name":"pos","nodeType":"YulIdentifier","src":"6164:3:16"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"6105:43:16"},"nodeType":"YulFunctionCall","src":"6105:63:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6098:3:16"}]},{"nodeType":"YulAssignment","src":"6181:70:16","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6244:6:16"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"6191:52:16"},"nodeType":"YulFunctionCall","src":"6191:60:16"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6181:6:16"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5999:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"6002:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5996:2:16"},"nodeType":"YulFunctionCall","src":"5996:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6010:18:16","statements":[{"nodeType":"YulAssignment","src":"6012:14:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6021:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"6024:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6017:3:16"},"nodeType":"YulFunctionCall","src":"6017:9:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6012:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"5981:14:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5983:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"5992:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5987:1:16","type":""}]}]},"src":"5977:284:16"},{"nodeType":"YulAssignment","src":"6270:10:16","value":{"name":"pos","nodeType":"YulIdentifier","src":"6277:3:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6270:3:16"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5657:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5664:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5673:3:16","type":""}],"src":"5554:732:16"},{"body":{"nodeType":"YulBlock","src":"6646:861:16","statements":[{"nodeType":"YulAssignment","src":"6656:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6668:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6679:3:16","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6664:3:16"},"nodeType":"YulFunctionCall","src":"6664:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6656:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6735:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6748:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6759:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6744:3:16"},"nodeType":"YulFunctionCall","src":"6744:17:16"}],"functionName":{"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nodeType":"YulIdentifier","src":"6693:41:16"},"nodeType":"YulFunctionCall","src":"6693:69:16"},"nodeType":"YulExpressionStatement","src":"6693:69:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6783:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6794:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6779:3:16"},"nodeType":"YulFunctionCall","src":"6779:18:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6803:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"6809:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6799:3:16"},"nodeType":"YulFunctionCall","src":"6799:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6772:6:16"},"nodeType":"YulFunctionCall","src":"6772:48:16"},"nodeType":"YulExpressionStatement","src":"6772:48:16"},{"nodeType":"YulAssignment","src":"6829:86:16","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"6901:6:16"},{"name":"tail","nodeType":"YulIdentifier","src":"6910:4:16"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6837:63:16"},"nodeType":"YulFunctionCall","src":"6837:78:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6829:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6936:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6947:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6932:3:16"},"nodeType":"YulFunctionCall","src":"6932:18:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6956:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"6962:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6952:3:16"},"nodeType":"YulFunctionCall","src":"6952:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6925:6:16"},"nodeType":"YulFunctionCall","src":"6925:48:16"},"nodeType":"YulExpressionStatement","src":"6925:48:16"},{"nodeType":"YulAssignment","src":"6982:86:16","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"7054:6:16"},{"name":"tail","nodeType":"YulIdentifier","src":"7063:4:16"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6990:63:16"},"nodeType":"YulFunctionCall","src":"6990:78:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6982:4:16"}]},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"7122:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7135:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7146:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7131:3:16"},"nodeType":"YulFunctionCall","src":"7131:18:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"7078:43:16"},"nodeType":"YulFunctionCall","src":"7078:72:16"},"nodeType":"YulExpressionStatement","src":"7078:72:16"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"7204:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7217:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7228:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7213:3:16"},"nodeType":"YulFunctionCall","src":"7213:19:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"7160:43:16"},"nodeType":"YulFunctionCall","src":"7160:73:16"},"nodeType":"YulExpressionStatement","src":"7160:73:16"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"7287:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7300:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7311:3:16","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7296:3:16"},"nodeType":"YulFunctionCall","src":"7296:19:16"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"7243:43:16"},"nodeType":"YulFunctionCall","src":"7243:73:16"},"nodeType":"YulExpressionStatement","src":"7243:73:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7337:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7348:3:16","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7333:3:16"},"nodeType":"YulFunctionCall","src":"7333:19:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7358:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"7364:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7354:3:16"},"nodeType":"YulFunctionCall","src":"7354:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7326:6:16"},"nodeType":"YulFunctionCall","src":"7326:49:16"},"nodeType":"YulExpressionStatement","src":"7326:49:16"},{"nodeType":"YulAssignment","src":"7384:116:16","value":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"7486:6:16"},{"name":"tail","nodeType":"YulIdentifier","src":"7495:4:16"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7392:93:16"},"nodeType":"YulFunctionCall","src":"7392:108:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7384:4:16"}]}]},"name":"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6570:9:16","type":""},{"name":"value6","nodeType":"YulTypedName","src":"6582:6:16","type":""},{"name":"value5","nodeType":"YulTypedName","src":"6590:6:16","type":""},{"name":"value4","nodeType":"YulTypedName","src":"6598:6:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6606:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6614:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6622:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6630:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6641:4:16","type":""}],"src":"6292:1215:16"},{"body":{"nodeType":"YulBlock","src":"7602:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7619:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7622:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7612:6:16"},"nodeType":"YulFunctionCall","src":"7612:12:16"},"nodeType":"YulExpressionStatement","src":"7612:12:16"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"7513:117:16"},{"body":{"nodeType":"YulBlock","src":"7725:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7742:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7745:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7735:6:16"},"nodeType":"YulFunctionCall","src":"7735:12:16"},"nodeType":"YulExpressionStatement","src":"7735:12:16"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"7636:117:16"},{"body":{"nodeType":"YulBlock","src":"7848:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7865:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7868:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7858:6:16"},"nodeType":"YulFunctionCall","src":"7858:12:16"},"nodeType":"YulExpressionStatement","src":"7858:12:16"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"7759:117:16"},{"body":{"nodeType":"YulBlock","src":"8061:478:16","statements":[{"body":{"nodeType":"YulBlock","src":"8110:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"8112:77:16"},"nodeType":"YulFunctionCall","src":"8112:79:16"},"nodeType":"YulExpressionStatement","src":"8112:79:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8089:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"8097:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8085:3:16"},"nodeType":"YulFunctionCall","src":"8085:17:16"},{"name":"end","nodeType":"YulIdentifier","src":"8104:3:16"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8081:3:16"},"nodeType":"YulFunctionCall","src":"8081:27:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8074:6:16"},"nodeType":"YulFunctionCall","src":"8074:35:16"},"nodeType":"YulIf","src":"8071:122:16"},{"nodeType":"YulAssignment","src":"8202:30:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8225:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8212:12:16"},"nodeType":"YulFunctionCall","src":"8212:20:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8202:6:16"}]},{"body":{"nodeType":"YulBlock","src":"8275:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"8277:77:16"},"nodeType":"YulFunctionCall","src":"8277:79:16"},"nodeType":"YulExpressionStatement","src":"8277:79:16"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8247:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"8255:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8244:2:16"},"nodeType":"YulFunctionCall","src":"8244:30:16"},"nodeType":"YulIf","src":"8241:117:16"},{"nodeType":"YulAssignment","src":"8367:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8383:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"8391:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8379:3:16"},"nodeType":"YulFunctionCall","src":"8379:17:16"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"8367:8:16"}]},{"body":{"nodeType":"YulBlock","src":"8450:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"8452:77:16"},"nodeType":"YulFunctionCall","src":"8452:79:16"},"nodeType":"YulExpressionStatement","src":"8452:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"8415:8:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8429:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"8437:4:16","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8425:3:16"},"nodeType":"YulFunctionCall","src":"8425:17:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8411:3:16"},"nodeType":"YulFunctionCall","src":"8411:32:16"},{"name":"end","nodeType":"YulIdentifier","src":"8445:3:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8408:2:16"},"nodeType":"YulFunctionCall","src":"8408:41:16"},"nodeType":"YulIf","src":"8405:128:16"}]},"name":"abi_decode_t_array$_t_struct$_ForwardRequestData_$202_calldata_ptr_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8028:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"8036:3:16","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"8044:8:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"8054:6:16","type":""}],"src":"7934:605:16"},{"body":{"nodeType":"YulBlock","src":"8598:51:16","statements":[{"nodeType":"YulAssignment","src":"8608:35:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8637:5:16"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"8619:17:16"},"nodeType":"YulFunctionCall","src":"8619:24:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"8608:7:16"}]}]},"name":"cleanup_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8580:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"8590:7:16","type":""}],"src":"8545:104:16"},{"body":{"nodeType":"YulBlock","src":"8706:87:16","statements":[{"body":{"nodeType":"YulBlock","src":"8771:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8780:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8783:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8773:6:16"},"nodeType":"YulFunctionCall","src":"8773:12:16"},"nodeType":"YulExpressionStatement","src":"8773:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8729:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8762:5:16"}],"functionName":{"name":"cleanup_t_address_payable","nodeType":"YulIdentifier","src":"8736:25:16"},"nodeType":"YulFunctionCall","src":"8736:32:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8726:2:16"},"nodeType":"YulFunctionCall","src":"8726:43:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8719:6:16"},"nodeType":"YulFunctionCall","src":"8719:51:16"},"nodeType":"YulIf","src":"8716:71:16"}]},"name":"validator_revert_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8699:5:16","type":""}],"src":"8655:138:16"},{"body":{"nodeType":"YulBlock","src":"8859:95:16","statements":[{"nodeType":"YulAssignment","src":"8869:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8891:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8878:12:16"},"nodeType":"YulFunctionCall","src":"8878:20:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8869:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8942:5:16"}],"functionName":{"name":"validator_revert_t_address_payable","nodeType":"YulIdentifier","src":"8907:34:16"},"nodeType":"YulFunctionCall","src":"8907:41:16"},"nodeType":"YulExpressionStatement","src":"8907:41:16"}]},"name":"abi_decode_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8837:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"8845:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"8853:5:16","type":""}],"src":"8799:155:16"},{"body":{"nodeType":"YulBlock","src":"9123:631:16","statements":[{"body":{"nodeType":"YulBlock","src":"9169:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9171:77:16"},"nodeType":"YulFunctionCall","src":"9171:79:16"},"nodeType":"YulExpressionStatement","src":"9171:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9144:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"9153:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9140:3:16"},"nodeType":"YulFunctionCall","src":"9140:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"9165:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9136:3:16"},"nodeType":"YulFunctionCall","src":"9136:32:16"},"nodeType":"YulIf","src":"9133:119:16"},{"nodeType":"YulBlock","src":"9262:349:16","statements":[{"nodeType":"YulVariableDeclaration","src":"9277:45:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9308:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9319:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9304:3:16"},"nodeType":"YulFunctionCall","src":"9304:17:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9291:12:16"},"nodeType":"YulFunctionCall","src":"9291:31:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9281:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"9369:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"9371:77:16"},"nodeType":"YulFunctionCall","src":"9371:79:16"},"nodeType":"YulExpressionStatement","src":"9371:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9341:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"9349:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9338:2:16"},"nodeType":"YulFunctionCall","src":"9338:30:16"},"nodeType":"YulIf","src":"9335:117:16"},{"nodeType":"YulAssignment","src":"9466:135:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9573:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"9584:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9569:3:16"},"nodeType":"YulFunctionCall","src":"9569:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9593:7:16"}],"functionName":{"name":"abi_decode_t_array$_t_struct$_ForwardRequestData_$202_calldata_ptr_$dyn_calldata_ptr","nodeType":"YulIdentifier","src":"9484:84:16"},"nodeType":"YulFunctionCall","src":"9484:117:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9466:6:16"},{"name":"value1","nodeType":"YulIdentifier","src":"9474:6:16"}]}]},{"nodeType":"YulBlock","src":"9621:126:16","statements":[{"nodeType":"YulVariableDeclaration","src":"9636:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"9650:2:16","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9640:6:16","type":""}]},{"nodeType":"YulAssignment","src":"9666:71:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9709:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"9720:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9705:3:16"},"nodeType":"YulFunctionCall","src":"9705:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9729:7:16"}],"functionName":{"name":"abi_decode_t_address_payable","nodeType":"YulIdentifier","src":"9676:28:16"},"nodeType":"YulFunctionCall","src":"9676:61:16"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"9666:6:16"}]}]}]},"name":"abi_decode_tuple_t_array$_t_struct$_ForwardRequestData_$202_calldata_ptr_$dyn_calldata_ptrt_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9077:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9088:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9100:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9108:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9116:6:16","type":""}],"src":"8960:794:16"},{"body":{"nodeType":"YulBlock","src":"9788:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9805:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9808:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9798:6:16"},"nodeType":"YulFunctionCall","src":"9798:88:16"},"nodeType":"YulExpressionStatement","src":"9798:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9902:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9905:4:16","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9895:6:16"},"nodeType":"YulFunctionCall","src":"9895:15:16"},"nodeType":"YulExpressionStatement","src":"9895:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9926:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9929:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9919:6:16"},"nodeType":"YulFunctionCall","src":"9919:15:16"},"nodeType":"YulExpressionStatement","src":"9919:15:16"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"9760:180:16"},{"body":{"nodeType":"YulBlock","src":"9974:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9991:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9994:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9984:6:16"},"nodeType":"YulFunctionCall","src":"9984:88:16"},"nodeType":"YulExpressionStatement","src":"9984:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10088:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10091:4:16","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10081:6:16"},"nodeType":"YulFunctionCall","src":"10081:15:16"},"nodeType":"YulExpressionStatement","src":"10081:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10112:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10115:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10105:6:16"},"nodeType":"YulFunctionCall","src":"10105:15:16"},"nodeType":"YulExpressionStatement","src":"10105:15:16"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"9946:180:16"},{"body":{"nodeType":"YulBlock","src":"10221:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10238:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10241:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10231:6:16"},"nodeType":"YulFunctionCall","src":"10231:12:16"},"nodeType":"YulExpressionStatement","src":"10231:12:16"}]},"name":"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad","nodeType":"YulFunctionDefinition","src":"10132:117:16"},{"body":{"nodeType":"YulBlock","src":"10344:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10361:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10364:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10354:6:16"},"nodeType":"YulFunctionCall","src":"10354:12:16"},"nodeType":"YulExpressionStatement","src":"10354:12:16"}]},"name":"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a","nodeType":"YulFunctionDefinition","src":"10255:117:16"},{"body":{"nodeType":"YulBlock","src":"10467:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10484:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10487:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10477:6:16"},"nodeType":"YulFunctionCall","src":"10477:12:16"},"nodeType":"YulExpressionStatement","src":"10477:12:16"}]},"name":"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e","nodeType":"YulFunctionDefinition","src":"10378:117:16"},{"body":{"nodeType":"YulBlock","src":"10609:295:16","statements":[{"nodeType":"YulVariableDeclaration","src":"10619:51:16","value":{"arguments":[{"name":"ptr_to_tail","nodeType":"YulIdentifier","src":"10658:11:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10645:12:16"},"nodeType":"YulFunctionCall","src":"10645:25:16"},"variables":[{"name":"rel_offset_of_tail","nodeType":"YulTypedName","src":"10623:18:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"10764:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad","nodeType":"YulIdentifier","src":"10766:77:16"},"nodeType":"YulFunctionCall","src":"10766:79:16"},"nodeType":"YulExpressionStatement","src":"10766:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"10693:18:16"},{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"10721:12:16"},"nodeType":"YulFunctionCall","src":"10721:14:16"},{"name":"base_ref","nodeType":"YulIdentifier","src":"10737:8:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10717:3:16"},"nodeType":"YulFunctionCall","src":"10717:29:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10752:4:16","type":"","value":"0xe0"},{"kind":"number","nodeType":"YulLiteral","src":"10758:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10748:3:16"},"nodeType":"YulFunctionCall","src":"10748:12:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10713:3:16"},"nodeType":"YulFunctionCall","src":"10713:48:16"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10689:3:16"},"nodeType":"YulFunctionCall","src":"10689:73:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10682:6:16"},"nodeType":"YulFunctionCall","src":"10682:81:16"},"nodeType":"YulIf","src":"10679:168:16"},{"nodeType":"YulAssignment","src":"10856:41:16","value":{"arguments":[{"name":"base_ref","nodeType":"YulIdentifier","src":"10868:8:16"},{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"10878:18:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10864:3:16"},"nodeType":"YulFunctionCall","src":"10864:33:16"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"10856:4:16"}]}]},"name":"access_calldata_tail_t_struct$_ForwardRequestData_$202_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"base_ref","nodeType":"YulTypedName","src":"10578:8:16","type":""},{"name":"ptr_to_tail","nodeType":"YulTypedName","src":"10588:11:16","type":""}],"returnVariables":[{"name":"addr","nodeType":"YulTypedName","src":"10604:4:16","type":""}],"src":"10501:403:16"},{"body":{"nodeType":"YulBlock","src":"10938:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10955:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10958:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10948:6:16"},"nodeType":"YulFunctionCall","src":"10948:88:16"},"nodeType":"YulExpressionStatement","src":"10948:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11052:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11055:4:16","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11045:6:16"},"nodeType":"YulFunctionCall","src":"11045:15:16"},"nodeType":"YulExpressionStatement","src":"11045:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11076:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11079:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11069:6:16"},"nodeType":"YulFunctionCall","src":"11069:15:16"},"nodeType":"YulExpressionStatement","src":"11069:15:16"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"10910:180:16"},{"body":{"nodeType":"YulBlock","src":"11140:147:16","statements":[{"nodeType":"YulAssignment","src":"11150:25:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11173:1:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11155:17:16"},"nodeType":"YulFunctionCall","src":"11155:20:16"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"11150:1:16"}]},{"nodeType":"YulAssignment","src":"11184:25:16","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"11207:1:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11189:17:16"},"nodeType":"YulFunctionCall","src":"11189:20:16"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"11184:1:16"}]},{"nodeType":"YulAssignment","src":"11218:16:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11229:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"11232:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11225:3:16"},"nodeType":"YulFunctionCall","src":"11225:9:16"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"11218:3:16"}]},{"body":{"nodeType":"YulBlock","src":"11258:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11260:16:16"},"nodeType":"YulFunctionCall","src":"11260:18:16"},"nodeType":"YulExpressionStatement","src":"11260:18:16"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11250:1:16"},{"name":"sum","nodeType":"YulIdentifier","src":"11253:3:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11247:2:16"},"nodeType":"YulFunctionCall","src":"11247:10:16"},"nodeType":"YulIf","src":"11244:36:16"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"11127:1:16","type":""},{"name":"y","nodeType":"YulTypedName","src":"11130:1:16","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"11136:3:16","type":""}],"src":"11096:191:16"},{"body":{"nodeType":"YulBlock","src":"11336:190:16","statements":[{"nodeType":"YulAssignment","src":"11346:33:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11373:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11355:17:16"},"nodeType":"YulFunctionCall","src":"11355:24:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"11346:5:16"}]},{"body":{"nodeType":"YulBlock","src":"11469:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11471:16:16"},"nodeType":"YulFunctionCall","src":"11471:18:16"},"nodeType":"YulExpressionStatement","src":"11471:18:16"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11394:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"11401:66:16","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11391:2:16"},"nodeType":"YulFunctionCall","src":"11391:77:16"},"nodeType":"YulIf","src":"11388:103:16"},{"nodeType":"YulAssignment","src":"11500:20:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11511:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"11518:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11507:3:16"},"nodeType":"YulFunctionCall","src":"11507:13:16"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"11500:3:16"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11322:5:16","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"11332:3:16","type":""}],"src":"11293:233:16"},{"body":{"nodeType":"YulBlock","src":"11658:206:16","statements":[{"nodeType":"YulAssignment","src":"11668:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11680:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11691:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11676:3:16"},"nodeType":"YulFunctionCall","src":"11676:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11668:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11748:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11761:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11772:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11757:3:16"},"nodeType":"YulFunctionCall","src":"11757:17:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11704:43:16"},"nodeType":"YulFunctionCall","src":"11704:71:16"},"nodeType":"YulExpressionStatement","src":"11704:71:16"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11829:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11842:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11853:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11838:3:16"},"nodeType":"YulFunctionCall","src":"11838:18:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11785:43:16"},"nodeType":"YulFunctionCall","src":"11785:72:16"},"nodeType":"YulExpressionStatement","src":"11785:72:16"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11622:9:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11634:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11642:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11653:4:16","type":""}],"src":"11532:332:16"},{"body":{"nodeType":"YulBlock","src":"11914:53:16","statements":[{"nodeType":"YulAssignment","src":"11924:37:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11939:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"11946:14:16","type":"","value":"0xffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11935:3:16"},"nodeType":"YulFunctionCall","src":"11935:26:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"11924:7:16"}]}]},"name":"cleanup_t_uint48","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11896:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"11906:7:16","type":""}],"src":"11870:97:16"},{"body":{"nodeType":"YulBlock","src":"12015:78:16","statements":[{"body":{"nodeType":"YulBlock","src":"12071:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12080:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12083:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12073:6:16"},"nodeType":"YulFunctionCall","src":"12073:12:16"},"nodeType":"YulExpressionStatement","src":"12073:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12038:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12062:5:16"}],"functionName":{"name":"cleanup_t_uint48","nodeType":"YulIdentifier","src":"12045:16:16"},"nodeType":"YulFunctionCall","src":"12045:23:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"12035:2:16"},"nodeType":"YulFunctionCall","src":"12035:34:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12028:6:16"},"nodeType":"YulFunctionCall","src":"12028:42:16"},"nodeType":"YulIf","src":"12025:62:16"}]},"name":"validator_revert_t_uint48","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12008:5:16","type":""}],"src":"11973:120:16"},{"body":{"nodeType":"YulBlock","src":"12150:86:16","statements":[{"nodeType":"YulAssignment","src":"12160:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12182:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12169:12:16"},"nodeType":"YulFunctionCall","src":"12169:20:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"12160:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12224:5:16"}],"functionName":{"name":"validator_revert_t_uint48","nodeType":"YulIdentifier","src":"12198:25:16"},"nodeType":"YulFunctionCall","src":"12198:32:16"},"nodeType":"YulExpressionStatement","src":"12198:32:16"}]},"name":"abi_decode_t_uint48","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"12128:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"12136:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"12144:5:16","type":""}],"src":"12099:137:16"},{"body":{"nodeType":"YulBlock","src":"12307:262:16","statements":[{"body":{"nodeType":"YulBlock","src":"12353:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"12355:77:16"},"nodeType":"YulFunctionCall","src":"12355:79:16"},"nodeType":"YulExpressionStatement","src":"12355:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12328:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"12337:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12324:3:16"},"nodeType":"YulFunctionCall","src":"12324:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"12349:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12320:3:16"},"nodeType":"YulFunctionCall","src":"12320:32:16"},"nodeType":"YulIf","src":"12317:119:16"},{"nodeType":"YulBlock","src":"12446:116:16","statements":[{"nodeType":"YulVariableDeclaration","src":"12461:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"12475:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12465:6:16","type":""}]},{"nodeType":"YulAssignment","src":"12490:62:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12524:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"12535:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12520:3:16"},"nodeType":"YulFunctionCall","src":"12520:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12544:7:16"}],"functionName":{"name":"abi_decode_t_uint48","nodeType":"YulIdentifier","src":"12500:19:16"},"nodeType":"YulFunctionCall","src":"12500:52:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12490:6:16"}]}]}]},"name":"abi_decode_tuple_t_uint48","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12277:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12288:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12300:6:16","type":""}],"src":"12242:327:16"},{"body":{"nodeType":"YulBlock","src":"12701:206:16","statements":[{"nodeType":"YulAssignment","src":"12711:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12723:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12734:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12719:3:16"},"nodeType":"YulFunctionCall","src":"12719:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12711:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12791:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12804:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12815:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12800:3:16"},"nodeType":"YulFunctionCall","src":"12800:17:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12747:43:16"},"nodeType":"YulFunctionCall","src":"12747:71:16"},"nodeType":"YulExpressionStatement","src":"12747:71:16"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12872:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12885:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12896:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12881:3:16"},"nodeType":"YulFunctionCall","src":"12881:18:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12828:43:16"},"nodeType":"YulFunctionCall","src":"12828:72:16"},"nodeType":"YulExpressionStatement","src":"12828:72:16"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12665:9:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12677:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12685:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12696:4:16","type":""}],"src":"12575:332:16"},{"body":{"nodeType":"YulBlock","src":"12976:52:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12993:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13015:5:16"}],"functionName":{"name":"cleanup_t_uint48","nodeType":"YulIdentifier","src":"12998:16:16"},"nodeType":"YulFunctionCall","src":"12998:23:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12986:6:16"},"nodeType":"YulFunctionCall","src":"12986:36:16"},"nodeType":"YulExpressionStatement","src":"12986:36:16"}]},"name":"abi_encode_t_uint48_to_t_uint48_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12964:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12971:3:16","type":""}],"src":"12913:115:16"},{"body":{"nodeType":"YulBlock","src":"13130:122:16","statements":[{"nodeType":"YulAssignment","src":"13140:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13152:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13163:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13148:3:16"},"nodeType":"YulFunctionCall","src":"13148:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13140:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13218:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13231:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13242:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13227:3:16"},"nodeType":"YulFunctionCall","src":"13227:17:16"}],"functionName":{"name":"abi_encode_t_uint48_to_t_uint48_fromStack","nodeType":"YulIdentifier","src":"13176:41:16"},"nodeType":"YulFunctionCall","src":"13176:69:16"},"nodeType":"YulExpressionStatement","src":"13176:69:16"}]},"name":"abi_encode_tuple_t_uint48__to_t_uint48__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13102:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13114:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13125:4:16","type":""}],"src":"13034:218:16"},{"body":{"nodeType":"YulBlock","src":"13348:634:16","statements":[{"nodeType":"YulVariableDeclaration","src":"13358:51:16","value":{"arguments":[{"name":"ptr_to_tail","nodeType":"YulIdentifier","src":"13397:11:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13384:12:16"},"nodeType":"YulFunctionCall","src":"13384:25:16"},"variables":[{"name":"rel_offset_of_tail","nodeType":"YulTypedName","src":"13362:18:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"13503:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad","nodeType":"YulIdentifier","src":"13505:77:16"},"nodeType":"YulFunctionCall","src":"13505:79:16"},"nodeType":"YulExpressionStatement","src":"13505:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"13432:18:16"},{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"13460:12:16"},"nodeType":"YulFunctionCall","src":"13460:14:16"},{"name":"base_ref","nodeType":"YulIdentifier","src":"13476:8:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13456:3:16"},"nodeType":"YulFunctionCall","src":"13456:29:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13491:4:16","type":"","value":"0x20"},{"kind":"number","nodeType":"YulLiteral","src":"13497:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13487:3:16"},"nodeType":"YulFunctionCall","src":"13487:12:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13452:3:16"},"nodeType":"YulFunctionCall","src":"13452:48:16"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13428:3:16"},"nodeType":"YulFunctionCall","src":"13428:73:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13421:6:16"},"nodeType":"YulFunctionCall","src":"13421:81:16"},"nodeType":"YulIf","src":"13418:168:16"},{"nodeType":"YulAssignment","src":"13595:41:16","value":{"arguments":[{"name":"base_ref","nodeType":"YulIdentifier","src":"13607:8:16"},{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"13617:18:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13603:3:16"},"nodeType":"YulFunctionCall","src":"13603:33:16"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"13595:4:16"}]},{"nodeType":"YulAssignment","src":"13646:28:16","value":{"arguments":[{"name":"addr","nodeType":"YulIdentifier","src":"13669:4:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13656:12:16"},"nodeType":"YulFunctionCall","src":"13656:18:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"13646:6:16"}]},{"body":{"nodeType":"YulBlock","src":"13717:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a","nodeType":"YulIdentifier","src":"13719:77:16"},"nodeType":"YulFunctionCall","src":"13719:79:16"},"nodeType":"YulExpressionStatement","src":"13719:79:16"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13689:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"13697:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13686:2:16"},"nodeType":"YulFunctionCall","src":"13686:30:16"},"nodeType":"YulIf","src":"13683:117:16"},{"nodeType":"YulAssignment","src":"13809:21:16","value":{"arguments":[{"name":"addr","nodeType":"YulIdentifier","src":"13821:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"13827:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13817:3:16"},"nodeType":"YulFunctionCall","src":"13817:13:16"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"13809:4:16"}]},{"body":{"nodeType":"YulBlock","src":"13892:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e","nodeType":"YulIdentifier","src":"13894:77:16"},"nodeType":"YulFunctionCall","src":"13894:79:16"},"nodeType":"YulExpressionStatement","src":"13894:79:16"}]},"condition":{"arguments":[{"name":"addr","nodeType":"YulIdentifier","src":"13846:4:16"},{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"13856:12:16"},"nodeType":"YulFunctionCall","src":"13856:14:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13876:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"13884:4:16","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"13872:3:16"},"nodeType":"YulFunctionCall","src":"13872:17:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13852:3:16"},"nodeType":"YulFunctionCall","src":"13852:38:16"}],"functionName":{"name":"sgt","nodeType":"YulIdentifier","src":"13842:3:16"},"nodeType":"YulFunctionCall","src":"13842:49:16"},"nodeType":"YulIf","src":"13839:136:16"}]},"name":"access_calldata_tail_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"base_ref","nodeType":"YulTypedName","src":"13309:8:16","type":""},{"name":"ptr_to_tail","nodeType":"YulTypedName","src":"13319:11:16","type":""}],"returnVariables":[{"name":"addr","nodeType":"YulTypedName","src":"13335:4:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"13341:6:16","type":""}],"src":"13258:724:16"},{"body":{"nodeType":"YulBlock","src":"14101:34:16","statements":[{"nodeType":"YulAssignment","src":"14111:18:16","value":{"name":"pos","nodeType":"YulIdentifier","src":"14126:3:16"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"14111:11:16"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14073:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"14078:6:16","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"14089:11:16","type":""}],"src":"13988:147:16"},{"body":{"nodeType":"YulBlock","src":"14205:82:16","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"14228:3:16"},{"name":"src","nodeType":"YulIdentifier","src":"14233:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"14238:6:16"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"14215:12:16"},"nodeType":"YulFunctionCall","src":"14215:30:16"},"nodeType":"YulExpressionStatement","src":"14215:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"14265:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"14270:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14261:3:16"},"nodeType":"YulFunctionCall","src":"14261:16:16"},{"kind":"number","nodeType":"YulLiteral","src":"14279:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14254:6:16"},"nodeType":"YulFunctionCall","src":"14254:27:16"},"nodeType":"YulExpressionStatement","src":"14254:27:16"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"14187:3:16","type":""},{"name":"dst","nodeType":"YulTypedName","src":"14192:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"14197:6:16","type":""}],"src":"14141:146:16"},{"body":{"nodeType":"YulBlock","src":"14433:209:16","statements":[{"nodeType":"YulAssignment","src":"14443:95:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14526:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"14531:6:16"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"14450:75:16"},"nodeType":"YulFunctionCall","src":"14450:88:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14443:3:16"}]},{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"14585:5:16"},{"name":"pos","nodeType":"YulIdentifier","src":"14592:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"14597:6:16"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"14548:36:16"},"nodeType":"YulFunctionCall","src":"14548:56:16"},"nodeType":"YulExpressionStatement","src":"14548:56:16"},{"nodeType":"YulAssignment","src":"14613:23:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14624:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"14629:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14620:3:16"},"nodeType":"YulFunctionCall","src":"14620:16:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14613:3:16"}]}]},"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"14406:5:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"14413:6:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14421:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14429:3:16","type":""}],"src":"14315:327:16"},{"body":{"nodeType":"YulBlock","src":"14690:52:16","statements":[{"nodeType":"YulAssignment","src":"14700:35:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14725:2:16","type":"","value":"96"},{"name":"value","nodeType":"YulIdentifier","src":"14729:5:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14721:3:16"},"nodeType":"YulFunctionCall","src":"14721:14:16"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"14700:8:16"}]}]},"name":"shift_left_96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14671:5:16","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"14681:8:16","type":""}],"src":"14648:94:16"},{"body":{"nodeType":"YulBlock","src":"14795:47:16","statements":[{"nodeType":"YulAssignment","src":"14805:31:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14830:5:16"}],"functionName":{"name":"shift_left_96","nodeType":"YulIdentifier","src":"14816:13:16"},"nodeType":"YulFunctionCall","src":"14816:20:16"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"14805:7:16"}]}]},"name":"leftAlign_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14777:5:16","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"14787:7:16","type":""}],"src":"14748:94:16"},{"body":{"nodeType":"YulBlock","src":"14895:53:16","statements":[{"nodeType":"YulAssignment","src":"14905:37:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14936:5:16"}],"functionName":{"name":"leftAlign_t_uint160","nodeType":"YulIdentifier","src":"14916:19:16"},"nodeType":"YulFunctionCall","src":"14916:26:16"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"14905:7:16"}]}]},"name":"leftAlign_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14877:5:16","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"14887:7:16","type":""}],"src":"14848:100:16"},{"body":{"nodeType":"YulBlock","src":"15037:74:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15054:3:16"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15097:5:16"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"15079:17:16"},"nodeType":"YulFunctionCall","src":"15079:24:16"}],"functionName":{"name":"leftAlign_t_address","nodeType":"YulIdentifier","src":"15059:19:16"},"nodeType":"YulFunctionCall","src":"15059:45:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15047:6:16"},"nodeType":"YulFunctionCall","src":"15047:58:16"},"nodeType":"YulExpressionStatement","src":"15047:58:16"}]},"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15025:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"15032:3:16","type":""}],"src":"14954:157:16"},{"body":{"nodeType":"YulBlock","src":"15289:260:16","statements":[{"nodeType":"YulAssignment","src":"15300:110:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15389:6:16"},{"name":"value1","nodeType":"YulIdentifier","src":"15397:6:16"},{"name":"pos","nodeType":"YulIdentifier","src":"15406:3:16"}],"functionName":{"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"15307:81:16"},"nodeType":"YulFunctionCall","src":"15307:103:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15300:3:16"}]},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"15482:6:16"},{"name":"pos","nodeType":"YulIdentifier","src":"15491:3:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"15420:61:16"},"nodeType":"YulFunctionCall","src":"15420:75:16"},"nodeType":"YulExpressionStatement","src":"15420:75:16"},{"nodeType":"YulAssignment","src":"15504:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15515:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"15520:2:16","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15511:3:16"},"nodeType":"YulFunctionCall","src":"15511:12:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15504:3:16"}]},{"nodeType":"YulAssignment","src":"15533:10:16","value":{"name":"pos","nodeType":"YulIdentifier","src":"15540:3:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15533:3:16"}]}]},"name":"abi_encode_tuple_packed_t_bytes_calldata_ptr_t_address__to_t_bytes_memory_ptr_t_address__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15252:3:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15258:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15266:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15274:6:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15285:3:16","type":""}],"src":"15117:432:16"},{"body":{"nodeType":"YulBlock","src":"15675:200:16","statements":[{"nodeType":"YulAssignment","src":"15685:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15697:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"15708:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15693:3:16"},"nodeType":"YulFunctionCall","src":"15693:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15685:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15765:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15778:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"15789:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15774:3:16"},"nodeType":"YulFunctionCall","src":"15774:17:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"15721:43:16"},"nodeType":"YulFunctionCall","src":"15721:71:16"},"nodeType":"YulExpressionStatement","src":"15721:71:16"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15840:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15853:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"15864:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15849:3:16"},"nodeType":"YulFunctionCall","src":"15849:18:16"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"15802:37:16"},"nodeType":"YulFunctionCall","src":"15802:66:16"},"nodeType":"YulExpressionStatement","src":"15802:66:16"}]},"name":"abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15639:9:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15651:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15659:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15670:4:16","type":""}],"src":"15555:320:16"},{"body":{"nodeType":"YulBlock","src":"15979:124:16","statements":[{"nodeType":"YulAssignment","src":"15989:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16001:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"16012:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15997:3:16"},"nodeType":"YulFunctionCall","src":"15997:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15989:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16069:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16082:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"16093:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16078:3:16"},"nodeType":"YulFunctionCall","src":"16078:17:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"16025:43:16"},"nodeType":"YulFunctionCall","src":"16025:71:16"},"nodeType":"YulExpressionStatement","src":"16025:71:16"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15951:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15963:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15974:4:16","type":""}],"src":"15881:222:16"},{"body":{"nodeType":"YulBlock","src":"16215:8:16","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16207:6:16","type":""}],"src":"16109:114:16"},{"body":{"nodeType":"YulBlock","src":"16392:235:16","statements":[{"nodeType":"YulAssignment","src":"16402:90:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16485:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"16490:1:16","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"16409:75:16"},"nodeType":"YulFunctionCall","src":"16409:83:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16402:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16590:3:16"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulIdentifier","src":"16501:88:16"},"nodeType":"YulFunctionCall","src":"16501:93:16"},"nodeType":"YulExpressionStatement","src":"16501:93:16"},{"nodeType":"YulAssignment","src":"16603:18:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16614:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"16619:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16610:3:16"},"nodeType":"YulFunctionCall","src":"16610:11:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16603:3:16"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16380:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16388:3:16","type":""}],"src":"16229:398:16"},{"body":{"nodeType":"YulBlock","src":"16821:191:16","statements":[{"nodeType":"YulAssignment","src":"16832:154:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16982:3:16"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"16839:141:16"},"nodeType":"YulFunctionCall","src":"16839:147:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16832:3:16"}]},{"nodeType":"YulAssignment","src":"16996:10:16","value":{"name":"pos","nodeType":"YulIdentifier","src":"17003:3:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16996:3:16"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16808:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16817:3:16","type":""}],"src":"16633:379:16"},{"body":{"nodeType":"YulBlock","src":"17162:147:16","statements":[{"nodeType":"YulAssignment","src":"17173:110:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17262:6:16"},{"name":"value1","nodeType":"YulIdentifier","src":"17270:6:16"},{"name":"pos","nodeType":"YulIdentifier","src":"17279:3:16"}],"functionName":{"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"17180:81:16"},"nodeType":"YulFunctionCall","src":"17180:103:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17173:3:16"}]},{"nodeType":"YulAssignment","src":"17293:10:16","value":{"name":"pos","nodeType":"YulIdentifier","src":"17300:3:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17293:3:16"}]}]},"name":"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17133:3:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17139:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17147:6:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17158:3:16","type":""}],"src":"17018:291:16"},{"body":{"nodeType":"YulBlock","src":"17607:701:16","statements":[{"nodeType":"YulAssignment","src":"17617:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17629:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17640:3:16","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17625:3:16"},"nodeType":"YulFunctionCall","src":"17625:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17617:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17698:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17711:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17722:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17707:3:16"},"nodeType":"YulFunctionCall","src":"17707:17:16"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"17654:43:16"},"nodeType":"YulFunctionCall","src":"17654:71:16"},"nodeType":"YulExpressionStatement","src":"17654:71:16"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17779:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17792:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17803:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17788:3:16"},"nodeType":"YulFunctionCall","src":"17788:18:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"17735:43:16"},"nodeType":"YulFunctionCall","src":"17735:72:16"},"nodeType":"YulExpressionStatement","src":"17735:72:16"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"17861:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17874:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17885:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17870:3:16"},"nodeType":"YulFunctionCall","src":"17870:18:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"17817:43:16"},"nodeType":"YulFunctionCall","src":"17817:72:16"},"nodeType":"YulExpressionStatement","src":"17817:72:16"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"17943:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17956:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17967:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17952:3:16"},"nodeType":"YulFunctionCall","src":"17952:18:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"17899:43:16"},"nodeType":"YulFunctionCall","src":"17899:72:16"},"nodeType":"YulExpressionStatement","src":"17899:72:16"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"18025:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18038:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"18049:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18034:3:16"},"nodeType":"YulFunctionCall","src":"18034:19:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"17981:43:16"},"nodeType":"YulFunctionCall","src":"17981:73:16"},"nodeType":"YulExpressionStatement","src":"17981:73:16"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"18108:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18121:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"18132:3:16","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18117:3:16"},"nodeType":"YulFunctionCall","src":"18117:19:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"18064:43:16"},"nodeType":"YulFunctionCall","src":"18064:73:16"},"nodeType":"YulExpressionStatement","src":"18064:73:16"},{"expression":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"18189:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18202:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"18213:3:16","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18198:3:16"},"nodeType":"YulFunctionCall","src":"18198:19:16"}],"functionName":{"name":"abi_encode_t_uint48_to_t_uint48_fromStack","nodeType":"YulIdentifier","src":"18147:41:16"},"nodeType":"YulFunctionCall","src":"18147:71:16"},"nodeType":"YulExpressionStatement","src":"18147:71:16"},{"expression":{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"18272:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18285:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"18296:3:16","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18281:3:16"},"nodeType":"YulFunctionCall","src":"18281:19:16"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"18228:43:16"},"nodeType":"YulFunctionCall","src":"18228:73:16"},"nodeType":"YulExpressionStatement","src":"18228:73:16"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint48_t_bytes32__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint48_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17523:9:16","type":""},{"name":"value7","nodeType":"YulTypedName","src":"17535:6:16","type":""},{"name":"value6","nodeType":"YulTypedName","src":"17543:6:16","type":""},{"name":"value5","nodeType":"YulTypedName","src":"17551:6:16","type":""},{"name":"value4","nodeType":"YulTypedName","src":"17559:6:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"17567:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"17575:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17583:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17591:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17602:4:16","type":""}],"src":"17315:993:16"},{"body":{"nodeType":"YulBlock","src":"18342:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18359:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18362:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18352:6:16"},"nodeType":"YulFunctionCall","src":"18352:88:16"},"nodeType":"YulExpressionStatement","src":"18352:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18456:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"18459:4:16","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18449:6:16"},"nodeType":"YulFunctionCall","src":"18449:15:16"},"nodeType":"YulExpressionStatement","src":"18449:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18480:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18483:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18473:6:16"},"nodeType":"YulFunctionCall","src":"18473:15:16"},"nodeType":"YulExpressionStatement","src":"18473:15:16"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"18314:180:16"},{"body":{"nodeType":"YulBlock","src":"18528:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18545:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18548:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18538:6:16"},"nodeType":"YulFunctionCall","src":"18538:88:16"},"nodeType":"YulExpressionStatement","src":"18538:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18642:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"18645:4:16","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18635:6:16"},"nodeType":"YulFunctionCall","src":"18635:15:16"},"nodeType":"YulExpressionStatement","src":"18635:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18666:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18669:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18659:6:16"},"nodeType":"YulFunctionCall","src":"18659:15:16"},"nodeType":"YulExpressionStatement","src":"18659:15:16"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"18500:180:16"},{"body":{"nodeType":"YulBlock","src":"18737:269:16","statements":[{"nodeType":"YulAssignment","src":"18747:22:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"18761:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"18767:1:16","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"18757:3:16"},"nodeType":"YulFunctionCall","src":"18757:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"18747:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"18778:38:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"18808:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"18814:1:16","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18804:3:16"},"nodeType":"YulFunctionCall","src":"18804:12:16"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"18782:18:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"18855:51:16","statements":[{"nodeType":"YulAssignment","src":"18869:27:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"18883:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"18891:4:16","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18879:3:16"},"nodeType":"YulFunctionCall","src":"18879:17:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"18869:6:16"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"18835:18:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18828:6:16"},"nodeType":"YulFunctionCall","src":"18828:26:16"},"nodeType":"YulIf","src":"18825:81:16"},{"body":{"nodeType":"YulBlock","src":"18958:42:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"18972:16:16"},"nodeType":"YulFunctionCall","src":"18972:18:16"},"nodeType":"YulExpressionStatement","src":"18972:18:16"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"18922:18:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"18945:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"18953:2:16","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18942:2:16"},"nodeType":"YulFunctionCall","src":"18942:14:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"18919:2:16"},"nodeType":"YulFunctionCall","src":"18919:38:16"},"nodeType":"YulIf","src":"18916:84:16"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"18721:4:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"18730:6:16","type":""}],"src":"18686:320:16"},{"body":{"nodeType":"YulBlock","src":"19040:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19057:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19060:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19050:6:16"},"nodeType":"YulFunctionCall","src":"19050:88:16"},"nodeType":"YulExpressionStatement","src":"19050:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19154:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"19157:4:16","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19147:6:16"},"nodeType":"YulFunctionCall","src":"19147:15:16"},"nodeType":"YulExpressionStatement","src":"19147:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19178:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19181:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19171:6:16"},"nodeType":"YulFunctionCall","src":"19171:15:16"},"nodeType":"YulExpressionStatement","src":"19171:15:16"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"19012:180:16"},{"body":{"nodeType":"YulBlock","src":"19240:143:16","statements":[{"nodeType":"YulAssignment","src":"19250:25:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19273:1:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19255:17:16"},"nodeType":"YulFunctionCall","src":"19255:20:16"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"19250:1:16"}]},{"nodeType":"YulAssignment","src":"19284:25:16","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"19307:1:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19289:17:16"},"nodeType":"YulFunctionCall","src":"19289:20:16"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"19284:1:16"}]},{"body":{"nodeType":"YulBlock","src":"19331:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"19333:16:16"},"nodeType":"YulFunctionCall","src":"19333:18:16"},"nodeType":"YulExpressionStatement","src":"19333:18:16"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"19328:1:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"19321:6:16"},"nodeType":"YulFunctionCall","src":"19321:9:16"},"nodeType":"YulIf","src":"19318:35:16"},{"nodeType":"YulAssignment","src":"19363:14:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19372:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"19375:1:16"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"19368:3:16"},"nodeType":"YulFunctionCall","src":"19368:9:16"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"19363:1:16"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"19229:1:16","type":""},{"name":"y","nodeType":"YulTypedName","src":"19232:1:16","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"19238:1:16","type":""}],"src":"19198:185:16"},{"body":{"nodeType":"YulBlock","src":"19432:43:16","statements":[{"nodeType":"YulAssignment","src":"19442:27:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19457:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"19464:4:16","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19453:3:16"},"nodeType":"YulFunctionCall","src":"19453:16:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"19442:7:16"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19414:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"19424:7:16","type":""}],"src":"19389:86:16"},{"body":{"nodeType":"YulBlock","src":"19542:51:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19559:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19580:5:16"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"19564:15:16"},"nodeType":"YulFunctionCall","src":"19564:22:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19552:6:16"},"nodeType":"YulFunctionCall","src":"19552:35:16"},"nodeType":"YulExpressionStatement","src":"19552:35:16"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19530:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"19537:3:16","type":""}],"src":"19481:112:16"},{"body":{"nodeType":"YulBlock","src":"19777:367:16","statements":[{"nodeType":"YulAssignment","src":"19787:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19799:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"19810:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19795:3:16"},"nodeType":"YulFunctionCall","src":"19795:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19787:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19868:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19881:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"19892:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19877:3:16"},"nodeType":"YulFunctionCall","src":"19877:17:16"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"19824:43:16"},"nodeType":"YulFunctionCall","src":"19824:71:16"},"nodeType":"YulExpressionStatement","src":"19824:71:16"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"19945:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19958:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"19969:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19954:3:16"},"nodeType":"YulFunctionCall","src":"19954:18:16"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"19905:39:16"},"nodeType":"YulFunctionCall","src":"19905:68:16"},"nodeType":"YulExpressionStatement","src":"19905:68:16"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"20027:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20040:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"20051:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20036:3:16"},"nodeType":"YulFunctionCall","src":"20036:18:16"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"19983:43:16"},"nodeType":"YulFunctionCall","src":"19983:72:16"},"nodeType":"YulExpressionStatement","src":"19983:72:16"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"20109:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20122:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"20133:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20118:3:16"},"nodeType":"YulFunctionCall","src":"20118:18:16"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"20065:43:16"},"nodeType":"YulFunctionCall","src":"20065:72:16"},"nodeType":"YulExpressionStatement","src":"20065:72:16"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19725:9:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"19737:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"19745:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19753:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19761:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19772:4:16","type":""}],"src":"19599:545:16"},{"body":{"nodeType":"YulBlock","src":"20360:454:16","statements":[{"nodeType":"YulAssignment","src":"20370:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20382:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"20393:3:16","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20378:3:16"},"nodeType":"YulFunctionCall","src":"20378:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20370:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20451:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20464:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"20475:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20460:3:16"},"nodeType":"YulFunctionCall","src":"20460:17:16"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"20407:43:16"},"nodeType":"YulFunctionCall","src":"20407:71:16"},"nodeType":"YulExpressionStatement","src":"20407:71:16"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"20532:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20545:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"20556:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20541:3:16"},"nodeType":"YulFunctionCall","src":"20541:18:16"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"20488:43:16"},"nodeType":"YulFunctionCall","src":"20488:72:16"},"nodeType":"YulExpressionStatement","src":"20488:72:16"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"20614:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20627:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"20638:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20623:3:16"},"nodeType":"YulFunctionCall","src":"20623:18:16"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"20570:43:16"},"nodeType":"YulFunctionCall","src":"20570:72:16"},"nodeType":"YulExpressionStatement","src":"20570:72:16"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"20696:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20709:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"20720:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20705:3:16"},"nodeType":"YulFunctionCall","src":"20705:18:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"20652:43:16"},"nodeType":"YulFunctionCall","src":"20652:72:16"},"nodeType":"YulExpressionStatement","src":"20652:72:16"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"20778:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20791:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"20802:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20787:3:16"},"nodeType":"YulFunctionCall","src":"20787:19:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"20734:43:16"},"nodeType":"YulFunctionCall","src":"20734:73:16"},"nodeType":"YulExpressionStatement","src":"20734:73:16"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20300:9:16","type":""},{"name":"value4","nodeType":"YulTypedName","src":"20312:6:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"20320:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"20328:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20336:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20344:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20355:4:16","type":""}],"src":"20150:664:16"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d() {\n        revert(0, 0)\n    }\n\n    // struct ERC2771Forwarder.ForwardRequestData\n    function abi_decode_t_struct$_ForwardRequestData_$202_calldata_ptr(offset, end) -> value {\n        if slt(sub(end, offset), 224) { revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d() }\n        value := offset\n    }\n\n    function abi_decode_tuple_t_struct$_ForwardRequestData_$202_calldata_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_struct$_ForwardRequestData_$202_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes1(value) -> cleaned {\n        cleaned := and(value, 0xff00000000000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes1_to_t_bytes1_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes1(value))\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_bytes1_to_t_bytes1_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value5,  add(headStart, 160))\n\n        mstore(add(headStart, 192), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value6,  tail)\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // struct ERC2771Forwarder.ForwardRequestData[]\n    function abi_decode_t_array$_t_struct$_ForwardRequestData_$202_calldata_ptr_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_array$_t_struct$_ForwardRequestData_$202_calldata_ptr_$dyn_calldata_ptrt_address_payable(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_array$_t_struct$_ForwardRequestData_$202_calldata_ptr_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value2 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() {\n        revert(0, 0)\n    }\n\n    function revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a() {\n        revert(0, 0)\n    }\n\n    function revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e() {\n        revert(0, 0)\n    }\n\n    function access_calldata_tail_t_struct$_ForwardRequestData_$202_calldata_ptr(base_ref, ptr_to_tail) -> addr {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, sub(sub(calldatasize(), base_ref), sub(0xe0, 1)))) { revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() }\n        addr := add(base_ref, rel_offset_of_tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_uint48(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffff)\n    }\n\n    function validator_revert_t_uint48(value) {\n        if iszero(eq(value, cleanup_t_uint48(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint48(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint48(value)\n    }\n\n    function abi_decode_tuple_t_uint48(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint48(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_t_uint48_to_t_uint48_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint48(value))\n    }\n\n    function abi_encode_tuple_t_uint48__to_t_uint48__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint48_to_t_uint48_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function access_calldata_tail_t_bytes_calldata_ptr(base_ref, ptr_to_tail) -> addr, length {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, sub(sub(calldatasize(), base_ref), sub(0x20, 1)))) { revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() }\n        addr := add(base_ref, rel_offset_of_tail)\n\n        length := calldataload(addr)\n        if gt(length, 0xffffffffffffffff) { revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a() }\n        addr := add(addr, 32)\n        if sgt(addr, sub(calldatasize(), mul(length, 0x01))) { revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e() }\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, length)\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr_t_address__to_t_bytes_memory_ptr_t_address__nonPadded_inplace_fromStack_reversed(pos , value2, value1, value0) -> end {\n\n        pos := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0, value1,  pos)\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value2,  pos)\n        pos := add(pos, 20)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0, value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint48_t_bytes32__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint48_t_bytes32__fromStack_reversed(headStart , value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint48_to_t_uint48_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value7,  add(headStart, 224))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n}\n","id":16,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"1976":[{"length":32,"start":3380}],"1978":[{"length":32,"start":3339}],"1980":[{"length":32,"start":3253}],"1982":[{"length":32,"start":3858}],"1984":[{"length":32,"start":3891}],"1987":[{"length":32,"start":1274}],"1990":[{"length":32,"start":1333}]},"linkReferences":{},"object":"60806040526004361061004a5760003560e01c806319d8d38c1461004f5780637ecebe001461008c57806384b0196e146100c9578063ccf96b4a146100fa578063df905caf14610116575b600080fd5b34801561005b57600080fd5b5061007660048036038101906100719190610fb1565b610132565b6040516100839190611015565b60405180910390f35b34801561009857600080fd5b506100b360048036038101906100ae919061108e565b610165565b6040516100c091906110d4565b60405180910390f35b3480156100d557600080fd5b506100de6101ae565b6040516100f197969594939291906112a0565b60405180910390f35b610114600480360381019061010f91906113c7565b610258565b005b610130600480360381019061012b9190610fb1565b6103b4565b005b60008060008061014185610446565b509250925092508280156101525750815b801561015b5750805b9350505050919050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000606080600080600060606101c26104f1565b6101ca61052c565b46306000801b600067ffffffffffffffff8111156101eb576101ea611427565b5b6040519080825280602002602001820160405280156102195781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614905060008060005b86869050811015610352578686828181106102af576102ae611456565b5b90506020028101906102c19190611494565b60400135836102d091906114eb565b925060006103028888848181106102ea576102e9611456565b5b90506020028101906102fc9190611494565b86610567565b9050806103405787878381811061031c5761031b611456565b5b905060200281019061032e9190611494565b604001358361033d91906114eb565b92505b508061034b9061151f565b9050610291565b503482146103995781346040517f70647f79000000000000000000000000000000000000000000000000000000008152600401610390929190611567565b60405180910390fd5b600081146103ac576103ab848261079c565b5b505050505050565b80604001353414610402578060400135346040517f70647f790000000000000000000000000000000000000000000000000000000081526004016103f9929190611567565b60405180910390fd5b61040d816001610567565b610443576040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b60008060008060008061045887610889565b91509150610477876020016020810190610472919061108e565b610a06565b4288608001602081019061048b91906115ce565b65ffffffffffff1610158380156104df57508860000160208101906104b0919061108e565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16145b83955095509550955050509193509193565b606061052760007f0000000000000000000000000000000000000000000000000000000000000000610aa290919063ffffffff16565b905090565b606061056260017f0000000000000000000000000000000000000000000000000000000000000000610aa290919063ffffffff16565b905090565b600080600080600061057887610446565b9350935093509350851561068757836105dc5786602001602081019061059e919061108e565b306040517fd2650cd10000000000000000000000000000000000000000000000000000000081526004016105d39291906115fb565b60405180910390fd5b82610630578660800160208101906105f491906115ce565b6040517f94eef58a0000000000000000000000000000000000000000000000000000000081526004016106279190611633565b60405180910390fd5b816106865780876000016020810190610649919061108e565b6040517fc845a05600000000000000000000000000000000000000000000000000000000815260040161067d9291906115fb565b60405180910390fd5b5b8380156106915750815b801561069a5750825b156107925760006106aa82610b52565b905060008860600135905060008960200160208101906106ca919061108e565b905060008a60400135905060008b8060a001906106e7919061164e565b8d60000160208101906106fa919061108e565b60405160200161070c93929190611738565b6040516020818303038152906040529050600080600083516020850186888af19a505a905061073b818e610ba9565b8673ffffffffffffffffffffffffffffffffffffffff167f842fb24a83793558587a3dab2be7674da4a51d09c5542d6dd354e5d0ea70813c878d604051610783929190611762565b60405180910390a25050505050505b5050505092915050565b804710156107e157306040517fcd7860590000000000000000000000000000000000000000000000000000000081526004016107d8919061178b565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff1682604051610807906117cc565b60006040518083038185875af1925050503d8060008114610844576040519150601f19603f3d011682016040523d82523d6000602084013e610849565b606091505b5050905080610884576040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b6000806000806109cd858060c001906108a2919061164e565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506109bf7f7f96328b83274ebc7c1cf4f7a3abda602b51a78b7fa1d86a2ce353d75e587cac88600001602081019061091c919061108e565b89602001602081019061092f919061108e565b8a604001358b606001356109548d600001602081019061094f919061108e565b610165565b8d608001602081019061096791906115ce565b8e8060a00190610977919061164e565b6040516109859291906117e1565b60405180910390206040516020016109a49897969594939291906117fa565b60405160208183030381529060405280519060200120610bc7565b610be190919063ffffffff16565b5091509150600060038111156109e6576109e5611878565b5b8160038111156109f9576109f8611878565b5b1482935093505050915091565b60008030604051602401610a1a919061178b565b60405160208183030381529060405263572b6c0560e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050600080600060206000855160208701895afa92503d91506000519050828015610a8b575060208210155b8015610a975750600081115b945050505050919050565b606060ff60001b8314610abf57610ab883610c3d565b9050610b4c565b818054610acb906118d6565b80601f0160208091040260200160405190810160405280929190818152602001828054610af7906118d6565b8015610b445780601f10610b1957610100808354040283529160200191610b44565b820191906000526020600020905b815481529060010190602001808311610b2757829003601f168201915b505050505090505b92915050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050559050919050565b603f8160600135610bba9190611936565b821015610bc357fe5b5050565b6000610bda610bd4610cb1565b83610d68565b9050919050565b60008060006041845103610c265760008060006020870151925060408701519150606087015160001a9050610c1888828585610da9565b955095509550505050610c36565b60006002855160001b9250925092505b9250925092565b60606000610c4a83610e9d565b90506000602067ffffffffffffffff811115610c6957610c68611427565b5b6040519080825280601f01601f191660200182016040528015610c9b5781602001600182028036833780820191505090505b5090508181528360208201528092505050919050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148015610d2d57507f000000000000000000000000000000000000000000000000000000000000000046145b15610d5a577f00000000000000000000000000000000000000000000000000000000000000009050610d65565b610d62610eed565b90505b90565b60006040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c1115610de9576000600385925092509250610e93565b600060018888888860405160008152602001604052604051610e0e9493929190611983565b6020604051602081039080840390855afa158015610e30573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e8457600060016000801b93509350935050610e93565b8060008060001b935093509350505b9450945094915050565b60008060ff8360001c169050601f811115610ee4576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000004630604051602001610f689594939291906119c8565b60405160208183030381529060405280519060200120905090565b600080fd5b600080fd5b600080fd5b600060e08284031215610fa857610fa7610f8d565b5b81905092915050565b600060208284031215610fc757610fc6610f83565b5b600082013567ffffffffffffffff811115610fe557610fe4610f88565b5b610ff184828501610f92565b91505092915050565b60008115159050919050565b61100f81610ffa565b82525050565b600060208201905061102a6000830184611006565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061105b82611030565b9050919050565b61106b81611050565b811461107657600080fd5b50565b60008135905061108881611062565b92915050565b6000602082840312156110a4576110a3610f83565b5b60006110b284828501611079565b91505092915050565b6000819050919050565b6110ce816110bb565b82525050565b60006020820190506110e960008301846110c5565b92915050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b611124816110ef565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611164578082015181840152602081019050611149565b60008484015250505050565b6000601f19601f8301169050919050565b600061118c8261112a565b6111968185611135565b93506111a6818560208601611146565b6111af81611170565b840191505092915050565b6111c381611050565b82525050565b6000819050919050565b6111dc816111c9565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611217816110bb565b82525050565b6000611229838361120e565b60208301905092915050565b6000602082019050919050565b600061124d826111e2565b61125781856111ed565b9350611262836111fe565b8060005b8381101561129357815161127a888261121d565b975061128583611235565b925050600181019050611266565b5085935050505092915050565b600060e0820190506112b5600083018a61111b565b81810360208301526112c78189611181565b905081810360408301526112db8188611181565b90506112ea60608301876110c5565b6112f760808301866111ba565b61130460a08301856111d3565b81810360c08301526113168184611242565b905098975050505050505050565b600080fd5b600080fd5b600080fd5b60008083601f84011261134957611348611324565b5b8235905067ffffffffffffffff81111561136657611365611329565b5b6020830191508360208202830111156113825761138161132e565b5b9250929050565b600061139482611030565b9050919050565b6113a481611389565b81146113af57600080fd5b50565b6000813590506113c18161139b565b92915050565b6000806000604084860312156113e0576113df610f83565b5b600084013567ffffffffffffffff8111156113fe576113fd610f88565b5b61140a86828701611333565b9350935050602061141d868287016113b2565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b60008235600160e0038336030381126114b0576114af611485565b5b80830191505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006114f6826110bb565b9150611501836110bb565b9250828201905080821115611519576115186114bc565b5b92915050565b600061152a826110bb565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361155c5761155b6114bc565b5b600182019050919050565b600060408201905061157c60008301856110c5565b61158960208301846110c5565b9392505050565b600065ffffffffffff82169050919050565b6115ab81611590565b81146115b657600080fd5b50565b6000813590506115c8816115a2565b92915050565b6000602082840312156115e4576115e3610f83565b5b60006115f2848285016115b9565b91505092915050565b600060408201905061161060008301856111ba565b61161d60208301846111ba565b9392505050565b61162d81611590565b82525050565b60006020820190506116486000830184611624565b92915050565b6000808335600160200384360303811261166b5761166a611485565b5b80840192508235915067ffffffffffffffff82111561168d5761168c61148a565b5b6020830192506001820236038313156116a9576116a861148f565b5b509250929050565b600081905092915050565b82818337600083830152505050565b60006116d783856116b1565b93506116e48385846116bc565b82840190509392505050565b60008160601b9050919050565b6000611708826116f0565b9050919050565b600061171a826116fd565b9050919050565b61173261172d82611050565b61170f565b82525050565b60006117458285876116cb565b91506117518284611721565b601482019150819050949350505050565b600060408201905061177760008301856110c5565b6117846020830184611006565b9392505050565b60006020820190506117a060008301846111ba565b92915050565b50565b60006117b66000836116b1565b91506117c1826117a6565b600082019050919050565b60006117d7826117a9565b9150819050919050565b60006117ee8284866116cb565b91508190509392505050565b600061010082019050611810600083018b6111d3565b61181d602083018a6111ba565b61182a60408301896111ba565b61183760608301886110c5565b61184460808301876110c5565b61185160a08301866110c5565b61185e60c0830185611624565b61186b60e08301846111d3565b9998505050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806118ee57607f821691505b602082108103611901576119006118a7565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611941826110bb565b915061194c836110bb565b92508261195c5761195b611907565b5b828204905092915050565b600060ff82169050919050565b61197d81611967565b82525050565b600060808201905061199860008301876111d3565b6119a56020830186611974565b6119b260408301856111d3565b6119bf60608301846111d3565b95945050505050565b600060a0820190506119dd60008301886111d3565b6119ea60208301876111d3565b6119f760408301866111d3565b611a0460608301856110c5565b611a1160808301846111ba565b969550505050505056fea264697066735822122096e6dad94ac5d8bd5d4c8fab41845baed26127d21e95f714df4f5058813f5a8b64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x19D8D38C EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0xCCF96B4A EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0xDF905CAF EQ PUSH2 0x116 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x76 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x71 SWAP2 SWAP1 PUSH2 0xFB1 JUMP JUMPDEST PUSH2 0x132 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x1015 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAE SWAP2 SWAP1 PUSH2 0x108E JUMP JUMPDEST PUSH2 0x165 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x10D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDE PUSH2 0x1AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF1 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x114 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x13C7 JUMP JUMPDEST PUSH2 0x258 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x130 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12B SWAP2 SWAP1 PUSH2 0xFB1 JUMP JUMPDEST PUSH2 0x3B4 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x141 DUP6 PUSH2 0x446 JUMP JUMPDEST POP SWAP3 POP SWAP3 POP SWAP3 POP DUP3 DUP1 ISZERO PUSH2 0x152 JUMPI POP DUP2 JUMPDEST DUP1 ISZERO PUSH2 0x15B JUMPI POP DUP1 JUMPDEST SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0x1C2 PUSH2 0x4F1 JUMP JUMPDEST PUSH2 0x1CA PUSH2 0x52C JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x0 DUP1 SHL PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EB JUMPI PUSH2 0x1EA PUSH2 0x1427 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x219 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST DUP7 DUP7 SWAP1 POP DUP2 LT ISZERO PUSH2 0x352 JUMPI DUP7 DUP7 DUP3 DUP2 DUP2 LT PUSH2 0x2AF JUMPI PUSH2 0x2AE PUSH2 0x1456 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x2C1 SWAP2 SWAP1 PUSH2 0x1494 JUMP JUMPDEST PUSH1 0x40 ADD CALLDATALOAD DUP4 PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x14EB JUMP JUMPDEST SWAP3 POP PUSH1 0x0 PUSH2 0x302 DUP9 DUP9 DUP5 DUP2 DUP2 LT PUSH2 0x2EA JUMPI PUSH2 0x2E9 PUSH2 0x1456 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x2FC SWAP2 SWAP1 PUSH2 0x1494 JUMP JUMPDEST DUP7 PUSH2 0x567 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x340 JUMPI DUP8 DUP8 DUP4 DUP2 DUP2 LT PUSH2 0x31C JUMPI PUSH2 0x31B PUSH2 0x1456 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x32E SWAP2 SWAP1 PUSH2 0x1494 JUMP JUMPDEST PUSH1 0x40 ADD CALLDATALOAD DUP4 PUSH2 0x33D SWAP2 SWAP1 PUSH2 0x14EB JUMP JUMPDEST SWAP3 POP JUMPDEST POP DUP1 PUSH2 0x34B SWAP1 PUSH2 0x151F JUMP JUMPDEST SWAP1 POP PUSH2 0x291 JUMP JUMPDEST POP CALLVALUE DUP3 EQ PUSH2 0x399 JUMPI DUP2 CALLVALUE PUSH1 0x40 MLOAD PUSH32 0x70647F7900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x390 SWAP3 SWAP2 SWAP1 PUSH2 0x1567 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 EQ PUSH2 0x3AC JUMPI PUSH2 0x3AB DUP5 DUP3 PUSH2 0x79C JUMP JUMPDEST JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x40 ADD CALLDATALOAD CALLVALUE EQ PUSH2 0x402 JUMPI DUP1 PUSH1 0x40 ADD CALLDATALOAD CALLVALUE PUSH1 0x40 MLOAD PUSH32 0x70647F7900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F9 SWAP3 SWAP2 SWAP1 PUSH2 0x1567 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x40D DUP2 PUSH1 0x1 PUSH2 0x567 JUMP JUMPDEST PUSH2 0x443 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x458 DUP8 PUSH2 0x889 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x477 DUP8 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x472 SWAP2 SWAP1 PUSH2 0x108E JUMP JUMPDEST PUSH2 0xA06 JUMP JUMPDEST TIMESTAMP DUP9 PUSH1 0x80 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x48B SWAP2 SWAP1 PUSH2 0x15CE JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND LT ISZERO DUP4 DUP1 ISZERO PUSH2 0x4DF JUMPI POP DUP9 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x4B0 SWAP2 SWAP1 PUSH2 0x108E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP4 SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP POP POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x527 PUSH1 0x0 PUSH32 0x0 PUSH2 0xAA2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x562 PUSH1 0x1 PUSH32 0x0 PUSH2 0xAA2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x578 DUP8 PUSH2 0x446 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP DUP6 ISZERO PUSH2 0x687 JUMPI DUP4 PUSH2 0x5DC JUMPI DUP7 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x59E SWAP2 SWAP1 PUSH2 0x108E JUMP JUMPDEST ADDRESS PUSH1 0x40 MLOAD PUSH32 0xD2650CD100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D3 SWAP3 SWAP2 SWAP1 PUSH2 0x15FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH2 0x630 JUMPI DUP7 PUSH1 0x80 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x5F4 SWAP2 SWAP1 PUSH2 0x15CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x94EEF58A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x627 SWAP2 SWAP1 PUSH2 0x1633 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH2 0x686 JUMPI DUP1 DUP8 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x649 SWAP2 SWAP1 PUSH2 0x108E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xC845A05600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67D SWAP3 SWAP2 SWAP1 PUSH2 0x15FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP4 DUP1 ISZERO PUSH2 0x691 JUMPI POP DUP2 JUMPDEST DUP1 ISZERO PUSH2 0x69A JUMPI POP DUP3 JUMPDEST ISZERO PUSH2 0x792 JUMPI PUSH1 0x0 PUSH2 0x6AA DUP3 PUSH2 0xB52 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP9 PUSH1 0x60 ADD CALLDATALOAD SWAP1 POP PUSH1 0x0 DUP10 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x6CA SWAP2 SWAP1 PUSH2 0x108E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP11 PUSH1 0x40 ADD CALLDATALOAD SWAP1 POP PUSH1 0x0 DUP12 DUP1 PUSH1 0xA0 ADD SWAP1 PUSH2 0x6E7 SWAP2 SWAP1 PUSH2 0x164E JUMP JUMPDEST DUP14 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x6FA SWAP2 SWAP1 PUSH2 0x108E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x70C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1738 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x20 DUP6 ADD DUP7 DUP9 DUP11 CALL SWAP11 POP GAS SWAP1 POP PUSH2 0x73B DUP2 DUP15 PUSH2 0xBA9 JUMP JUMPDEST DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x842FB24A83793558587A3DAB2BE7674DA4A51D09C5542D6DD354E5D0EA70813C DUP8 DUP14 PUSH1 0x40 MLOAD PUSH2 0x783 SWAP3 SWAP2 SWAP1 PUSH2 0x1762 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMPDEST POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x7E1 JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D8 SWAP2 SWAP1 PUSH2 0x178B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x807 SWAP1 PUSH2 0x17CC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x844 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x849 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x884 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x9CD DUP6 DUP1 PUSH1 0xC0 ADD SWAP1 PUSH2 0x8A2 SWAP2 SWAP1 PUSH2 0x164E JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0x9BF PUSH32 0x7F96328B83274EBC7C1CF4F7A3ABDA602B51A78B7FA1D86A2CE353D75E587CAC DUP9 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x91C SWAP2 SWAP1 PUSH2 0x108E JUMP JUMPDEST DUP10 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x92F SWAP2 SWAP1 PUSH2 0x108E JUMP JUMPDEST DUP11 PUSH1 0x40 ADD CALLDATALOAD DUP12 PUSH1 0x60 ADD CALLDATALOAD PUSH2 0x954 DUP14 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x94F SWAP2 SWAP1 PUSH2 0x108E JUMP JUMPDEST PUSH2 0x165 JUMP JUMPDEST DUP14 PUSH1 0x80 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x967 SWAP2 SWAP1 PUSH2 0x15CE JUMP JUMPDEST DUP15 DUP1 PUSH1 0xA0 ADD SWAP1 PUSH2 0x977 SWAP2 SWAP1 PUSH2 0x164E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x985 SWAP3 SWAP2 SWAP1 PUSH2 0x17E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x9A4 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0xBE1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x9E6 JUMPI PUSH2 0x9E5 PUSH2 0x1878 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x9F9 JUMPI PUSH2 0x9F8 PUSH2 0x1878 JUMP JUMPDEST JUMPDEST EQ DUP3 SWAP4 POP SWAP4 POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 ADDRESS PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xA1A SWAP2 SWAP1 PUSH2 0x178B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH4 0x572B6C05 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 PUSH1 0x0 DUP6 MLOAD PUSH1 0x20 DUP8 ADD DUP10 GAS STATICCALL SWAP3 POP RETURNDATASIZE SWAP2 POP PUSH1 0x0 MLOAD SWAP1 POP DUP3 DUP1 ISZERO PUSH2 0xA8B JUMPI POP PUSH1 0x20 DUP3 LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xA97 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST SWAP5 POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH1 0x0 SHL DUP4 EQ PUSH2 0xABF JUMPI PUSH2 0xAB8 DUP4 PUSH2 0xC3D JUMP JUMPDEST SWAP1 POP PUSH2 0xB4C JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0xACB SWAP1 PUSH2 0x18D6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAF7 SWAP1 PUSH2 0x18D6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB44 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB19 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB44 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB27 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3F DUP2 PUSH1 0x60 ADD CALLDATALOAD PUSH2 0xBBA SWAP2 SWAP1 PUSH2 0x1936 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0xBC3 JUMPI INVALID JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBDA PUSH2 0xBD4 PUSH2 0xCB1 JUMP JUMPDEST DUP4 PUSH2 0xD68 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x41 DUP5 MLOAD SUB PUSH2 0xC26 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP8 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP8 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH2 0xC18 DUP9 DUP3 DUP6 DUP6 PUSH2 0xDA9 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0xC36 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP6 MLOAD PUSH1 0x0 SHL SWAP3 POP SWAP3 POP SWAP3 POP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xC4A DUP4 PUSH2 0xE9D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC69 JUMPI PUSH2 0xC68 PUSH2 0x1427 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC9B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xD2D JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0xD5A JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0xD65 JUMP JUMPDEST PUSH2 0xD62 PUSH2 0xEED JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0xDE9 JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xE93 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0xE0E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1983 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE30 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE84 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0xE93 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF DUP4 PUSH1 0x0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0xEE4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF68 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFA8 JUMPI PUSH2 0xFA7 PUSH2 0xF8D JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFC7 JUMPI PUSH2 0xFC6 PUSH2 0xF83 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFE5 JUMPI PUSH2 0xFE4 PUSH2 0xF88 JUMP JUMPDEST JUMPDEST PUSH2 0xFF1 DUP5 DUP3 DUP6 ADD PUSH2 0xF92 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x100F DUP2 PUSH2 0xFFA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x102A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1006 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x105B DUP3 PUSH2 0x1030 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x106B DUP2 PUSH2 0x1050 JUMP JUMPDEST DUP2 EQ PUSH2 0x1076 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1088 DUP2 PUSH2 0x1062 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10A4 JUMPI PUSH2 0x10A3 PUSH2 0xF83 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10B2 DUP5 DUP3 DUP6 ADD PUSH2 0x1079 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10CE DUP2 PUSH2 0x10BB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10E9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1124 DUP2 PUSH2 0x10EF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1164 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1149 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x118C DUP3 PUSH2 0x112A JUMP JUMPDEST PUSH2 0x1196 DUP2 DUP6 PUSH2 0x1135 JUMP JUMPDEST SWAP4 POP PUSH2 0x11A6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1146 JUMP JUMPDEST PUSH2 0x11AF DUP2 PUSH2 0x1170 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x11C3 DUP2 PUSH2 0x1050 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11DC DUP2 PUSH2 0x11C9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1217 DUP2 PUSH2 0x10BB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1229 DUP4 DUP4 PUSH2 0x120E JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x124D DUP3 PUSH2 0x11E2 JUMP JUMPDEST PUSH2 0x1257 DUP2 DUP6 PUSH2 0x11ED JUMP JUMPDEST SWAP4 POP PUSH2 0x1262 DUP4 PUSH2 0x11FE JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1293 JUMPI DUP2 MLOAD PUSH2 0x127A DUP9 DUP3 PUSH2 0x121D JUMP JUMPDEST SWAP8 POP PUSH2 0x1285 DUP4 PUSH2 0x1235 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1266 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x12B5 PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x111B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x12C7 DUP2 DUP10 PUSH2 0x1181 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x12DB DUP2 DUP9 PUSH2 0x1181 JUMP JUMPDEST SWAP1 POP PUSH2 0x12EA PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x10C5 JUMP JUMPDEST PUSH2 0x12F7 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x11BA JUMP JUMPDEST PUSH2 0x1304 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x11D3 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x1316 DUP2 DUP5 PUSH2 0x1242 JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1349 JUMPI PUSH2 0x1348 PUSH2 0x1324 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1366 JUMPI PUSH2 0x1365 PUSH2 0x1329 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1382 JUMPI PUSH2 0x1381 PUSH2 0x132E JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1394 DUP3 PUSH2 0x1030 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13A4 DUP2 PUSH2 0x1389 JUMP JUMPDEST DUP2 EQ PUSH2 0x13AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13C1 DUP2 PUSH2 0x139B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x13E0 JUMPI PUSH2 0x13DF PUSH2 0xF83 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13FE JUMPI PUSH2 0x13FD PUSH2 0xF88 JUMP JUMPDEST JUMPDEST PUSH2 0x140A DUP7 DUP3 DUP8 ADD PUSH2 0x1333 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x20 PUSH2 0x141D DUP7 DUP3 DUP8 ADD PUSH2 0x13B2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0xE0 SUB DUP4 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x14B0 JUMPI PUSH2 0x14AF PUSH2 0x1485 JUMP JUMPDEST JUMPDEST DUP1 DUP4 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x14F6 DUP3 PUSH2 0x10BB JUMP JUMPDEST SWAP2 POP PUSH2 0x1501 DUP4 PUSH2 0x10BB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1519 JUMPI PUSH2 0x1518 PUSH2 0x14BC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x152A DUP3 PUSH2 0x10BB JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x155C JUMPI PUSH2 0x155B PUSH2 0x14BC JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x157C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x10C5 JUMP JUMPDEST PUSH2 0x1589 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x10C5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH6 0xFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15AB DUP2 PUSH2 0x1590 JUMP JUMPDEST DUP2 EQ PUSH2 0x15B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15C8 DUP2 PUSH2 0x15A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15E4 JUMPI PUSH2 0x15E3 PUSH2 0xF83 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15F2 DUP5 DUP3 DUP6 ADD PUSH2 0x15B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1610 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x11BA JUMP JUMPDEST PUSH2 0x161D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x11BA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x162D DUP2 PUSH2 0x1590 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1648 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1624 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x166B JUMPI PUSH2 0x166A PUSH2 0x1485 JUMP JUMPDEST JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x168D JUMPI PUSH2 0x168C PUSH2 0x148A JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x16A9 JUMPI PUSH2 0x16A8 PUSH2 0x148F JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16D7 DUP4 DUP6 PUSH2 0x16B1 JUMP JUMPDEST SWAP4 POP PUSH2 0x16E4 DUP4 DUP6 DUP5 PUSH2 0x16BC JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1708 DUP3 PUSH2 0x16F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x171A DUP3 PUSH2 0x16FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1732 PUSH2 0x172D DUP3 PUSH2 0x1050 JUMP JUMPDEST PUSH2 0x170F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1745 DUP3 DUP6 DUP8 PUSH2 0x16CB JUMP JUMPDEST SWAP2 POP PUSH2 0x1751 DUP3 DUP5 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1777 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x10C5 JUMP JUMPDEST PUSH2 0x1784 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1006 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17A0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x11BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17B6 PUSH1 0x0 DUP4 PUSH2 0x16B1 JUMP JUMPDEST SWAP2 POP PUSH2 0x17C1 DUP3 PUSH2 0x17A6 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17D7 DUP3 PUSH2 0x17A9 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17EE DUP3 DUP5 DUP7 PUSH2 0x16CB JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x1810 PUSH1 0x0 DUP4 ADD DUP12 PUSH2 0x11D3 JUMP JUMPDEST PUSH2 0x181D PUSH1 0x20 DUP4 ADD DUP11 PUSH2 0x11BA JUMP JUMPDEST PUSH2 0x182A PUSH1 0x40 DUP4 ADD DUP10 PUSH2 0x11BA JUMP JUMPDEST PUSH2 0x1837 PUSH1 0x60 DUP4 ADD DUP9 PUSH2 0x10C5 JUMP JUMPDEST PUSH2 0x1844 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x10C5 JUMP JUMPDEST PUSH2 0x1851 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x10C5 JUMP JUMPDEST PUSH2 0x185E PUSH1 0xC0 DUP4 ADD DUP6 PUSH2 0x1624 JUMP JUMPDEST PUSH2 0x186B PUSH1 0xE0 DUP4 ADD DUP5 PUSH2 0x11D3 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x18EE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1901 JUMPI PUSH2 0x1900 PUSH2 0x18A7 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1941 DUP3 PUSH2 0x10BB JUMP JUMPDEST SWAP2 POP PUSH2 0x194C DUP4 PUSH2 0x10BB JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x195C JUMPI PUSH2 0x195B PUSH2 0x1907 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x197D DUP2 PUSH2 0x1967 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1998 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x11D3 JUMP JUMPDEST PUSH2 0x19A5 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1974 JUMP JUMPDEST PUSH2 0x19B2 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x11D3 JUMP JUMPDEST PUSH2 0x19BF PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x11D3 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x19DD PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x11D3 JUMP JUMPDEST PUSH2 0x19EA PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x11D3 JUMP JUMPDEST PUSH2 0x19F7 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x11D3 JUMP JUMPDEST PUSH2 0x1A04 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x10C5 JUMP JUMPDEST PUSH2 0x1A11 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x11BA JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP7 0xE6 0xDA 0xD9 0x4A 0xC5 0xD8 0xBD 0x5D 0x4C DUP16 0xAB COINBASE DUP5 JUMPDEST 0xAE 0xD2 PUSH2 0x27D2 0x1E SWAP6 0xF7 EQ 0xDF 0x4F POP PC DUP2 EXTCODEHASH GAS DUP12 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"2733:14066:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4845:244;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;538:107:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5144:557:10;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;7519:1264:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5605:513;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4845:244;4927:4;4944:23;4969:11;4982:16;5004:18;5014:7;5004:9;:18::i;:::-;4943:79;;;;;;;5039:18;:28;;;;;5061:6;5039:28;:43;;;;;5071:11;5039:43;5032:50;;;;;4845:244;;;:::o;538:107:5:-;598:7;624;:14;632:5;624:14;;;;;;;;;;;;;;;;617:21;;538:107;;;:::o;5144:557:10:-;5242:13;5269:18;5301:21;5336:15;5365:25;5404:12;5430:27;5533:13;:11;:13::i;:::-;5560:16;:14;:16::i;:::-;5590:13;5625:4;5652:1;5644:10;;5682:1;5668:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5482:212;;;;;;;;;;;;;;;;;;;;;5144:557;;;;;;;:::o;7519:1264:2:-;7668:11;7708:1;7682:28;;:14;:28;;;7668:42;;7721:21;7752:19;7787:9;7782:251;7802:8;;:15;;7798:1;:19;7782:251;;;7855:8;;7864:1;7855:11;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;:17;;;7838:34;;;;;:::i;:::-;;;7886:12;7901:29;7910:8;;7919:1;7910:11;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;7923:6;7901:8;:29::i;:::-;7886:44;;7949:7;7944:79;;7991:8;;8000:1;7991:11;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;:17;;;7976:32;;;;;:::i;:::-;;;7944:79;7824:209;7819:3;;;;:::i;:::-;;;7782:251;;;;8186:9;8169:13;:26;8165:121;;8250:13;8265:9;8218:57;;;;;;;;;;;;:::i;:::-;;;;;;;;8165:121;8468:1;8453:11;:16;8449:328;;8720:46;8738:14;8754:11;8720:17;:46::i;:::-;8449:328;7658:1125;;;7519:1264;;;:::o;5605:513::-;5911:7;:13;;;5898:9;:26;5894:121;;5979:7;:13;;;5994:9;5947:57;;;;;;;;;;;;:::i;:::-;;;;;;;;5894:121;6030:23;6039:7;6048:4;6030:8;:23::i;:::-;6025:87;;6076:25;;;;;;;;;;;;;;6025:87;5605:513;:::o;8967:457::-;9068:23;9093:11;9106:16;9124:14;9151:12;9165:17;9186:37;9215:7;9186:28;:37::i;:::-;9150:73;;;;9255:30;9274:7;:10;;;;;;;;;;:::i;:::-;9255:18;:30::i;:::-;9319:15;9299:7;:16;;;;;;;;;;:::i;:::-;:35;;;;9348:7;:36;;;;;9372:7;:12;;;;;;;;;;:::i;:::-;9359:25;;:9;:25;;;9348:36;9398:9;9234:183;;;;;;;;;;8967:457;;;;;:::o;6021:126:10:-;6067:13;6099:41;6126:13;6099:5;:26;;:41;;;;:::i;:::-;6092:48;;6021:126;:::o;6473:135::-;6522:13;6554:47;6584:16;6554:8;:29;;:47;;;;:::i;:::-;6547:54;;6473:135;:::o;11009:1643:2:-;11138:12;11163:23;11188:11;11201:16;11219:14;11237:18;11247:7;11237:9;:18::i;:::-;11162:93;;;;;;;;11453:19;11449:402;;;11493:18;11488:115;;11562:7;:10;;;;;;;;;;:::i;:::-;11582:4;11538:50;;;;;;;;;;;;:::i;:::-;;;;;;;;11488:115;11622:6;11617:101;;11686:7;:16;;;;;;;;;;:::i;:::-;11655:48;;;;;;;;;;;:::i;:::-;;;;;;;;11617:101;11737:11;11732:109;;11805:6;11813:7;:12;;;;;;;;;;:::i;:::-;11775:51;;;;;;;;;;;;:::i;:::-;;;;;;;;11732:109;11449:402;11938:18;:33;;;;;11960:11;11938:33;:43;;;;;11975:6;11938:43;11934:712;;;12082:20;12105:17;12115:6;12105:9;:17::i;:::-;12082:40;;12137:14;12154:7;:11;;;12137:28;;12179:10;12192:7;:10;;;;;;;;;;:::i;:::-;12179:23;;12216:13;12232:7;:13;;;12216:29;;12259:17;12296:7;:12;;;;;;;;:::i;:::-;12310:7;:12;;;;;;;;;;:::i;:::-;12279:44;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;12259:64;;12338:15;12463:1;12460;12453:4;12447:11;12440:4;12434;12430:15;12423:5;12419:2;12411:6;12406:59;12395:70;;12493:5;12482:16;;12526:36;12545:7;12554;12526:18;:36::i;:::-;12605:6;12582:53;;;12613:12;12627:7;12582:53;;;;;;;:::i;:::-;;;;;;;;11983:663;;;;;;11934:712;11152:1500;;;;11009:1643;;;;:::o;1531:331:3:-;1640:6;1616:21;:30;1612:109;;;1704:4;1669:41;;;;;;;;;;;:::i;:::-;;;;;;;;1612:109;1732:12;1750:9;:14;;1772:6;1750:33;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1731:52;;;1798:7;1793:63;;1828:17;;;;;;;;;;;;;;1793:63;1602:260;1531:331;;:::o;9716:709:2:-;9836:4;9842:7;9862:17;9881:22;9909:445;10336:7;:17;;;;;;;;:::i;:::-;9909:445;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:415;3070:141;10045:7;:12;;;;;;;;;;:::i;:::-;10079:7;:10;;;;;;;;;;:::i;:::-;10111:7;:13;;;10146:7;:11;;;10179:20;10186:7;:12;;;;;;;;;;:::i;:::-;10179:6;:20::i;:::-;10221:7;:16;;;;;;;;;;:::i;:::-;10269:7;:12;;;;;;;;:::i;:::-;10259:23;;;;;;;:::i;:::-;;;;;;;;9966:334;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;9939:375;;;;;;9909:16;:415::i;:::-;:426;;:445;;;;:::i;:::-;9861:493;;;;;10380:26;10373:33;;;;;;;;:::i;:::-;;:3;:33;;;;;;;;:::i;:::-;;;10408:9;10365:53;;;;;;9716:709;;;:::o;12875:1104::-;12941:4;12957:26;13045:4;12986:66;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12957:95;;13063:12;13085:18;13113:19;13813:4;13810:1;13794:13;13788:20;13781:4;13766:13;13762:24;13754:6;13747:5;13736:82;13725:93;;13845:16;13831:30;;13895:1;13889:8;13874:23;;13924:7;:29;;;;;13949:4;13935:10;:18;;13924:29;:48;;;;;13971:1;13957:11;:15;13924:48;13917:55;;;;;;12875:1104;;;:::o;3385:267:6:-;3479:13;1390:66;3537:17;;3527:5;3508:46;3504:142;;3577:15;3586:5;3577:8;:15::i;:::-;3570:22;;;;3504:142;3630:5;3623:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3385:267;;;;;:::o;759:395:5:-;819:7;1121;:14;1129:5;1121:14;;;;;;;;;;;;;;;;:16;;;;;;;;;;;;1114:23;;759:395;;;:::o;14599:2198:2:-;16365:2;16351:7;:11;;;:16;;;;:::i;:::-;16341:7;:26;16337:454;;;16758:9;16337:454;14599:2198;;:::o;4917:176:10:-;4994:7;5020:66;5053:20;:18;:20::i;:::-;5075:10;5020:32;:66::i;:::-;5013:73;;4917:176;;;:::o;2129:766:9:-;2210:7;2219:12;2233:7;2276:2;2256:9;:16;:22;2252:637;;2294:9;2317;2340:7;2592:4;2581:9;2577:20;2571:27;2566:32;;2641:4;2630:9;2626:20;2620:27;2615:32;;2698:4;2687:9;2683:20;2677:27;2674:1;2669:36;2664:41;;2739:25;2750:4;2756:1;2759;2762;2739:10;:25::i;:::-;2732:32;;;;;;;;;;;2252:637;2811:1;2815:35;2860:9;:16;2852:25;;2795:83;;;;;;2129:766;;;;;;:::o;2078:405:6:-;2137:13;2162:11;2176:16;2187:4;2176:10;:16::i;:::-;2162:30;;2280:17;2311:2;2300:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2280:34;;2402:3;2397;2390:16;2442:4;2435;2430:3;2426:14;2419:28;2473:3;2466:10;;;;2078:405;;;:::o;3845:262:10:-;3898:7;3938:11;3921:28;;3929:4;3921:28;;;:63;;;;;3970:14;3953:13;:31;3921:63;3917:184;;;4007:22;4000:29;;;;3917:184;4067:23;:21;:23::i;:::-;4060:30;;3845:262;;:::o;3353:401:11:-;3446:14;3555:4;3549:11;3585:10;3580:3;3573:23;3632:15;3625:4;3620:3;3616:14;3609:39;3684:10;3677:4;3672:3;3668:14;3661:34;3733:4;3728:3;3718:20;3708:30;;3524:224;3353:401;;;;:::o;5140:1530:9:-;5266:7;5275:12;5289:7;6199:66;6194:1;6186:10;;:79;6182:164;;;6297:1;6301:30;6333:1;6281:54;;;;;;;;6182:164;6440:14;6457:24;6467:4;6473:1;6476;6479;6457:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6440:41;;6513:1;6495:20;;:6;:20;;;6491:113;;6547:1;6551:29;6590:1;6582:10;;6531:62;;;;;;;;;6491:113;6622:6;6630:20;6660:1;6652:10;;6614:49;;;;;;;5140:1530;;;;;;;;;:::o;2555:245:6:-;2616:7;2635:14;2688:4;2679;2652:33;;:40;2635:57;;2715:2;2706:6;:11;2702:69;;;2740:20;;;;;;;;;;;;;;2702:69;2787:6;2780:13;;;2555:245;;;:::o;4113:179:10:-;4168:7;2079:95;4226:11;4239:14;4255:13;4278:4;4204:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;:::o;88:117:16:-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;507:242;590:5;631:3;622:6;617:3;613:16;609:26;606:113;;;638:79;;:::i;:::-;606:113;737:6;728:15;;507:242;;;;:::o;755:563::-;851:6;900:2;888:9;879:7;875:23;871:32;868:119;;;906:79;;:::i;:::-;868:119;1054:1;1043:9;1039:17;1026:31;1084:18;1076:6;1073:30;1070:117;;;1106:79;;:::i;:::-;1070:117;1211:90;1293:7;1284:6;1273:9;1269:22;1211:90;:::i;:::-;1201:100;;997:314;755:563;;;;:::o;1324:90::-;1358:7;1401:5;1394:13;1387:21;1376:32;;1324:90;;;:::o;1420:109::-;1501:21;1516:5;1501:21;:::i;:::-;1496:3;1489:34;1420:109;;:::o;1535:210::-;1622:4;1660:2;1649:9;1645:18;1637:26;;1673:65;1735:1;1724:9;1720:17;1711:6;1673:65;:::i;:::-;1535:210;;;;:::o;1751:126::-;1788:7;1828:42;1821:5;1817:54;1806:65;;1751:126;;;:::o;1883:96::-;1920:7;1949:24;1967:5;1949:24;:::i;:::-;1938:35;;1883:96;;;:::o;1985:122::-;2058:24;2076:5;2058:24;:::i;:::-;2051:5;2048:35;2038:63;;2097:1;2094;2087:12;2038:63;1985:122;:::o;2113:139::-;2159:5;2197:6;2184:20;2175:29;;2213:33;2240:5;2213:33;:::i;:::-;2113:139;;;;:::o;2258:329::-;2317:6;2366:2;2354:9;2345:7;2341:23;2337:32;2334:119;;;2372:79;;:::i;:::-;2334:119;2492:1;2517:53;2562:7;2553:6;2542:9;2538:22;2517:53;:::i;:::-;2507:63;;2463:117;2258:329;;;;:::o;2593:77::-;2630:7;2659:5;2648:16;;2593:77;;;:::o;2676:118::-;2763:24;2781:5;2763:24;:::i;:::-;2758:3;2751:37;2676:118;;:::o;2800:222::-;2893:4;2931:2;2920:9;2916:18;2908:26;;2944:71;3012:1;3001:9;2997:17;2988:6;2944:71;:::i;:::-;2800:222;;;;:::o;3028:149::-;3064:7;3104:66;3097:5;3093:78;3082:89;;3028:149;;;:::o;3183:115::-;3268:23;3285:5;3268:23;:::i;:::-;3263:3;3256:36;3183:115;;:::o;3304:99::-;3356:6;3390:5;3384:12;3374:22;;3304:99;;;:::o;3409:169::-;3493:11;3527:6;3522:3;3515:19;3567:4;3562:3;3558:14;3543:29;;3409:169;;;;:::o;3584:246::-;3665:1;3675:113;3689:6;3686:1;3683:13;3675:113;;;3774:1;3769:3;3765:11;3759:18;3755:1;3750:3;3746:11;3739:39;3711:2;3708:1;3704:10;3699:15;;3675:113;;;3822:1;3813:6;3808:3;3804:16;3797:27;3646:184;3584:246;;;:::o;3836:102::-;3877:6;3928:2;3924:7;3919:2;3912:5;3908:14;3904:28;3894:38;;3836:102;;;:::o;3944:377::-;4032:3;4060:39;4093:5;4060:39;:::i;:::-;4115:71;4179:6;4174:3;4115:71;:::i;:::-;4108:78;;4195:65;4253:6;4248:3;4241:4;4234:5;4230:16;4195:65;:::i;:::-;4285:29;4307:6;4285:29;:::i;:::-;4280:3;4276:39;4269:46;;4036:285;3944:377;;;;:::o;4327:118::-;4414:24;4432:5;4414:24;:::i;:::-;4409:3;4402:37;4327:118;;:::o;4451:77::-;4488:7;4517:5;4506:16;;4451:77;;;:::o;4534:118::-;4621:24;4639:5;4621:24;:::i;:::-;4616:3;4609:37;4534:118;;:::o;4658:114::-;4725:6;4759:5;4753:12;4743:22;;4658:114;;;:::o;4778:184::-;4877:11;4911:6;4906:3;4899:19;4951:4;4946:3;4942:14;4927:29;;4778:184;;;;:::o;4968:132::-;5035:4;5058:3;5050:11;;5088:4;5083:3;5079:14;5071:22;;4968:132;;;:::o;5106:108::-;5183:24;5201:5;5183:24;:::i;:::-;5178:3;5171:37;5106:108;;:::o;5220:179::-;5289:10;5310:46;5352:3;5344:6;5310:46;:::i;:::-;5388:4;5383:3;5379:14;5365:28;;5220:179;;;;:::o;5405:113::-;5475:4;5507;5502:3;5498:14;5490:22;;5405:113;;;:::o;5554:732::-;5673:3;5702:54;5750:5;5702:54;:::i;:::-;5772:86;5851:6;5846:3;5772:86;:::i;:::-;5765:93;;5882:56;5932:5;5882:56;:::i;:::-;5961:7;5992:1;5977:284;6002:6;5999:1;5996:13;5977:284;;;6078:6;6072:13;6105:63;6164:3;6149:13;6105:63;:::i;:::-;6098:70;;6191:60;6244:6;6191:60;:::i;:::-;6181:70;;6037:224;6024:1;6021;6017:9;6012:14;;5977:284;;;5981:14;6277:3;6270:10;;5678:608;;;5554:732;;;;:::o;6292:1215::-;6641:4;6679:3;6668:9;6664:19;6656:27;;6693:69;6759:1;6748:9;6744:17;6735:6;6693:69;:::i;:::-;6809:9;6803:4;6799:20;6794:2;6783:9;6779:18;6772:48;6837:78;6910:4;6901:6;6837:78;:::i;:::-;6829:86;;6962:9;6956:4;6952:20;6947:2;6936:9;6932:18;6925:48;6990:78;7063:4;7054:6;6990:78;:::i;:::-;6982:86;;7078:72;7146:2;7135:9;7131:18;7122:6;7078:72;:::i;:::-;7160:73;7228:3;7217:9;7213:19;7204:6;7160:73;:::i;:::-;7243;7311:3;7300:9;7296:19;7287:6;7243:73;:::i;:::-;7364:9;7358:4;7354:20;7348:3;7337:9;7333:19;7326:49;7392:108;7495:4;7486:6;7392:108;:::i;:::-;7384:116;;6292:1215;;;;;;;;;;:::o;7513:117::-;7622:1;7619;7612:12;7636:117;7745:1;7742;7735:12;7759:117;7868:1;7865;7858:12;7934:605;8044:8;8054:6;8104:3;8097:4;8089:6;8085:17;8081:27;8071:122;;8112:79;;:::i;:::-;8071:122;8225:6;8212:20;8202:30;;8255:18;8247:6;8244:30;8241:117;;;8277:79;;:::i;:::-;8241:117;8391:4;8383:6;8379:17;8367:29;;8445:3;8437:4;8429:6;8425:17;8415:8;8411:32;8408:41;8405:128;;;8452:79;;:::i;:::-;8405:128;7934:605;;;;;:::o;8545:104::-;8590:7;8619:24;8637:5;8619:24;:::i;:::-;8608:35;;8545:104;;;:::o;8655:138::-;8736:32;8762:5;8736:32;:::i;:::-;8729:5;8726:43;8716:71;;8783:1;8780;8773:12;8716:71;8655:138;:::o;8799:155::-;8853:5;8891:6;8878:20;8869:29;;8907:41;8942:5;8907:41;:::i;:::-;8799:155;;;;:::o;8960:794::-;9100:6;9108;9116;9165:2;9153:9;9144:7;9140:23;9136:32;9133:119;;;9171:79;;:::i;:::-;9133:119;9319:1;9308:9;9304:17;9291:31;9349:18;9341:6;9338:30;9335:117;;;9371:79;;:::i;:::-;9335:117;9484;9593:7;9584:6;9573:9;9569:22;9484:117;:::i;:::-;9466:135;;;;9262:349;9650:2;9676:61;9729:7;9720:6;9709:9;9705:22;9676:61;:::i;:::-;9666:71;;9621:126;8960:794;;;;;:::o;9760:180::-;9808:77;9805:1;9798:88;9905:4;9902:1;9895:15;9929:4;9926:1;9919:15;9946:180;9994:77;9991:1;9984:88;10091:4;10088:1;10081:15;10115:4;10112:1;10105:15;10132:117;10241:1;10238;10231:12;10255:117;10364:1;10361;10354:12;10378:117;10487:1;10484;10477:12;10501:403;10604:4;10658:11;10645:25;10758:1;10752:4;10748:12;10737:8;10721:14;10717:29;10713:48;10693:18;10689:73;10679:168;;10766:79;;:::i;:::-;10679:168;10878:18;10868:8;10864:33;10856:41;;10609:295;10501:403;;;;:::o;10910:180::-;10958:77;10955:1;10948:88;11055:4;11052:1;11045:15;11079:4;11076:1;11069:15;11096:191;11136:3;11155:20;11173:1;11155:20;:::i;:::-;11150:25;;11189:20;11207:1;11189:20;:::i;:::-;11184:25;;11232:1;11229;11225:9;11218:16;;11253:3;11250:1;11247:10;11244:36;;;11260:18;;:::i;:::-;11244:36;11096:191;;;;:::o;11293:233::-;11332:3;11355:24;11373:5;11355:24;:::i;:::-;11346:33;;11401:66;11394:5;11391:77;11388:103;;11471:18;;:::i;:::-;11388:103;11518:1;11511:5;11507:13;11500:20;;11293:233;;;:::o;11532:332::-;11653:4;11691:2;11680:9;11676:18;11668:26;;11704:71;11772:1;11761:9;11757:17;11748:6;11704:71;:::i;:::-;11785:72;11853:2;11842:9;11838:18;11829:6;11785:72;:::i;:::-;11532:332;;;;;:::o;11870:97::-;11906:7;11946:14;11939:5;11935:26;11924:37;;11870:97;;;:::o;11973:120::-;12045:23;12062:5;12045:23;:::i;:::-;12038:5;12035:34;12025:62;;12083:1;12080;12073:12;12025:62;11973:120;:::o;12099:137::-;12144:5;12182:6;12169:20;12160:29;;12198:32;12224:5;12198:32;:::i;:::-;12099:137;;;;:::o;12242:327::-;12300:6;12349:2;12337:9;12328:7;12324:23;12320:32;12317:119;;;12355:79;;:::i;:::-;12317:119;12475:1;12500:52;12544:7;12535:6;12524:9;12520:22;12500:52;:::i;:::-;12490:62;;12446:116;12242:327;;;;:::o;12575:332::-;12696:4;12734:2;12723:9;12719:18;12711:26;;12747:71;12815:1;12804:9;12800:17;12791:6;12747:71;:::i;:::-;12828:72;12896:2;12885:9;12881:18;12872:6;12828:72;:::i;:::-;12575:332;;;;;:::o;12913:115::-;12998:23;13015:5;12998:23;:::i;:::-;12993:3;12986:36;12913:115;;:::o;13034:218::-;13125:4;13163:2;13152:9;13148:18;13140:26;;13176:69;13242:1;13231:9;13227:17;13218:6;13176:69;:::i;:::-;13034:218;;;;:::o;13258:724::-;13335:4;13341:6;13397:11;13384:25;13497:1;13491:4;13487:12;13476:8;13460:14;13456:29;13452:48;13432:18;13428:73;13418:168;;13505:79;;:::i;:::-;13418:168;13617:18;13607:8;13603:33;13595:41;;13669:4;13656:18;13646:28;;13697:18;13689:6;13686:30;13683:117;;;13719:79;;:::i;:::-;13683:117;13827:2;13821:4;13817:13;13809:21;;13884:4;13876:6;13872:17;13856:14;13852:38;13846:4;13842:49;13839:136;;;13894:79;;:::i;:::-;13839:136;13348:634;13258:724;;;;;:::o;13988:147::-;14089:11;14126:3;14111:18;;13988:147;;;;:::o;14141:146::-;14238:6;14233:3;14228;14215:30;14279:1;14270:6;14265:3;14261:16;14254:27;14141:146;;;:::o;14315:327::-;14429:3;14450:88;14531:6;14526:3;14450:88;:::i;:::-;14443:95;;14548:56;14597:6;14592:3;14585:5;14548:56;:::i;:::-;14629:6;14624:3;14620:16;14613:23;;14315:327;;;;;:::o;14648:94::-;14681:8;14729:5;14725:2;14721:14;14700:35;;14648:94;;;:::o;14748:::-;14787:7;14816:20;14830:5;14816:20;:::i;:::-;14805:31;;14748:94;;;:::o;14848:100::-;14887:7;14916:26;14936:5;14916:26;:::i;:::-;14905:37;;14848:100;;;:::o;14954:157::-;15059:45;15079:24;15097:5;15079:24;:::i;:::-;15059:45;:::i;:::-;15054:3;15047:58;14954:157;;:::o;15117:432::-;15285:3;15307:103;15406:3;15397:6;15389;15307:103;:::i;:::-;15300:110;;15420:75;15491:3;15482:6;15420:75;:::i;:::-;15520:2;15515:3;15511:12;15504:19;;15540:3;15533:10;;15117:432;;;;;;:::o;15555:320::-;15670:4;15708:2;15697:9;15693:18;15685:26;;15721:71;15789:1;15778:9;15774:17;15765:6;15721:71;:::i;:::-;15802:66;15864:2;15853:9;15849:18;15840:6;15802:66;:::i;:::-;15555:320;;;;;:::o;15881:222::-;15974:4;16012:2;16001:9;15997:18;15989:26;;16025:71;16093:1;16082:9;16078:17;16069:6;16025:71;:::i;:::-;15881:222;;;;:::o;16109:114::-;;:::o;16229:398::-;16388:3;16409:83;16490:1;16485:3;16409:83;:::i;:::-;16402:90;;16501:93;16590:3;16501:93;:::i;:::-;16619:1;16614:3;16610:11;16603:18;;16229:398;;;:::o;16633:379::-;16817:3;16839:147;16982:3;16839:147;:::i;:::-;16832:154;;17003:3;16996:10;;16633:379;;;:::o;17018:291::-;17158:3;17180:103;17279:3;17270:6;17262;17180:103;:::i;:::-;17173:110;;17300:3;17293:10;;17018:291;;;;;:::o;17315:993::-;17602:4;17640:3;17629:9;17625:19;17617:27;;17654:71;17722:1;17711:9;17707:17;17698:6;17654:71;:::i;:::-;17735:72;17803:2;17792:9;17788:18;17779:6;17735:72;:::i;:::-;17817;17885:2;17874:9;17870:18;17861:6;17817:72;:::i;:::-;17899;17967:2;17956:9;17952:18;17943:6;17899:72;:::i;:::-;17981:73;18049:3;18038:9;18034:19;18025:6;17981:73;:::i;:::-;18064;18132:3;18121:9;18117:19;18108:6;18064:73;:::i;:::-;18147:71;18213:3;18202:9;18198:19;18189:6;18147:71;:::i;:::-;18228:73;18296:3;18285:9;18281:19;18272:6;18228:73;:::i;:::-;17315:993;;;;;;;;;;;:::o;18314:180::-;18362:77;18359:1;18352:88;18459:4;18456:1;18449:15;18483:4;18480:1;18473:15;18500:180;18548:77;18545:1;18538:88;18645:4;18642:1;18635:15;18669:4;18666:1;18659:15;18686:320;18730:6;18767:1;18761:4;18757:12;18747:22;;18814:1;18808:4;18804:12;18835:18;18825:81;;18891:4;18883:6;18879:17;18869:27;;18825:81;18953:2;18945:6;18942:14;18922:18;18919:38;18916:84;;18972:18;;:::i;:::-;18916:84;18737:269;18686:320;;;:::o;19012:180::-;19060:77;19057:1;19050:88;19157:4;19154:1;19147:15;19181:4;19178:1;19171:15;19198:185;19238:1;19255:20;19273:1;19255:20;:::i;:::-;19250:25;;19289:20;19307:1;19289:20;:::i;:::-;19284:25;;19328:1;19318:35;;19333:18;;:::i;:::-;19318:35;19375:1;19372;19368:9;19363:14;;19198:185;;;;:::o;19389:86::-;19424:7;19464:4;19457:5;19453:16;19442:27;;19389:86;;;:::o;19481:112::-;19564:22;19580:5;19564:22;:::i;:::-;19559:3;19552:35;19481:112;;:::o;19599:545::-;19772:4;19810:3;19799:9;19795:19;19787:27;;19824:71;19892:1;19881:9;19877:17;19868:6;19824:71;:::i;:::-;19905:68;19969:2;19958:9;19954:18;19945:6;19905:68;:::i;:::-;19983:72;20051:2;20040:9;20036:18;20027:6;19983:72;:::i;:::-;20065;20133:2;20122:9;20118:18;20109:6;20065:72;:::i;:::-;19599:545;;;;;;;:::o;20150:664::-;20355:4;20393:3;20382:9;20378:19;20370:27;;20407:71;20475:1;20464:9;20460:17;20451:6;20407:71;:::i;:::-;20488:72;20556:2;20545:9;20541:18;20532:6;20488:72;:::i;:::-;20570;20638:2;20627:9;20623:18;20614:6;20570:72;:::i;:::-;20652;20720:2;20709:9;20705:18;20696:6;20652:72;:::i;:::-;20734:73;20802:3;20791:9;20787:19;20778:6;20734:73;:::i;:::-;20150:664;;;;;;;;:::o"},"methodIdentifiers":{"eip712Domain()":"84b0196e","execute((address,address,uint256,uint256,uint48,bytes,bytes))":"df905caf","executeBatch((address,address,uint256,uint256,uint48,bytes,bytes)[],address)":"ccf96b4a","nonces(address)":"7ecebe00","verify((address,address,uint256,uint256,uint48,bytes,bytes))":"19d8d38c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"deadline\",\"type\":\"uint48\"}],\"name\":\"ERC2771ForwarderExpiredRequest\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"ERC2771ForwarderInvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestedValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"}],\"name\":\"ERC2771ForwarderMismatchedValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"ERC2771UntrustfulTarget\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"name\":\"ExecutedForwardRequest\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"deadline\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct ERC2771Forwarder.ForwardRequestData\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"deadline\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct ERC2771Forwarder.ForwardRequestData[]\",\"name\":\"requests\",\"type\":\"tuple[]\"},{\"internalType\":\"address payable\",\"name\":\"refundReceiver\",\"type\":\"address\"}],\"name\":\"executeBatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"deadline\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct ERC2771Forwarder.ForwardRequestData\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A forwarder compatible with ERC2771 contracts. See {ERC2771Context}. This forwarder operates on forward requests that include: * `from`: An address to operate on behalf of. It is required to be equal to the request signer. * `to`: The address that should be called. * `value`: The amount of native token to attach with the requested call. * `gas`: The amount of gas limit that will be forwarded with the requested call. * `nonce`: A unique transaction ordering identifier to avoid replayability and request invalidation. * `deadline`: A timestamp after which the request is not executable anymore. * `data`: Encoded `msg.data` to send with the requested call. Relayers are able to submit batches if they are processing a high volume of requests. With high throughput, relayers may run into limitations of the chain such as limits on the number of transactions in the mempool. In these cases the recommendation is to distribute the load among multiple accounts. NOTE: Batching requests includes an optional refund for unused `msg.value` that is achieved by performing a call with empty calldata. While this is within the bounds of ERC-2771 compliance, if the refund receiver happens to consider the forwarder a trusted forwarder, it MUST properly handle `msg.data.length == 0`. `ERC2771Context` in OpenZeppelin Contracts versions prior to 4.9.3 do not handle this properly. ==== Security Considerations If a relayer submits a forward request, it should be willing to pay up to 100% of the gas amount specified in the request. This contract does not implement any kind of retribution for this gas, and it is assumed that there is an out of band incentive for relayers to pay for execution on behalf of signers. Often, the relayer is operated by a project that will consider it a user acquisition cost. By offering to pay for gas, relayers are at risk of having that gas used by an attacker toward some other purpose that is not aligned with the expected out of band incentives. If you operate a relayer, consider whitelisting target contracts and function selectors. When relaying ERC-721 or ERC-1155 transfers specifically, consider rejecting the use of the `data` field, since it can be used to execute arbitrary code.\",\"errors\":{\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"ERC2771ForwarderExpiredRequest(uint48)\":[{\"details\":\"The request `deadline` has expired.\"}],\"ERC2771ForwarderInvalidSigner(address,address)\":[{\"details\":\"The request `from` doesn't match with the recovered `signer`.\"}],\"ERC2771ForwarderMismatchedValue(uint256,uint256)\":[{\"details\":\"The `requestedValue` doesn't match with the available `msgValue`.\"}],\"ERC2771UntrustfulTarget(address,address)\":[{\"details\":\"The request target doesn't trust the `forwarder`.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"ExecutedForwardRequest(address,uint256,bool)\":{\"details\":\"Emitted when a `ForwardRequest` is executed. NOTE: An unsuccessful forward request could be due to an invalid signature, an expired deadline, or simply a revert in the requested call. The contract guarantees that the relayer is not able to force the requested call to run out of gas.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"See {EIP712-constructor}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"execute((address,address,uint256,uint256,uint48,bytes,bytes))\":{\"details\":\"Executes a `request` on behalf of `signature`'s signer using the ERC-2771 protocol. The gas provided to the requested call may not be exactly the amount requested, but the call will not run out of gas. Will revert if the request is invalid or the call reverts, in this case the nonce is not consumed. Requirements: - The request value should be equal to the provided `msg.value`. - The request should be valid according to {verify}.\"},\"executeBatch((address,address,uint256,uint256,uint48,bytes,bytes)[],address)\":{\"details\":\"Batch version of {execute} with optional refunding and atomic execution. In case a batch contains at least one invalid request (see {verify}), the request will be skipped and the `refundReceiver` parameter will receive back the unused requested value at the end of the execution. This is done to prevent reverting the entire batch when a request is invalid or has already been submitted. If the `refundReceiver` is the `address(0)`, this function will revert when at least one of the requests was not valid instead of skipping it. This could be useful if a batch is required to get executed atomically (at least at the top-level). For example, refunding (and thus atomicity) can be opt-out if the relayer is using a service that avoids including reverted transactions. Requirements: - The sum of the requests' values should be equal to the provided `msg.value`. - All of the requests should be valid (see {verify}) when `refundReceiver` is the zero address. NOTE: Setting a zero `refundReceiver` guarantees an all-or-nothing requests execution only for the first-level forwarded calls. In case a forwarded request calls to a contract with another subcall, the second-level call may revert without the top-level call reverting.\"},\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"},\"verify((address,address,uint256,uint256,uint48,bytes,bytes))\":{\"details\":\"Returns `true` if a request is valid for a provided `signature` at the current block timestamp. A transaction is considered valid when the target trusts this forwarder, the request hasn't expired (deadline is not met), and the signer matches the `from` parameter of the signed request. NOTE: A request may return false here but it won't cause {executeBatch} to revert if a refund receiver is provided.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/metatx/ERC2771Forwarder.sol\":\"ERC2771Forwarder\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/metatx/ERC2771Context.sol\":{\"keccak256\":\"0x98256cf37b71a69b2f5a8a6fe975ea03590dff703102bd141a830f94e8adebf6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6251fe1f6a1e45e6d619d150c123afc88b8646b38ee26a136efa9a6988a31d3f\",\"dweb:/ipfs/QmeXDT85wSZdP31wkz3ah3KhponCiksJLP5o2LR5e1JxcK\"]},\"@openzeppelin/contracts/metatx/ERC2771Forwarder.sol\":{\"keccak256\":\"0xd7efed2df83914cb6354b0ecddbabbf1cd0b7263bbec797a31e2251d3bf1c5e2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7474f3651acee5c62a1c360f11c8718e5680a9f050fbec1ca82796402b528314\",\"dweb:/ipfs/QmW3vpvTcARQnbbQgJ8B7zrZeqRJ7xifKD5egivq2EBbBY\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressInsufficientBalance","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200908ee0e285fdd44fae74fa9282842baf1fd72afaf3a262c17132766ecb61d5564736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD ADDMOD 0xEE 0xE 0x28 PUSH0 0xDD PREVRANDAO STATICCALL 0xE7 0x4F 0xA9 0x28 0x28 TIMESTAMP 0xBA CALL REVERT PUSH19 0xAFAF3A262C17132766ECB61D5564736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"195:6066:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200908ee0e285fdd44fae74fa9282842baf1fd72afaf3a262c17132766ecb61d5564736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD ADDMOD 0xEE 0xE 0x28 PUSH0 0xDD PREVRANDAO STATICCALL 0xE7 0x4F 0xA9 0x28 0x28 TIMESTAMP 0xBA CALL REVERT PUSH19 0xAFAF3A262C17132766ECB61D5564736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"195:6066:3:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Nonces.sol":{"Nonces":{"abi":[{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"nonces(address)":"7ecebe00"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides tracking nonces for addresses. Nonces will only increment.\",\"errors\":{\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Nonces.sol\":\"Nonces\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122039dffa40a0715e4a9c1b63cdf0e4fc0d23ef690191b3b911aa591153978e7baa64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0xDF STATICCALL BLOCKHASH LOG0 PUSH18 0x5E4A9C1B63CDF0E4FC0D23EF690191B3B911 0xAA MSIZE GT MSTORE8 SWAP8 DUP15 PUSH28 0xAA64736F6C6343000814003300000000000000000000000000000000 ","sourceMap":"1255:3053:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122039dffa40a0715e4a9c1b63cdf0e4fc0d23ef690191b3b911aa591153978e7baa64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0xDF STATICCALL BLOCKHASH LOG0 PUSH18 0x5E4A9C1B63CDF0E4FC0D23EF690191B3B911 0xAA MSIZE GT MSTORE8 SWAP8 DUP15 PUSH28 0xAA64736F6C6343000814003300000000000000000000000000000000 ","sourceMap":"1255:3053:6:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220664a27569fc3d59b305c58507f8136cef7bd03cb3ee21eb9c0bec0ee426845e264736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0x4A27569FC3D59B ADDRESS 0x5C PC POP PUSH32 0x8136CEF7BD03CB3EE21EB9C0BEC0EE426845E264736F6C634300081400330000 ","sourceMap":"1245:2685:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220664a27569fc3d59b305c58507f8136cef7bd03cb3ee21eb9c0bec0ee426845e264736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0x4A27569FC3D59B ADDRESS 0x5C PC POP PUSH32 0x8136CEF7BD03CB3EE21EB9C0BEC0EE426845E264736F6C634300081400330000 ","sourceMap":"1245:2685:7:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220def6c700362972812669fe56e66090c2a8e18de909bbeaaa236252c6b9a275f664736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE 0xF6 0xC7 STOP CALLDATASIZE 0x29 PUSH19 0x812669FE56E66090C2A8E18DE909BBEAAA2362 MSTORE 0xC6 0xB9 LOG2 PUSH22 0xF664736F6C6343000814003300000000000000000000 ","sourceMap":"251:2847:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220def6c700362972812669fe56e66090c2a8e18de909bbeaaa236252c6b9a275f664736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE 0xF6 0xC7 STOP CALLDATASIZE 0x29 PUSH19 0x812669FE56E66090C2A8E18DE909BBEAAA2362 MSTORE 0xC6 0xB9 LOG2 PUSH22 0xF664736F6C6343000814003300000000000000000000 ","sourceMap":"251:2847:8:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205c2dd3b0bfb87dc5c8cdda90411642948b2f1b22157b65a111fc980003dd4d6264736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C 0x2D 0xD3 0xB0 0xBF 0xB8 PUSH30 0xC5C8CDDA90411642948B2F1B22157B65A111FC980003DD4D6264736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ","sourceMap":"344:7386:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205c2dd3b0bfb87dc5c8cdda90411642948b2f1b22157b65a111fc980003dd4d6264736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C 0x2D 0xD3 0xB0 0xBF 0xB8 PUSH30 0xC5C8CDDA90411642948B2F1B22157B65A111FC980003DD4D6264736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ","sourceMap":"344:7386:9:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207712b062d76803d4ad28ee3f5795f2f704585b62e28a7c168984142f1dbaae1464736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x12B062D76803D4AD28EE3F5795F2F704585B62E28A7C1689 DUP5 EQ 0x2F SAR 0xBA 0xAE EQ PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"521:3235:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207712b062d76803d4ad28ee3f5795f2f704585b62e28a7c168984142f1dbaae1464736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x12B062D76803D4AD28EE3F5795F2F704585B62E28A7C1689 DUP5 EQ 0x2F SAR 0xBA 0xAE EQ PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"521:3235:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[{"inputs":[],"name":"MathOverflowedMulDiv","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220790d7b91fdd446ac2c697f171eeef084d56599665c6d788fe80fcce7f6a12f8764736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0xD7B91FDD446AC2C697F171EEEF084D56599665C6D788FE80FCC 0xE7 0xF6 LOG1 0x2F DUP8 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"203:14914:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220790d7b91fdd446ac2c697f171eeef084d56599665c6d788fe80fcce7f6a12f8764736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0xD7B91FDD446AC2C697F171EEEF084D56599665C6D788FE80FCC 0xE7 0xF6 LOG1 0x2F DUP8 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"203:14914:12:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d184e53d3ebb413bc45fd94e6304b84cba20c89298f8b078eec6d1497f332a3264736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 DUP5 0xE5 RETURNDATASIZE RETURNDATACOPY 0xBB COINBASE EXTCODESIZE 0xC4 PUSH0 0xD9 0x4E PUSH4 0x4B84CBA KECCAK256 0xC8 SWAP3 SWAP9 0xF8 0xB0 PUSH25 0xEEC6D1497F332A3264736F6C63430008140033000000000000 ","sourceMap":"216:1047:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d184e53d3ebb413bc45fd94e6304b84cba20c89298f8b078eec6d1497f332a3264736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 DUP5 0xE5 RETURNDATASIZE RETURNDATACOPY 0xBB COINBASE EXTCODESIZE 0xC4 PUSH0 0xD9 0x4E PUSH4 0x4B84CBA KECCAK256 0xC8 SWAP3 SWAP9 0xF8 0xB0 PUSH25 0xEEC6D1497F332A3264736F6C63430008140033000000000000 ","sourceMap":"216:1047:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"contracts/MetaSum.sol":{"MetaSum":{"abi":[{"inputs":[{"internalType":"contract ERC2771Forwarder","name":"forwarder","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"uint256","name":"_a","type":"uint256"}],"name":"add","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"forwarder","type":"address"}],"name":"isTrustedForwarder","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"sum","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"trustedForwarder","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_3436":{"entryPoint":null,"id":3436,"parameterSlots":1,"returnSlots":0},"@_45":{"entryPoint":null,"id":45,"parameterSlots":1,"returnSlots":0},"abi_decode_t_contract$_ERC2771Forwarder_$674_fromMemory":{"entryPoint":206,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_ERC2771Forwarder_$674_fromMemory":{"entryPoint":227,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":147,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_ERC2771Forwarder_$674":{"entryPoint":165,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":115,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":110,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_contract$_ERC2771Forwarder_$674":{"entryPoint":183,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1469:16","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:16","statements":[{"nodeType":"YulAssignment","src":"57:19:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:16","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:16"},"nodeType":"YulFunctionCall","src":"67:9:16"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:16"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:16","type":""}],"src":"7:75:16"},{"body":{"nodeType":"YulBlock","src":"177:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:16"},"nodeType":"YulFunctionCall","src":"187:12:16"},"nodeType":"YulExpressionStatement","src":"187:12:16"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:16"},{"body":{"nodeType":"YulBlock","src":"300:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:16"},"nodeType":"YulFunctionCall","src":"310:12:16"},"nodeType":"YulExpressionStatement","src":"310:12:16"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:16"},{"body":{"nodeType":"YulBlock","src":"379:81:16","statements":[{"nodeType":"YulAssignment","src":"389:65:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:16","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:16"},"nodeType":"YulFunctionCall","src":"400:54:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:16"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:16","type":""}],"src":"334:126:16"},{"body":{"nodeType":"YulBlock","src":"511:51:16","statements":[{"nodeType":"YulAssignment","src":"521:35:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:16"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:16"},"nodeType":"YulFunctionCall","src":"532:24:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:16"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:16","type":""}],"src":"466:96:16"},{"body":{"nodeType":"YulBlock","src":"637:51:16","statements":[{"nodeType":"YulAssignment","src":"647:35:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:16"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"658:17:16"},"nodeType":"YulFunctionCall","src":"658:24:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"647:7:16"}]}]},"name":"cleanup_t_contract$_ERC2771Forwarder_$674","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"619:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"629:7:16","type":""}],"src":"568:120:16"},{"body":{"nodeType":"YulBlock","src":"761:103:16","statements":[{"body":{"nodeType":"YulBlock","src":"842:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"851:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"854:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"844:6:16"},"nodeType":"YulFunctionCall","src":"844:12:16"},"nodeType":"YulExpressionStatement","src":"844:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"784:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"833:5:16"}],"functionName":{"name":"cleanup_t_contract$_ERC2771Forwarder_$674","nodeType":"YulIdentifier","src":"791:41:16"},"nodeType":"YulFunctionCall","src":"791:48:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"781:2:16"},"nodeType":"YulFunctionCall","src":"781:59:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"774:6:16"},"nodeType":"YulFunctionCall","src":"774:67:16"},"nodeType":"YulIf","src":"771:87:16"}]},"name":"validator_revert_t_contract$_ERC2771Forwarder_$674","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"754:5:16","type":""}],"src":"694:170:16"},{"body":{"nodeType":"YulBlock","src":"957:104:16","statements":[{"nodeType":"YulAssignment","src":"967:22:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"982:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"976:5:16"},"nodeType":"YulFunctionCall","src":"976:13:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"967:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1049:5:16"}],"functionName":{"name":"validator_revert_t_contract$_ERC2771Forwarder_$674","nodeType":"YulIdentifier","src":"998:50:16"},"nodeType":"YulFunctionCall","src":"998:57:16"},"nodeType":"YulExpressionStatement","src":"998:57:16"}]},"name":"abi_decode_t_contract$_ERC2771Forwarder_$674_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"935:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"943:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"951:5:16","type":""}],"src":"870:191:16"},{"body":{"nodeType":"YulBlock","src":"1168:298:16","statements":[{"body":{"nodeType":"YulBlock","src":"1214:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1216:77:16"},"nodeType":"YulFunctionCall","src":"1216:79:16"},"nodeType":"YulExpressionStatement","src":"1216:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1189:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"1198:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1185:3:16"},"nodeType":"YulFunctionCall","src":"1185:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"1210:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1181:3:16"},"nodeType":"YulFunctionCall","src":"1181:32:16"},"nodeType":"YulIf","src":"1178:119:16"},{"nodeType":"YulBlock","src":"1307:152:16","statements":[{"nodeType":"YulVariableDeclaration","src":"1322:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"1336:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1326:6:16","type":""}]},{"nodeType":"YulAssignment","src":"1351:98:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1421:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"1432:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1417:3:16"},"nodeType":"YulFunctionCall","src":"1417:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1441:7:16"}],"functionName":{"name":"abi_decode_t_contract$_ERC2771Forwarder_$674_fromMemory","nodeType":"YulIdentifier","src":"1361:55:16"},"nodeType":"YulFunctionCall","src":"1361:88:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1351:6:16"}]}]}]},"name":"abi_decode_tuple_t_contract$_ERC2771Forwarder_$674_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1138:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1149:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1161:6:16","type":""}],"src":"1067:399:16"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_ERC2771Forwarder_$674(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_ERC2771Forwarder_$674(value) {\n        if iszero(eq(value, cleanup_t_contract$_ERC2771Forwarder_$674(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_ERC2771Forwarder_$674_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_ERC2771Forwarder_$674(value)\n    }\n\n    function abi_decode_tuple_t_contract$_ERC2771Forwarder_$674_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ERC2771Forwarder_$674_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":16,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60a060405234801561001057600080fd5b5060405161042e38038061042e833981810160405281019061003291906100e3565b808073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505050610110565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061009e82610073565b9050919050565b60006100b082610093565b9050919050565b6100c0816100a5565b81146100cb57600080fd5b50565b6000815190506100dd816100b7565b92915050565b6000602082840312156100f9576100f861006e565b5b6000610107848285016100ce565b91505092915050565b60805161030361012b600039600061012601526103036000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631003e2d214610051578063572b6c051461006d5780637da0a8771461009d578063853255cc146100bb575b600080fd5b61006b6004803603810190610066919061018b565b6100d9565b005b61008760048036038101906100829190610216565b6100e3565b604051610094919061025e565b60405180910390f35b6100a5610122565b6040516100b29190610288565b60405180910390f35b6100c361014a565b6040516100d091906102b2565b60405180910390f35b8060008190555050565b60006100ed610122565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60005481565b600080fd5b6000819050919050565b61016881610155565b811461017357600080fd5b50565b6000813590506101858161015f565b92915050565b6000602082840312156101a1576101a0610150565b5b60006101af84828501610176565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101e3826101b8565b9050919050565b6101f3816101d8565b81146101fe57600080fd5b50565b600081359050610210816101ea565b92915050565b60006020828403121561022c5761022b610150565b5b600061023a84828501610201565b91505092915050565b60008115159050919050565b61025881610243565b82525050565b6000602082019050610273600083018461024f565b92915050565b610282816101d8565b82525050565b600060208201905061029d6000830184610279565b92915050565b6102ac81610155565b82525050565b60006020820190506102c760008301846102a3565b9291505056fea2646970667358221220e76457ac0ca4e2deb8e05668e4875484898d3995123cbe15a1fb5fb1945ae4c164736f6c63430008140033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x42E CODESIZE SUB DUP1 PUSH2 0x42E DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0xE3 JUMP JUMPDEST DUP1 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP PUSH2 0x110 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9E DUP3 PUSH2 0x73 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB0 DUP3 PUSH2 0x93 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC0 DUP2 PUSH2 0xA5 JUMP JUMPDEST DUP2 EQ PUSH2 0xCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xDD DUP2 PUSH2 0xB7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF9 JUMPI PUSH2 0xF8 PUSH2 0x6E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x107 DUP5 DUP3 DUP6 ADD PUSH2 0xCE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x303 PUSH2 0x12B PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x126 ADD MSTORE PUSH2 0x303 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1003E2D2 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x572B6C05 EQ PUSH2 0x6D JUMPI DUP1 PUSH4 0x7DA0A877 EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0x853255CC EQ PUSH2 0xBB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x18B JUMP JUMPDEST PUSH2 0xD9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x87 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x82 SWAP2 SWAP1 PUSH2 0x216 JUMP JUMPDEST PUSH2 0xE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x94 SWAP2 SWAP1 PUSH2 0x25E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA5 PUSH2 0x122 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB2 SWAP2 SWAP1 PUSH2 0x288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC3 PUSH2 0x14A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD0 SWAP2 SWAP1 PUSH2 0x2B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xED PUSH2 0x122 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x168 DUP2 PUSH2 0x155 JUMP JUMPDEST DUP2 EQ PUSH2 0x173 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x185 DUP2 PUSH2 0x15F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A1 JUMPI PUSH2 0x1A0 PUSH2 0x150 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AF DUP5 DUP3 DUP6 ADD PUSH2 0x176 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E3 DUP3 PUSH2 0x1B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F3 DUP2 PUSH2 0x1D8 JUMP JUMPDEST DUP2 EQ PUSH2 0x1FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x210 DUP2 PUSH2 0x1EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22C JUMPI PUSH2 0x22B PUSH2 0x150 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x23A DUP5 DUP3 DUP6 ADD PUSH2 0x201 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x258 DUP2 PUSH2 0x243 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x273 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x24F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x282 DUP2 PUSH2 0x1D8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x29D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x279 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2AC DUP2 PUSH2 0x155 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 PUSH5 0x57AC0CA4E2 0xDE 0xB8 0xE0 JUMP PUSH9 0xE4875484898D399512 EXTCODECOPY 0xBE ISZERO LOG1 0xFB PUSH0 0xB1 SWAP5 GAS 0xE4 0xC1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"187:258:14:-:0;;;253:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;364:9;1518:17:1;1498:37;;;;;;;;;;1449:93;253:125:14;187:258;;88:117:16;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:120::-;629:7;658:24;676:5;658:24;:::i;:::-;647:35;;568:120;;;:::o;694:170::-;791:48;833:5;791:48;:::i;:::-;784:5;781:59;771:87;;854:1;851;844:12;771:87;694:170;:::o;870:191::-;951:5;982:6;976:13;967:22;;998:57;1049:5;998:57;:::i;:::-;870:191;;;;:::o;1067:399::-;1161:6;1210:2;1198:9;1189:7;1185:23;1181:32;1178:119;;;1216:79;;:::i;:::-;1178:119;1336:1;1361:88;1441:7;1432:6;1421:9;1417:22;1361:88;:::i;:::-;1351:98;;1307:152;1067:399;;;;:::o;187:258:14:-;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@add_3446":{"entryPoint":217,"id":3446,"parameterSlots":1,"returnSlots":0},"@isTrustedForwarder_68":{"entryPoint":227,"id":68,"parameterSlots":1,"returnSlots":1},"@sum_3423":{"entryPoint":330,"id":3423,"parameterSlots":0,"returnSlots":0},"@trustedForwarder_54":{"entryPoint":290,"id":54,"parameterSlots":0,"returnSlots":1},"abi_decode_t_address":{"entryPoint":513,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":374,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":534,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":395,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":633,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":591,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":675,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":648,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":606,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":690,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":472,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":579,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":440,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":341,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":336,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":490,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":351,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:2995:16","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:16","statements":[{"nodeType":"YulAssignment","src":"57:19:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:16","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:16"},"nodeType":"YulFunctionCall","src":"67:9:16"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:16"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:16","type":""}],"src":"7:75:16"},{"body":{"nodeType":"YulBlock","src":"177:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:16"},"nodeType":"YulFunctionCall","src":"187:12:16"},"nodeType":"YulExpressionStatement","src":"187:12:16"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:16"},{"body":{"nodeType":"YulBlock","src":"300:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:16"},"nodeType":"YulFunctionCall","src":"310:12:16"},"nodeType":"YulExpressionStatement","src":"310:12:16"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:16"},{"body":{"nodeType":"YulBlock","src":"379:32:16","statements":[{"nodeType":"YulAssignment","src":"389:16:16","value":{"name":"value","nodeType":"YulIdentifier","src":"400:5:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:16"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:16","type":""}],"src":"334:77:16"},{"body":{"nodeType":"YulBlock","src":"460:79:16","statements":[{"body":{"nodeType":"YulBlock","src":"517:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"526:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"529:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"519:6:16"},"nodeType":"YulFunctionCall","src":"519:12:16"},"nodeType":"YulExpressionStatement","src":"519:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"483:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"508:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"490:17:16"},"nodeType":"YulFunctionCall","src":"490:24:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"480:2:16"},"nodeType":"YulFunctionCall","src":"480:35:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"473:6:16"},"nodeType":"YulFunctionCall","src":"473:43:16"},"nodeType":"YulIf","src":"470:63:16"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"453:5:16","type":""}],"src":"417:122:16"},{"body":{"nodeType":"YulBlock","src":"597:87:16","statements":[{"nodeType":"YulAssignment","src":"607:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"629:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"616:12:16"},"nodeType":"YulFunctionCall","src":"616:20:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"607:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"672:5:16"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"645:26:16"},"nodeType":"YulFunctionCall","src":"645:33:16"},"nodeType":"YulExpressionStatement","src":"645:33:16"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"575:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"583:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"591:5:16","type":""}],"src":"545:139:16"},{"body":{"nodeType":"YulBlock","src":"756:263:16","statements":[{"body":{"nodeType":"YulBlock","src":"802:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"804:77:16"},"nodeType":"YulFunctionCall","src":"804:79:16"},"nodeType":"YulExpressionStatement","src":"804:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"777:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"786:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"773:3:16"},"nodeType":"YulFunctionCall","src":"773:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"798:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"769:3:16"},"nodeType":"YulFunctionCall","src":"769:32:16"},"nodeType":"YulIf","src":"766:119:16"},{"nodeType":"YulBlock","src":"895:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"910:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"924:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"914:6:16","type":""}]},{"nodeType":"YulAssignment","src":"939:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"974:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"985:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"970:3:16"},"nodeType":"YulFunctionCall","src":"970:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"994:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"949:20:16"},"nodeType":"YulFunctionCall","src":"949:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"939:6:16"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"726:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"737:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"749:6:16","type":""}],"src":"690:329:16"},{"body":{"nodeType":"YulBlock","src":"1070:81:16","statements":[{"nodeType":"YulAssignment","src":"1080:65:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1095:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"1102:42:16","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1091:3:16"},"nodeType":"YulFunctionCall","src":"1091:54:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1080:7:16"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1052:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1062:7:16","type":""}],"src":"1025:126:16"},{"body":{"nodeType":"YulBlock","src":"1202:51:16","statements":[{"nodeType":"YulAssignment","src":"1212:35:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1241:5:16"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1223:17:16"},"nodeType":"YulFunctionCall","src":"1223:24:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1212:7:16"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1184:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1194:7:16","type":""}],"src":"1157:96:16"},{"body":{"nodeType":"YulBlock","src":"1302:79:16","statements":[{"body":{"nodeType":"YulBlock","src":"1359:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1368:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1371:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1361:6:16"},"nodeType":"YulFunctionCall","src":"1361:12:16"},"nodeType":"YulExpressionStatement","src":"1361:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1325:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1350:5:16"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1332:17:16"},"nodeType":"YulFunctionCall","src":"1332:24:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1322:2:16"},"nodeType":"YulFunctionCall","src":"1322:35:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1315:6:16"},"nodeType":"YulFunctionCall","src":"1315:43:16"},"nodeType":"YulIf","src":"1312:63:16"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1295:5:16","type":""}],"src":"1259:122:16"},{"body":{"nodeType":"YulBlock","src":"1439:87:16","statements":[{"nodeType":"YulAssignment","src":"1449:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1471:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1458:12:16"},"nodeType":"YulFunctionCall","src":"1458:20:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1449:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1514:5:16"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1487:26:16"},"nodeType":"YulFunctionCall","src":"1487:33:16"},"nodeType":"YulExpressionStatement","src":"1487:33:16"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1417:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"1425:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1433:5:16","type":""}],"src":"1387:139:16"},{"body":{"nodeType":"YulBlock","src":"1598:263:16","statements":[{"body":{"nodeType":"YulBlock","src":"1644:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1646:77:16"},"nodeType":"YulFunctionCall","src":"1646:79:16"},"nodeType":"YulExpressionStatement","src":"1646:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1619:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"1628:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1615:3:16"},"nodeType":"YulFunctionCall","src":"1615:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"1640:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1611:3:16"},"nodeType":"YulFunctionCall","src":"1611:32:16"},"nodeType":"YulIf","src":"1608:119:16"},{"nodeType":"YulBlock","src":"1737:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"1752:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"1766:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1756:6:16","type":""}]},{"nodeType":"YulAssignment","src":"1781:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1816:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"1827:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1812:3:16"},"nodeType":"YulFunctionCall","src":"1812:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1836:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1791:20:16"},"nodeType":"YulFunctionCall","src":"1791:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1781:6:16"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1568:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1579:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1591:6:16","type":""}],"src":"1532:329:16"},{"body":{"nodeType":"YulBlock","src":"1909:48:16","statements":[{"nodeType":"YulAssignment","src":"1919:32:16","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1944:5:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1937:6:16"},"nodeType":"YulFunctionCall","src":"1937:13:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1930:6:16"},"nodeType":"YulFunctionCall","src":"1930:21:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1919:7:16"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1891:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1901:7:16","type":""}],"src":"1867:90:16"},{"body":{"nodeType":"YulBlock","src":"2022:50:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2039:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2059:5:16"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"2044:14:16"},"nodeType":"YulFunctionCall","src":"2044:21:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2032:6:16"},"nodeType":"YulFunctionCall","src":"2032:34:16"},"nodeType":"YulExpressionStatement","src":"2032:34:16"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2010:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2017:3:16","type":""}],"src":"1963:109:16"},{"body":{"nodeType":"YulBlock","src":"2170:118:16","statements":[{"nodeType":"YulAssignment","src":"2180:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2192:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2203:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2188:3:16"},"nodeType":"YulFunctionCall","src":"2188:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2180:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2254:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2267:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2278:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2263:3:16"},"nodeType":"YulFunctionCall","src":"2263:17:16"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"2216:37:16"},"nodeType":"YulFunctionCall","src":"2216:65:16"},"nodeType":"YulExpressionStatement","src":"2216:65:16"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2142:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2154:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2165:4:16","type":""}],"src":"2078:210:16"},{"body":{"nodeType":"YulBlock","src":"2359:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2376:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2399:5:16"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2381:17:16"},"nodeType":"YulFunctionCall","src":"2381:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2369:6:16"},"nodeType":"YulFunctionCall","src":"2369:37:16"},"nodeType":"YulExpressionStatement","src":"2369:37:16"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2347:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2354:3:16","type":""}],"src":"2294:118:16"},{"body":{"nodeType":"YulBlock","src":"2516:124:16","statements":[{"nodeType":"YulAssignment","src":"2526:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2538:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2549:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2534:3:16"},"nodeType":"YulFunctionCall","src":"2534:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2526:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2606:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2619:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2630:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2615:3:16"},"nodeType":"YulFunctionCall","src":"2615:17:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"2562:43:16"},"nodeType":"YulFunctionCall","src":"2562:71:16"},"nodeType":"YulExpressionStatement","src":"2562:71:16"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2488:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2500:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2511:4:16","type":""}],"src":"2418:222:16"},{"body":{"nodeType":"YulBlock","src":"2711:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2728:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2751:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2733:17:16"},"nodeType":"YulFunctionCall","src":"2733:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2721:6:16"},"nodeType":"YulFunctionCall","src":"2721:37:16"},"nodeType":"YulExpressionStatement","src":"2721:37:16"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2699:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2706:3:16","type":""}],"src":"2646:118:16"},{"body":{"nodeType":"YulBlock","src":"2868:124:16","statements":[{"nodeType":"YulAssignment","src":"2878:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2890:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2901:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2886:3:16"},"nodeType":"YulFunctionCall","src":"2886:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2878:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2958:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2971:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2982:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2967:3:16"},"nodeType":"YulFunctionCall","src":"2967:17:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"2914:43:16"},"nodeType":"YulFunctionCall","src":"2914:71:16"},"nodeType":"YulExpressionStatement","src":"2914:71:16"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2840:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2852:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2863:4:16","type":""}],"src":"2770:222:16"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":16,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"34":[{"length":32,"start":294}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061004c5760003560e01c80631003e2d214610051578063572b6c051461006d5780637da0a8771461009d578063853255cc146100bb575b600080fd5b61006b6004803603810190610066919061018b565b6100d9565b005b61008760048036038101906100829190610216565b6100e3565b604051610094919061025e565b60405180910390f35b6100a5610122565b6040516100b29190610288565b60405180910390f35b6100c361014a565b6040516100d091906102b2565b60405180910390f35b8060008190555050565b60006100ed610122565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60005481565b600080fd5b6000819050919050565b61016881610155565b811461017357600080fd5b50565b6000813590506101858161015f565b92915050565b6000602082840312156101a1576101a0610150565b5b60006101af84828501610176565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101e3826101b8565b9050919050565b6101f3816101d8565b81146101fe57600080fd5b50565b600081359050610210816101ea565b92915050565b60006020828403121561022c5761022b610150565b5b600061023a84828501610201565b91505092915050565b60008115159050919050565b61025881610243565b82525050565b6000602082019050610273600083018461024f565b92915050565b610282816101d8565b82525050565b600060208201905061029d6000830184610279565b92915050565b6102ac81610155565b82525050565b60006020820190506102c760008301846102a3565b9291505056fea2646970667358221220e76457ac0ca4e2deb8e05668e4875484898d3995123cbe15a1fb5fb1945ae4c164736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1003E2D2 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x572B6C05 EQ PUSH2 0x6D JUMPI DUP1 PUSH4 0x7DA0A877 EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0x853255CC EQ PUSH2 0xBB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x18B JUMP JUMPDEST PUSH2 0xD9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x87 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x82 SWAP2 SWAP1 PUSH2 0x216 JUMP JUMPDEST PUSH2 0xE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x94 SWAP2 SWAP1 PUSH2 0x25E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA5 PUSH2 0x122 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB2 SWAP2 SWAP1 PUSH2 0x288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC3 PUSH2 0x14A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD0 SWAP2 SWAP1 PUSH2 0x2B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xED PUSH2 0x122 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x168 DUP2 PUSH2 0x155 JUMP JUMPDEST DUP2 EQ PUSH2 0x173 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x185 DUP2 PUSH2 0x15F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A1 JUMPI PUSH2 0x1A0 PUSH2 0x150 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AF DUP5 DUP3 DUP6 ADD PUSH2 0x176 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E3 DUP3 PUSH2 0x1B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F3 DUP2 PUSH2 0x1D8 JUMP JUMPDEST DUP2 EQ PUSH2 0x1FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x210 DUP2 PUSH2 0x1EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22C JUMPI PUSH2 0x22B PUSH2 0x150 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x23A DUP5 DUP3 DUP6 ADD PUSH2 0x201 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x258 DUP2 PUSH2 0x243 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x273 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x24F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x282 DUP2 PUSH2 0x1D8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x29D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x279 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2AC DUP2 PUSH2 0x155 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 PUSH5 0x57AC0CA4E2 0xDE 0xB8 0xE0 JUMP PUSH9 0xE4875484898D399512 EXTCODECOPY 0xBE ISZERO LOG1 0xFB PUSH0 0xB1 SWAP5 GAS 0xE4 0xC1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"187:258:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;386:56;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1830:137:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1622:107;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;229:15:14;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;386:56;432:2;426:3;:8;;;;386:56;:::o;1830:137:1:-;1906:4;1942:18;:16;:18::i;:::-;1929:31;;:9;:31;;;1922:38;;1830:137;;;:::o;1622:107::-;1679:7;1705:17;1698:24;;1622:107;:::o;229:15:14:-;;;;:::o;88:117:16:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:126::-;1062:7;1102:42;1095:5;1091:54;1080:65;;1025:126;;;:::o;1157:96::-;1194:7;1223:24;1241:5;1223:24;:::i;:::-;1212:35;;1157:96;;;:::o;1259:122::-;1332:24;1350:5;1332:24;:::i;:::-;1325:5;1322:35;1312:63;;1371:1;1368;1361:12;1312:63;1259:122;:::o;1387:139::-;1433:5;1471:6;1458:20;1449:29;;1487:33;1514:5;1487:33;:::i;:::-;1387:139;;;;:::o;1532:329::-;1591:6;1640:2;1628:9;1619:7;1615:23;1611:32;1608:119;;;1646:79;;:::i;:::-;1608:119;1766:1;1791:53;1836:7;1827:6;1816:9;1812:22;1791:53;:::i;:::-;1781:63;;1737:117;1532:329;;;;:::o;1867:90::-;1901:7;1944:5;1937:13;1930:21;1919:32;;1867:90;;;:::o;1963:109::-;2044:21;2059:5;2044:21;:::i;:::-;2039:3;2032:34;1963:109;;:::o;2078:210::-;2165:4;2203:2;2192:9;2188:18;2180:26;;2216:65;2278:1;2267:9;2263:17;2254:6;2216:65;:::i;:::-;2078:210;;;;:::o;2294:118::-;2381:24;2399:5;2381:24;:::i;:::-;2376:3;2369:37;2294:118;;:::o;2418:222::-;2511:4;2549:2;2538:9;2534:18;2526:26;;2562:71;2630:1;2619:9;2615:17;2606:6;2562:71;:::i;:::-;2418:222;;;;:::o;2646:118::-;2733:24;2751:5;2733:24;:::i;:::-;2728:3;2721:37;2646:118;;:::o;2770:222::-;2863:4;2901:2;2890:9;2886:18;2878:26;;2914:71;2982:1;2971:9;2967:17;2958:6;2914:71;:::i;:::-;2770:222;;;;:::o"},"methodIdentifiers":{"add(uint256)":"1003e2d2","isTrustedForwarder(address)":"572b6c05","sum()":"853255cc","trustedForwarder()":"7da0a877"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ERC2771Forwarder\",\"name\":\"forwarder\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_a\",\"type\":\"uint256\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"isTrustedForwarder(address)\":{\"details\":\"Indicates whether any particular address is the trusted forwarder.\"},\"trustedForwarder()\":{\"details\":\"Returns the address of the trusted forwarder.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MetaSum.sol\":\"MetaSum\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/metatx/ERC2771Context.sol\":{\"keccak256\":\"0x98256cf37b71a69b2f5a8a6fe975ea03590dff703102bd141a830f94e8adebf6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6251fe1f6a1e45e6d619d150c123afc88b8646b38ee26a136efa9a6988a31d3f\",\"dweb:/ipfs/QmeXDT85wSZdP31wkz3ah3KhponCiksJLP5o2LR5e1JxcK\"]},\"@openzeppelin/contracts/metatx/ERC2771Forwarder.sol\":{\"keccak256\":\"0xd7efed2df83914cb6354b0ecddbabbf1cd0b7263bbec797a31e2251d3bf1c5e2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7474f3651acee5c62a1c360f11c8718e5680a9f050fbec1ca82796402b528314\",\"dweb:/ipfs/QmW3vpvTcARQnbbQgJ8B7zrZeqRJ7xifKD5egivq2EBbBY\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/MetaSum.sol\":{\"keccak256\":\"0x304ab131c1e62f04894f2108a9cfe826aa9563cc68be805707295eecf18fb6c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f26a2e2a18f9e5a4c066d2e254d0c26698d491b09cbb537df5dbbaeb0ba18319\",\"dweb:/ipfs/QmfWG79pKWajgiifFyCk3bnddvzgH8g9JQhindxkvHSxBt\"]}},\"version\":1}"}},"contracts/Sum.sol":{"Sum":{"abi":[{"inputs":[{"internalType":"uint256","name":"_a","type":"uint256"}],"name":"add","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"sum","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50610133806100206000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c80631003e2d2146037578063853255cc14604f575b600080fd5b604d60048036038101906049919060af565b6069565b005b60556073565b6040516060919060e4565b60405180910390f35b8060008190555050565b60005481565b600080fd5b6000819050919050565b608f81607e565b8114609957600080fd5b50565b60008135905060a9816088565b92915050565b60006020828403121560c25760c16079565b5b600060ce84828501609c565b91505092915050565b60de81607e565b82525050565b600060208201905060f7600083018460d7565b9291505056fea26469706673582212202f2a79ae80ca250523161b125d9e79152cac96df46d5d95d5127f248ac2e340f64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x133 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1003E2D2 EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0x853255CC EQ PUSH1 0x4F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH1 0x49 SWAP2 SWAP1 PUSH1 0xAF JUMP JUMPDEST PUSH1 0x69 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x55 PUSH1 0x73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x60 SWAP2 SWAP1 PUSH1 0xE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8F DUP2 PUSH1 0x7E JUMP JUMPDEST DUP2 EQ PUSH1 0x99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH1 0xA9 DUP2 PUSH1 0x88 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0xC2 JUMPI PUSH1 0xC1 PUSH1 0x79 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0xCE DUP5 DUP3 DUP6 ADD PUSH1 0x9C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xDE DUP2 PUSH1 0x7E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xF7 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0xD7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F 0x2A PUSH26 0xAE80CA250523161B125D9E79152CAC96DF46D5D95D5127F248AC 0x2E CALLVALUE 0xF PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"61:103:15:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@add_3461":{"entryPoint":105,"id":3461,"parameterSlots":1,"returnSlots":0},"@sum_3451":{"entryPoint":115,"id":3451,"parameterSlots":0,"returnSlots":0},"abi_decode_t_uint256":{"entryPoint":156,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":175,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":215,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":228,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":126,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":121,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":136,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1374:16","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:16","statements":[{"nodeType":"YulAssignment","src":"57:19:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:16","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:16"},"nodeType":"YulFunctionCall","src":"67:9:16"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:16"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:16","type":""}],"src":"7:75:16"},{"body":{"nodeType":"YulBlock","src":"177:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:16"},"nodeType":"YulFunctionCall","src":"187:12:16"},"nodeType":"YulExpressionStatement","src":"187:12:16"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:16"},{"body":{"nodeType":"YulBlock","src":"300:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:16"},"nodeType":"YulFunctionCall","src":"310:12:16"},"nodeType":"YulExpressionStatement","src":"310:12:16"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:16"},{"body":{"nodeType":"YulBlock","src":"379:32:16","statements":[{"nodeType":"YulAssignment","src":"389:16:16","value":{"name":"value","nodeType":"YulIdentifier","src":"400:5:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:16"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:16","type":""}],"src":"334:77:16"},{"body":{"nodeType":"YulBlock","src":"460:79:16","statements":[{"body":{"nodeType":"YulBlock","src":"517:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"526:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"529:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"519:6:16"},"nodeType":"YulFunctionCall","src":"519:12:16"},"nodeType":"YulExpressionStatement","src":"519:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"483:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"508:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"490:17:16"},"nodeType":"YulFunctionCall","src":"490:24:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"480:2:16"},"nodeType":"YulFunctionCall","src":"480:35:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"473:6:16"},"nodeType":"YulFunctionCall","src":"473:43:16"},"nodeType":"YulIf","src":"470:63:16"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"453:5:16","type":""}],"src":"417:122:16"},{"body":{"nodeType":"YulBlock","src":"597:87:16","statements":[{"nodeType":"YulAssignment","src":"607:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"629:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"616:12:16"},"nodeType":"YulFunctionCall","src":"616:20:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"607:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"672:5:16"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"645:26:16"},"nodeType":"YulFunctionCall","src":"645:33:16"},"nodeType":"YulExpressionStatement","src":"645:33:16"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"575:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"583:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"591:5:16","type":""}],"src":"545:139:16"},{"body":{"nodeType":"YulBlock","src":"756:263:16","statements":[{"body":{"nodeType":"YulBlock","src":"802:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"804:77:16"},"nodeType":"YulFunctionCall","src":"804:79:16"},"nodeType":"YulExpressionStatement","src":"804:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"777:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"786:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"773:3:16"},"nodeType":"YulFunctionCall","src":"773:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"798:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"769:3:16"},"nodeType":"YulFunctionCall","src":"769:32:16"},"nodeType":"YulIf","src":"766:119:16"},{"nodeType":"YulBlock","src":"895:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"910:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"924:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"914:6:16","type":""}]},{"nodeType":"YulAssignment","src":"939:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"974:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"985:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"970:3:16"},"nodeType":"YulFunctionCall","src":"970:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"994:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"949:20:16"},"nodeType":"YulFunctionCall","src":"949:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"939:6:16"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"726:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"737:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"749:6:16","type":""}],"src":"690:329:16"},{"body":{"nodeType":"YulBlock","src":"1090:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1107:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1130:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1112:17:16"},"nodeType":"YulFunctionCall","src":"1112:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1100:6:16"},"nodeType":"YulFunctionCall","src":"1100:37:16"},"nodeType":"YulExpressionStatement","src":"1100:37:16"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1078:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1085:3:16","type":""}],"src":"1025:118:16"},{"body":{"nodeType":"YulBlock","src":"1247:124:16","statements":[{"nodeType":"YulAssignment","src":"1257:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1269:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1280:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1265:3:16"},"nodeType":"YulFunctionCall","src":"1265:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1257:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1337:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1350:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1361:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1346:3:16"},"nodeType":"YulFunctionCall","src":"1346:17:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"1293:43:16"},"nodeType":"YulFunctionCall","src":"1293:71:16"},"nodeType":"YulExpressionStatement","src":"1293:71:16"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1219:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1231:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1242:4:16","type":""}],"src":"1149:222:16"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":16,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052348015600f57600080fd5b506004361060325760003560e01c80631003e2d2146037578063853255cc14604f575b600080fd5b604d60048036038101906049919060af565b6069565b005b60556073565b6040516060919060e4565b60405180910390f35b8060008190555050565b60005481565b600080fd5b6000819050919050565b608f81607e565b8114609957600080fd5b50565b60008135905060a9816088565b92915050565b60006020828403121560c25760c16079565b5b600060ce84828501609c565b91505092915050565b60de81607e565b82525050565b600060208201905060f7600083018460d7565b9291505056fea26469706673582212202f2a79ae80ca250523161b125d9e79152cac96df46d5d95d5127f248ac2e340f64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1003E2D2 EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0x853255CC EQ PUSH1 0x4F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH1 0x49 SWAP2 SWAP1 PUSH1 0xAF JUMP JUMPDEST PUSH1 0x69 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x55 PUSH1 0x73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x60 SWAP2 SWAP1 PUSH1 0xE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8F DUP2 PUSH1 0x7E JUMP JUMPDEST DUP2 EQ PUSH1 0x99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH1 0xA9 DUP2 PUSH1 0x88 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0xC2 JUMPI PUSH1 0xC1 PUSH1 0x79 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0xCE DUP5 DUP3 DUP6 ADD PUSH1 0x9C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xDE DUP2 PUSH1 0x7E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xF7 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0xD7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F 0x2A PUSH26 0xAE80CA250523161B125D9E79152CAC96DF46D5D95D5127F248AC 0x2E CALLVALUE 0xF PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"61:103:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;105:56;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;81:15;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;105:56;151:2;145:3;:8;;;;105:56;:::o;81:15::-;;;;:::o;88:117:16:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:118::-;1112:24;1130:5;1112:24;:::i;:::-;1107:3;1100:37;1025:118;;:::o;1149:222::-;1242:4;1280:2;1269:9;1265:18;1257:26;;1293:71;1361:1;1350:9;1346:17;1337:6;1293:71;:::i;:::-;1149:222;;;;:::o"},"methodIdentifiers":{"add(uint256)":"1003e2d2","sum()":"853255cc"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_a\",\"type\":\"uint256\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Sum.sol\":\"Sum\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Sum.sol\":{\"keccak256\":\"0x772fc8689a1fdf8a43ec9c6f9d9f6608e5bbdb2f5b5685b28de4b9f0b4be74ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6665b511ef8dc803d870c429293e04b9dfcc74d9c7d5b93435947f0f8c04293d\",\"dweb:/ipfs/QmWmg2whsTq6DNyNFsAttFSi4JRw4es6dyTNwypehr2Um2\"]}},\"version\":1}"}}}}}